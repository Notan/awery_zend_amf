<?xml version="1.0" encoding="utf-8"?>
<project title="Zend AMF API Documentation" version="2.8.5">
  <partials/>
  <file path="Session/Validator/HttpUserAgent.php" generated-path="Session.Validator.HttpUserAgent.html" hash="69e79c53272166ab4185a841139dc68b" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Session\Validator">
      <extends>\Zend_Session_Validator_Abstract</extends>
      <name>Zend_Session_Validator_HttpUserAgent</name>
      <full_name>\Zend_Session_Validator_HttpUserAgent</full_name>
      <docblock line="37">
        <description>Zend_Session_Validator_HttpUserAgent</description>
        <long-description></long-description>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Session"/>
        <tag name="subpackage" line="37" description="Validator"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Session_Validator_Abstract" refers="\Zend_Session_Validator_Abstract" link="/classes/Zend_Session_Validator_Abstract.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="Zend_Session\Validator">
        <name>setup</name>
        <full_name>\Zend_Session_Validator_HttpUserAgent::setup()</full_name>
        <docblock line="46">
          <description>Setup() - this method will get the current user agent and store it in the session
as 'valid data'</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="Zend_Session\Validator">
        <name>validate</name>
        <full_name>\Zend_Session_Validator_HttpUserAgent::validate()</full_name>
        <docblock line="58">
          <description>Validate() - this method will determine if the current user agent matches the
user agent we stored when we initialized this variable.</description>
          <long-description></long-description>
          <tag name="return" line="58" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="48" package="Zend_Session\Validator">
        <name>setValidData</name>
        <full_name>\Zend_Session_Validator_Abstract::setValidData()</full_name>
        <docblock line="48">
          <description>SetValidData() - This method should be used to store the environment variables that
will be needed in order to validate the session later in the validate() method.</description>
          <long-description>These values are stored in the session in the __ZF namespace, in an array named VALID</long-description>
          <tag name="param" line="48" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="48" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Zend_Session_Validator_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="62" package="Zend_Session\Validator">
        <name>getValidData</name>
        <full_name>\Zend_Session_Validator_Abstract::getValidData()</full_name>
        <docblock line="62">
          <description>GetValidData() - This method should be used to retrieve the environment variables that
will be needed to 'validate' a session.</description>
          <long-description></long-description>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Session_Validator_Abstract</inherited_from>
      </method>
    </class>
    <source>eJzVVEtPGzEQvu+vmANSEtTsUiQuUMozLZEQQkng0KqKvN5J1sWxU9ubJSD+e8feR2l5CFXqoXtJPI9vvvnG4w8Hy3wZJZubEWzCF1QZfDJsgaU2N2TxxvPhyeBiPKhPk1xYsLowHGEmJII/Ful35A6cBpcjKCzheHwKUnBUFsnGnA9LC5VJzDxKKVxOdjIuGb9hc4JRITdA1hVjd+tiHz0M6UxaDWzFhGSp9KhGF/M8ZBFbmfVLkWG/xBSoXMC+Gp3v+vzcueVuksyaxuI76jPmepHUFBOi3E9toDacwVoXkIkMlHZgkKNYITDgerkGPQsFm9YY6cUMQqEqTtoj6NQxake4Vzi+g6VERgjWS84U4IIa89kkYo1+2NAkvaFE4BQWwj2/mo9YLDATzKFcx/WEDjkd59qsAcJAg62RubZNx2it0KqKJyAj5rkDOGn/dnkPtre2dvrbW+93qosxQZ4rLfVcIGk7PoKh4jF0a3XLsmx17QXcRiT63jwBHwwX9QU6r3wBbIXGE/bujWG2EWxWKB7gAS4NrgSljbCSdSveppAkam72oUX8rfPpNZMiY06b6VFqnWHchQSDPwphcKo9dMdnJHVG0mYkTUZMu9PZix6vzzP4Z9T8lUVzNEfl/nZItGONu0X+X6aXRFwya9+kD+Cto7AXg9th3UeRrxak998mjNEVy24P+tX2L9DlOqOnRkqYowtLyAtjfJGCygEL9fwKW0JGv7D1K2Qb4StgZqGz8gyAOLBObW68h4bqGgUrLbLaloTfZZGSPjArFHf+6tqKX/DdV5H+Nnuy/Y/kDE2eUoUudIUlQ3djOh6Mrgejr52zyeRyekWn6dHnwcWk863XAvjvAF4JhV1QhZQ96O2FpIcnytXy4vPiZejQLIQihWYvqbhgjud0scjdgD7y0uMVJCbAHJU/CiWcoKp3ZAsFV8wI/4bGL6ibai1fVXfV9vCnwDXdY6NLT2n/36i7F7U5NeUnhff3m2nPH0/711geop/O714h</source>
  </file>
  <file path="Session/Validator/Exception.php" generated-path="Session.Validator.Exception.html" hash="aac8582b27b044d5d6ae6eca03f23e9b" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="39" package="Zend_Session\Validator">
      <extends>\Zend_Session_Exception</extends>
      <name>Zend_Session_Validator_Exception</name>
      <full_name>\Zend_Session_Validator_Exception</full_name>
      <docblock line="39">
        <description>Zend_Session_Validator_Exception</description>
        <long-description></long-description>
        <tag name="category" line="39" description="Zend"/>
        <tag name="package" line="39" description="Zend_Session"/>
        <tag name="subpackage" line="39" description="Validator"/>
        <tag name="copyright" line="39" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="39" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Session_Exception" refers="\Zend_Session_Exception" link="/classes/Zend_Session_Exception.html"/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="46" package="Zend_Session">
        <name>$sessionStartError</name>
        <full_name>\Zend_Session_Exception::sessionStartError</full_name>
        <default>null</default>
        <docblock line="46">
          <description>sessionStartError</description>
          <long-description></long-description>
          <tag name="see" line="46" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="var" line="46" description="&lt;p&gt;PHP Error Message&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="56" package="Zend_Session">
        <name>handleSessionStartError</name>
        <full_name>\Zend_Session_Exception::handleSessionStartError()</full_name>
        <docblock line="56">
          <description>handleSessionStartError() - interface for set_error_handler()</description>
          <long-description></long-description>
          <tag name="see" line="56" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="param" line="56" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="56" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="return" line="56" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Zend_Session_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="69" package="Zend_Session">
        <name>handleSilentWriteClose</name>
        <full_name>\Zend_Session_Exception::handleSilentWriteClose()</full_name>
        <docblock line="69">
          <description>handleSilentWriteClose() - interface for set_error_handler()</description>
          <long-description></long-description>
          <tag name="see" line="69" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="param" line="69" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="69" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="return" line="69" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Zend_Session_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <source>eJzVU02P0zAQvftXzGGl3a1oXCrtZUGisBSpUrVC24UDl8pxpolZxw6207Qg/jtjJynqgQ9xI6f4+c3zmzf2y1dN1TA+mTCYwCc0BbxzosbOuidCIrhe3S3vN8th9VgpD962TiLslEaIyzb/jDJAsBAqBIMdvNm8Ba0kGo+EiRBpeWsKjUVU6VSoCCewEfJJlCRjUm2SHE7MwiFkkb1K5UJ7C2IvlBa5jqrOtmWVqsitLqadKnDaYQ50XNL+8LC+jfVVCM0t57uxsewr9ZlJW/PBIifL09wna6sdHG0LhSrA2AAOJao9ggBpmyPYXTpwbE1QXsIhtKb3ZKOCzYOgdlT4jcdn0GgUpOBj5MIA1tRYrKYQB/XFaJPyhg5BEi3Ro7/Bj6prLJQIqI/ZMKGFpGVp3REgDTRhY8wDtt2g98qank9CTpVVALg7/V7Ja5jPZjfT+ez5TX8xHlFWxmpbKqRsN69hZWQGV0O6Xdedcr1OumNI9P31BCIZ7ocLtO73ktgeXTQcty9WxUXCvDIyyQO8d7hXVPaAfayzbE4Uzth4tRce8az17fIgsQl9CJw5/NIqh1sbJS8jkQ9EfiJm9FQuX/zUPJP7KLQqRLDuTPifBkLvadw+qf4vk+JMauH9H7MBPASi+F/N5Btj3xn7AUGzgM0=</source>
  </file>
  <file path="Session/Validator/Interface.php" generated-path="Session.Validator.Interface.html" hash="6e54358cefb41ccb7e591eaba391f74e" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <interface namespace="" line="32" package="Zend_Session\Validator">
      <name>Zend_Session_Validator_Interface</name>
      <full_name>\Zend_Session_Validator_Interface</full_name>
      <docblock line="32">
        <description>Zend_Session_Validator_Interface</description>
        <long-description></long-description>
        <tag name="category" line="32" description="Zend"/>
        <tag name="package" line="32" description="Zend_Session"/>
        <tag name="subpackage" line="32" description="Validator"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="41" package="Zend_Session\Validator">
        <name>setup</name>
        <full_name>\Zend_Session_Validator_Interface::setup()</full_name>
        <docblock line="41">
          <description>Setup() - this method will store the environment variables
necessary to be able to validate against in future requests.</description>
          <long-description></long-description>
          <tag name="return" line="41" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="Zend_Session\Validator">
        <name>validate</name>
        <full_name>\Zend_Session_Validator_Interface::validate()</full_name>
        <docblock line="50">
          <description>Validate() - this method will be called at the beginning of
every session to determine if the current environment matches
that which was store in the setup() procedure.</description>
          <long-description></long-description>
          <tag name="return" line="50" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <source>eJzVlMGO0zAQhu95ijnsoa1oUirtZUGisCxSpdUKbRcOXCrHniZmHTvYTkJBvDtjxykrAQviRi6tJzO/Z77MzPMXbd1mxWKRwQI+oBbwxrIGB2PvyRKM19vLq5vdVTrd1dKBM53lCAepEMKxKz8i9+AN+BpB4wCvdq9BSY7aIdmYD25lp4VCEVQG6Wuyk7Fl/J5VJKNjbJRMN+b+s8+D9zaGM+UMsJ5JxUoVVK3pqjpGUbZKLAcpcDlgCXRd1H53e30R4mvv24uiOEyF5V+ozpybpkgpFpTysnQxte0BjqYDIQVo48EiR9kjMOCmPYI5xAun0hjxYhah02NOJiiY0jMqR/pHcnwCrUJGCi4gZxqwocJCNEFM6pspTeINAwInt+ge8kv5yKZBIZlHdczTF9pwOlbGHgHiB422CXOy7XfonDR69CchK6vaA1ye/s74HNar1flyvXp6PjbGHfJaG2UqicR29xK2mucwS3SHYThxnUfdCRI9f/0FgjPcpAa6Ht9FsR5tSDi8PtuKs2hzUvMoD/DWYi8p7BZHrKt8TS5F9rCzp6L375mSgnlj91vt0R4Yx39lR60/vT6p/i9Qi0xO5f+Zz9csCyoRZ3gWsEPftbM5LMdha9DXRtBkKwWOYjF2PepeWqMb1B56ZmUYEzcpaJot5xjRpqYvaZrGGSLHeD8ZKhok58NyOHS+I02Lnzp03uVJY5LaWMrGauiNFMlWxN+2K4kGhWvuQ/+4MetnP5WTisZfV1SG8VO0vcblgmSopNZSV7QSJgmkJj3SDZFiKEQg4WukpvU27g3eWRtQPMTSMM/rH1DithxqyWsYmEso03ZMyUNrDUdBPH6HoTSG5kA/SqI/FUwwvmXfAQMw7cQ=</source>
  </file>
  <file path="Session/Validator/Abstract.php" generated-path="Session.Validator.Abstract.html" hash="b7611e8d3ebb1d8839536e49b7d292b0" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="37" package="Zend_Session\Validator">
      <extends/>
      <implements>\Zend_Session_Validator_Interface</implements>
      <name>Zend_Session_Validator_Abstract</name>
      <full_name>\Zend_Session_Validator_Abstract</full_name>
      <docblock line="37">
        <description>Zend_Session_Validator_Abstract</description>
        <long-description></long-description>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Session"/>
        <tag name="subpackage" line="37" description="Validator"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="48" package="Zend_Session\Validator">
        <name>setValidData</name>
        <full_name>\Zend_Session_Validator_Abstract::setValidData()</full_name>
        <docblock line="48">
          <description>SetValidData() - This method should be used to store the environment variables that
will be needed in order to validate the session later in the validate() method.</description>
          <long-description>These values are stored in the session in the __ZF namespace, in an array named VALID</long-description>
          <tag name="param" line="48" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="48" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="62" package="Zend_Session\Validator">
        <name>getValidData</name>
        <full_name>\Zend_Session_Validator_Abstract::getValidData()</full_name>
        <docblock line="62">
          <description>GetValidData() - This method should be used to retrieve the environment variables that
will be needed to 'validate' a session.</description>
          <long-description></long-description>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzVVE1vEzEQve+vmEOlJBXZLZW4UBAttKBIVUGk9FCEIseeZA2OHWzvbgPqf2fstdOWz8KNvSQez7x588YzT56t63VR7e4WsAuXqAW8tGyFnbGfyBKMp5MXJ2fTk3Q6r6UDZxrLERZSIYRjM/+I3IM34GsEjR08nx6Dkhy1Q7IxH9zmjRYKRUDppK/JTsY145/YkmB0jI2QKWPpr3wZvCcxnClngLVMKjZXAdWaZlnHKGKrxLiTAscdzoHSRex3b08fh/ja+/XjqlrkwsovVGfJzapKFCuiPJ67SG2ygI1pQEgB2niwyFG2CAy4WW/ALGLCXBojvZhFaHTPyQQEM/eMypH+NxwfwFohIwQXJGcacEWFhWgSMaEfZpqkN3QInNyie+CX+MjVCoVkHtWmTB065HRcGrsBiA2Ntixzss2m6Jw0uvcnICuXtQd4sf075CPY39t7NN7fe/iofxjnyGttlFlKJG2nRzDRvIRhUrfruq2uo4ibRaLv3h0IznCWHtBpfxfBWrSBcLjemYidaHNS8wgP8MZiKynsLfay7pX75FIV+WUfOsQ7lc8umJKCeWNnE+3RLhjHGGHxcyMtzkzAHoSQKoVU25BqG1LS9AwOitsD9JMMR3PnLeP+XztEA5avt6D/S+uqgqXqgSvm3J80oidNo7FC7X/petOwr0URskb1w7cLU/TR8Zh5NhzBuF9YK/S1EeBq0ygBcxpYhyKMmiM8jPOJupXW6JAYWmZlGGgXd1eG7qRSIVYjCoqmETdWoA0wbc+tR3I9YVBksHmxZQ/i1JMpM+x5jS7eN5QvLJPISeTAjJaOs9nlS9DUC0cvAh8EM60FZi3bRLOAi6PTyXECzznodVH/AFbyijx2iAjbXln0jdXQGimSrYq/a2s8bXXyXzSa+8DB3RY3ooyi69c+MMxmm7t0RmTgKSzRz2LfhzthJ48Oihvf2fRkOp28Pns/CFUNPrwfRO705y7MB8KJ2Q5i7HXxQ9df/V3XqWQrsf3HxhPAILdzQIs4daj8XvMkbNT8T8ou7xTw96JmV7mAoXTUp+H91R2NbuUKXyJ+f4Sb/NfFdyC6UWrbtuviGzcOqsQ=</source>
  </file>
  <file path="Session/Exception.php" generated-path="Session.Exception.html" hash="8eacb920a7c40845b1be1dafe9991de9" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="38" package="Zend_Session">
      <extends>\Zend_Exception</extends>
      <name>Zend_Session_Exception</name>
      <full_name>\Zend_Session_Exception</full_name>
      <docblock line="38">
        <description>Zend_Session_Exception</description>
        <long-description></long-description>
        <tag name="category" line="38" description="Zend"/>
        <tag name="package" line="38" description="Zend_Session"/>
        <tag name="copyright" line="38" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="38" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Exception" refers="\Zend_Exception" link="/classes/Zend_Exception.html"/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="46" package="Zend_Session">
        <name>$sessionStartError</name>
        <full_name>\Zend_Session_Exception::sessionStartError</full_name>
        <default>null</default>
        <docblock line="46">
          <description>sessionStartError</description>
          <long-description></long-description>
          <tag name="see" line="46" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="var" line="46" description="&lt;p&gt;PHP Error Message&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="56" package="Zend_Session">
        <name>handleSessionStartError</name>
        <full_name>\Zend_Session_Exception::handleSessionStartError()</full_name>
        <docblock line="56">
          <description>handleSessionStartError() - interface for set_error_handler()</description>
          <long-description></long-description>
          <tag name="see" line="56" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="param" line="56" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="56" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="return" line="56" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="69" package="Zend_Session">
        <name>handleSilentWriteClose</name>
        <full_name>\Zend_Session_Exception::handleSilentWriteClose()</full_name>
        <docblock line="69">
          <description>handleSilentWriteClose() - interface for set_error_handler()</description>
          <long-description></long-description>
          <tag name="see" line="69" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="param" line="69" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="69" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="return" line="69" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="56" code="PPC:ERR-50015">Argument $errfile is missing from the Docblock of handleSessionStartError</error>
      <error line="56" code="PPC:ERR-50015">Argument $errline is missing from the Docblock of handleSessionStartError</error>
      <error line="56" code="PPC:ERR-50015">Argument $errcontext is missing from the Docblock of handleSessionStartError</error>
      <error line="69" code="PPC:ERR-50015">Argument $errfile is missing from the Docblock of handleSilentWriteClose</error>
      <error line="69" code="PPC:ERR-50015">Argument $errline is missing from the Docblock of handleSilentWriteClose</error>
      <error line="69" code="PPC:ERR-50015">Argument $errcontext is missing from the Docblock of handleSilentWriteClose</error>
    </parse_markers>
    <source>eJzlVN9v0zAQfu9fcRKT2lVrUor20jExGJ2oVMa0DiHtpXKca2Pm2sF2mhbE/87ZSQqUteIBXiAvse/Hd999Z/v5izzLW3G324Iu3KNK4cqwJZbaPJDFGyfjy9H1dFTv7jJhwerCcIS5kAh+WyQfkTtwGlyGoLCEV9PXIAVHZZFszPmwpFCpxNSjlMJlZCdjzvgDWxCMCrkBsq4YubWLfPQ4pDNpNbAVE5Il0qMaXSyykEVsZdorRYq9EhOgcgH7/e1k6PMz5/JhHM+bxqLP1GfE9TKuKcZEuZfYQG08h40uIBUpKO3AIEexQmDAdb4BPQ8Fm9YY6cUMQqEqTtoj6MQxake4AxxPIJfICMF6yZkCXFJjPptErNEvGpqkN5QInMJCuOdX8xHLJaaCOZSbqJ7QBaftQpsNQBhosDUy17bZFK0VWlXxBGTEInMAl9tlhx/DoN8/7Q36T0+rg3GHPFNa6oVA0nb6EsaKR9Cp1S3LcqvrccBtRKLvtyfgg+G6PkCTyhfAVmg8Ye8+GqdHwWaF4gEe4MbgSlDaLVay9qMBhcStVnO0Lyxi1fpozTF3VfNxy+CnQhicaQ/V9gHxNiCiq9E++47xo3I/wfyrssctLpm1exoHXDty2F1Zv7Q8WtDMf106tCFz6phxI2O0qR2NP8xmP1dhbYE2TowuifH9Ve/ps8HpNnfFDFhnhFrAzZsbCPjwliqS7nVQHP7WMSc45EVCzcPRL6TgHFQhJc17h37G/Ls13Y3vHEOPni2HZs78Y0gIFt0MvW9W5VDMY60enMzhbnNGGeDLhptAxZTeddZqeCctt16DrjAKVlqkB3SZF4qH4e7ruqp50sBXC/9sVyspVL3imrRZu0qB6kyEcijnw+Gj8jdIEEG7MyGgYZuWDaq3Hg/rAT9pPEp7OzRbYnQWSn3dN0bCV+6DEQ4vpbb4f0xxt+m/NsTo3N/C2ejdpB7In5snTfQblKizzQ==</source>
  </file>
  <file path="Session/Namespace.php" generated-path="Session.Namespace.html" hash="2d408f41fcefab47faf371b68710d6a9" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="44" package="Zend_Session">
      <extends>\Zend_Session_Abstract</extends>
      <implements>\IteratorAggregate</implements>
      <name>Zend_Session_Namespace</name>
      <full_name>\Zend_Session_Namespace</full_name>
      <docblock line="44">
        <description>Zend_Session_Namespace</description>
        <long-description></long-description>
        <tag name="category" line="44" description="Zend"/>
        <tag name="package" line="44" description="Zend_Session"/>
        <tag name="copyright" line="44" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="44" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Session_Abstract" refers="\Zend_Session_Abstract" link="/classes/Zend_Session_Abstract.html"/>
      </docblock>
      <constant namespace="" line="50" package="Zend_Session">
        <name>SINGLE_INSTANCE</name>
        <full_name>\Zend_Session_Namespace::SINGLE_INSTANCE</full_name>
        <value>true</value>
        <docblock line="50">
          <description>used as option to constructor to prevent additional instances to the same namespace</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="62" package="Zend_Session">
        <name>_THROW_NOT_WRITABLE_MSG</name>
        <full_name>\Zend_Session_Abstract::_THROW_NOT_WRITABLE_MSG</full_name>
        <value>'Zend_Session is currently marked as read-only.'</value>
        <docblock line="62">
          <description>Error message thrown when an action requires modification,
but current Zend_Session has been marked as read-only.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="69" package="Zend_Session">
        <name>_THROW_NOT_READABLE_MSG</name>
        <full_name>\Zend_Session_Abstract::_THROW_NOT_READABLE_MSG</full_name>
        <value>'Zend_Session is not marked as readable.'</value>
        <docblock line="69">
          <description>Error message thrown when an action requires reading session data,
but current Zend_Session is not marked as readable.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="" line="57" package="Zend_Session">
        <name>$_namespace</name>
        <full_name>\Zend_Session_Namespace::_namespace</full_name>
        <default>"Default"</default>
        <docblock line="57">
          <description>Namespace - which namespace this instance of zend-session is saving-to/getting-from</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="64" package="Zend_Session">
        <name>$_namespaceLocks</name>
        <full_name>\Zend_Session_Namespace::_namespaceLocks</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Namespace locking mechanism</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="71" package="Zend_Session">
        <name>$_singleInstances</name>
        <full_name>\Zend_Session_Namespace::_singleInstances</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>Single instance namespace array to ensure data security.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="40" package="Zend_Session">
        <name>$_writable</name>
        <full_name>\Zend_Session_Abstract::_writable</full_name>
        <default>false</default>
        <docblock line="40">
          <description>Whether or not session permits writing (modification of $_SESSION[])</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="47" package="Zend_Session">
        <name>$_readable</name>
        <full_name>\Zend_Session_Abstract::_readable</full_name>
        <default>false</default>
        <docblock line="47">
          <description>Whether or not session permits reading (reading data in $_SESSION[])</description>
          <long-description></long-description>
          <tag name="var" line="47" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="55" package="Zend_Session">
        <name>$_expiringData</name>
        <full_name>\Zend_Session_Abstract::_expiringData</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Since expiring data is handled at startup to avoid __destruct difficulties,
the data that will be expiring at end of this request is held here</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="79" package="Zend_Session">
        <name>resetSingleInstance</name>
        <full_name>\Zend_Session_Namespace::resetSingleInstance()</full_name>
        <docblock line="79">
          <description>resetSingleInstance()</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="string" variable="$namespaceName">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespaceName</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="Zend_Session">
        <name>__construct</name>
        <full_name>\Zend_Session_Namespace::__construct()</full_name>
        <docblock line="102">
          <description>__construct() - Returns an instance object bound to a particular, isolated section
of the session, identified by $namespace name (defaulting to 'Default').</description>
          <long-description>The optional argument $singleInstance will prevent construction of additional
instance objects acting as accessors to this $namespace.</long-description>
          <tag name="param" line="102" description="&lt;ul&gt;&#10;&lt;li&gt;programmatic name of the requested namespace&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="102" description="&lt;ul&gt;&#10;&lt;li&gt;prevent creation of additional accessor instance objects for this namespace&lt;/li&gt;&#10;&lt;/ul&gt;" type="boolean" variable="$singleInstance">
            <type>boolean</type>
          </tag>
          <tag name="return" line="102" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>'Default'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$singleInstance</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="Zend_Session">
        <name>getIterator</name>
        <full_name>\Zend_Session_Namespace::getIterator()</full_name>
        <docblock line="210">
          <description>getIterator() - return an iteratable object for use in foreach and the like,
this completes the IteratorAggregate interface</description>
          <long-description></long-description>
          <tag name="return" line="210" description="- iteratable container of the namespace contents" type="\ArrayObject">
            <type>\ArrayObject</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="221" package="Zend_Session">
        <name>lock</name>
        <full_name>\Zend_Session_Namespace::lock()</full_name>
        <docblock line="221">
          <description>lock() - mark a session/namespace as readonly</description>
          <long-description></long-description>
          <tag name="return" line="221" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="232" package="Zend_Session">
        <name>unlock</name>
        <full_name>\Zend_Session_Namespace::unlock()</full_name>
        <docblock line="232">
          <description>unlock() - unmark a session/namespace to enable read &amp; write</description>
          <long-description></long-description>
          <tag name="return" line="232" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="243" package="Zend_Session">
        <name>unlockAll</name>
        <full_name>\Zend_Session_Namespace::unlockAll()</full_name>
        <docblock line="243">
          <description>unlockAll() - unmark all session/namespaces to enable read &amp; write</description>
          <long-description></long-description>
          <tag name="return" line="243" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="254" package="Zend_Session">
        <name>isLocked</name>
        <full_name>\Zend_Session_Namespace::isLocked()</full_name>
        <docblock line="254">
          <description>isLocked() - return lock status, true if, and only if, read-only</description>
          <long-description></long-description>
          <tag name="return" line="254" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="265" package="Zend_Session">
        <name>unsetAll</name>
        <full_name>\Zend_Session_Namespace::unsetAll()</full_name>
        <docblock line="265">
          <description>unsetAll() - unset all variables in this namespace</description>
          <long-description></long-description>
          <tag name="return" line="265" description="" type="true">
            <type>true</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="277" package="Zend_Session">
        <name>__get</name>
        <full_name>\Zend_Session_Namespace::__get()</full_name>
        <docblock line="277">
          <description>__get() - method to get a variable in this object's current namespace</description>
          <long-description></long-description>
          <tag name="param" line="277" description="&lt;ul&gt;&#10;&lt;li&gt;programmatic name of a key, in a &lt;key,value&gt; pair in the current namespace&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="277" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="299" package="Zend_Session">
        <name>__set</name>
        <full_name>\Zend_Session_Namespace::__set()</full_name>
        <docblock line="299">
          <description>__set() - method to set a variable/value in this object's namespace</description>
          <long-description></long-description>
          <tag name="param" line="299" description="&lt;ul&gt;&#10;&lt;li&gt;programmatic name of a key, in a &lt;key,value&gt; pair in the current namespace&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="299" description="&lt;ul&gt;&#10;&lt;li&gt;value in the &lt;key,value&gt; pair to assign to the $name key&lt;/li&gt;&#10;&lt;/ul&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="299" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="299" description="" type="true">
            <type>true</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="342" package="Zend_Session">
        <name>apply</name>
        <full_name>\Zend_Session_Namespace::apply()</full_name>
        <docblock line="342">
          <description>apply() - enables applying user-selected function, such as array_merge() to the namespace
Parameters following the $callback argument are passed to the callback function.</description>
          <long-description>Caveat: ignores members expiring now.

Example:
  $namespace-&gt;apply('array_merge', array('tree' =&gt; 'apple', 'fruit' =&gt; 'peach'), array('flower' =&gt; 'rose'));
  $namespace-&gt;apply('count');</long-description>
          <tag name="param" line="342" description="&lt;ul&gt;&#10;&lt;li&gt;callback function&lt;/li&gt;&#10;&lt;/ul&gt;" type="string|array" variable="$callback">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="361" package="Zend_Session">
        <name>applySet</name>
        <full_name>\Zend_Session_Namespace::applySet()</full_name>
        <docblock line="361">
          <description>applySet() - enables applying user-selected function, and sets entire namespace to the result
Result of $callback must be an array.</description>
          <long-description>Parameters following the $callback argument are passed to the callback function.
Caveat: ignores members expiring now.

Example:
  $namespace-&gt;applySet('array_merge', array('tree' =&gt; 'apple', 'fruit' =&gt; 'peach'), array('flower' =&gt; 'rose'));</long-description>
          <tag name="param" line="361" description="&lt;ul&gt;&#10;&lt;li&gt;callback function&lt;/li&gt;&#10;&lt;/ul&gt;" type="string|array" variable="$callback">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="384" package="Zend_Session">
        <name>__isset</name>
        <full_name>\Zend_Session_Namespace::__isset()</full_name>
        <docblock line="384">
          <description>__isset() - determine if a variable in this object's namespace is set</description>
          <long-description></long-description>
          <tag name="param" line="384" description="&lt;ul&gt;&#10;&lt;li&gt;programmatic name of a key, in a &lt;key,value&gt; pair in the current namespace&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="384" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="404" package="Zend_Session">
        <name>__unset</name>
        <full_name>\Zend_Session_Namespace::__unset()</full_name>
        <docblock line="404">
          <description>__unset() - unset a variable in this object's namespace.</description>
          <long-description></long-description>
          <tag name="param" line="404" description="&lt;ul&gt;&#10;&lt;li&gt;programmatic name of a key, in a &lt;key,value&gt; pair in the current namespace&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="404" description="" type="true">
            <type>true</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="427" package="Zend_Session">
        <name>setExpirationSeconds</name>
        <full_name>\Zend_Session_Namespace::setExpirationSeconds()</full_name>
        <docblock line="427">
          <description>setExpirationSeconds() - expire the namespace, or specific variables after a specified
number of seconds</description>
          <long-description></long-description>
          <tag name="param" line="427" description="&lt;ul&gt;&#10;&lt;li&gt;expires in this many seconds&lt;/li&gt;&#10;&lt;/ul&gt;" type="integer" variable="$seconds">
            <type>integer</type>
          </tag>
          <tag name="param" line="427" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL list of variables to expire (defaults to all)&lt;/li&gt;&#10;&lt;/ul&gt;" type="mixed" variable="$variables">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="427" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="427" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$variables</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="475" package="Zend_Session">
        <name>setExpirationHops</name>
        <full_name>\Zend_Session_Namespace::setExpirationHops()</full_name>
        <docblock line="475">
          <description>setExpirationHops() - expire the namespace, or specific variables after a specified
number of page hops</description>
          <long-description></long-description>
          <tag name="param" line="475" description="&lt;ul&gt;&#10;&lt;li&gt;how many &quot;hops&quot; (number of subsequent requests) before expiring&lt;/li&gt;&#10;&lt;/ul&gt;" type="integer" variable="$hops">
            <type>integer</type>
          </tag>
          <tag name="param" line="475" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL list of variables to expire (defaults to all)&lt;/li&gt;&#10;&lt;/ul&gt;" type="mixed" variable="$variables">
            <type>mixed</type>
          </tag>
          <tag name="param" line="475" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL if set, only count a hop/request if this namespace is used&lt;/li&gt;&#10;&lt;/ul&gt;" type="boolean" variable="$hopCountOnUsageOnly">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="475" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="475" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hops</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$variables</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$hopCountOnUsageOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="525" package="Zend_Session">
        <name>getNamespace</name>
        <full_name>\Zend_Session_Namespace::getNamespace()</full_name>
        <docblock line="525">
          <description>Returns the namespace name</description>
          <long-description></long-description>
          <tag name="return" line="525" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="79" package="Zend_Session">
        <name>_namespaceIsset</name>
        <full_name>\Zend_Session_Abstract::_namespaceIsset()</full_name>
        <docblock line="79">
          <description>namespaceIsset() - check to see if a namespace or a variable within a namespace is set</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="105" package="Zend_Session">
        <name>_namespaceUnset</name>
        <full_name>\Zend_Session_Abstract::_namespaceUnset()</full_name>
        <docblock line="105">
          <description>namespaceUnset() - unset a namespace or a variable within a namespace</description>
          <long-description></long-description>
          <tag name="param" line="105" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="throws" line="105" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="105" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="140" package="Zend_Session">
        <name>_namespaceGet</name>
        <full_name>\Zend_Session_Abstract::_namespaceGet()</full_name>
        <docblock line="140">
          <description>namespaceGet() - Get $name variable from $namespace, returning by reference.</description>
          <long-description></long-description>
          <tag name="param" line="140" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="140" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="140" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="177" package="Zend_Session">
        <name>_namespaceGetAll</name>
        <full_name>\Zend_Session_Abstract::_namespaceGetAll()</full_name>
        <docblock line="177">
          <description>namespaceGetAll() - Get an array containing $namespace, including expiring data.</description>
          <long-description></long-description>
          <tag name="param" line="177" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="177" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="177" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Session/SaveHandler/Exception.php" generated-path="Session.SaveHandler.Exception.html" hash="9acfa6088ea89c202677b62adf7a9638" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="36" package="Zend_Session">
      <extends>\Zend_Session_Exception</extends>
      <name>Zend_Session_SaveHandler_Exception</name>
      <full_name>\Zend_Session_SaveHandler_Exception</full_name>
      <docblock line="36">
        <description>Zend_Session_SaveHandler_Exception</description>
        <long-description></long-description>
        <tag name="category" line="36" description="Zend"/>
        <tag name="package" line="36" description="Zend_Session"/>
        <tag name="copyright" line="36" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="36" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Session_Exception" refers="\Zend_Session_Exception" link="/classes/Zend_Session_Exception.html"/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="46" package="Zend_Session">
        <name>$sessionStartError</name>
        <full_name>\Zend_Session_Exception::sessionStartError</full_name>
        <default>null</default>
        <docblock line="46">
          <description>sessionStartError</description>
          <long-description></long-description>
          <tag name="see" line="46" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="var" line="46" description="&lt;p&gt;PHP Error Message&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="56" package="Zend_Session">
        <name>handleSessionStartError</name>
        <full_name>\Zend_Session_Exception::handleSessionStartError()</full_name>
        <docblock line="56">
          <description>handleSessionStartError() - interface for set_error_handler()</description>
          <long-description></long-description>
          <tag name="see" line="56" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="param" line="56" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="56" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="return" line="56" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Zend_Session_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="69" package="Zend_Session">
        <name>handleSilentWriteClose</name>
        <full_name>\Zend_Session_Exception::handleSilentWriteClose()</full_name>
        <docblock line="69">
          <description>handleSilentWriteClose() - interface for set_error_handler()</description>
          <long-description></long-description>
          <tag name="see" line="69" description="" link="http://framework.zend.com/issues/browse/ZF-1325"/>
          <tag name="param" line="69" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="69" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="return" line="69" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Zend_Session_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <source>eJzdUz1v2zAQ3fUrbgiQxIhFN0CWpEDdpi4qwMhQpUsXg6LOEhuKVEnKslv0v/dIfQAeWmSuJvHx3eO7x+Pbd23dJglbLBJYwDfUJXyyvMHe2BdCArjNHjdP+WZcPdfSgTOdFQh7qRDCsiu+o/DgDfgaQWMPH/KPoKRA7ZAw7gOt6HSpsAwqvfQ14QS2XLzwimR0rI2S44mpP/o0sLNYzpUzwA9cKl6ooGpNV9WxityqctnLEpc9FkDHRe2vX7b3ob72vr1nbD81lv6kPlNhGjZaZGR5WbhoLdvDyXRQyhK08WBRoDwgcBCmPYHZxwOn1jjlxS1CpwdPJiiYwnNqR/p/eLyBViEnBRci5xqwocZCNYU4qq8nm5Q39AiCaJEe/I1+ZNNgKblHdUrHG1oLWlbGngDihUZsinnEdjk6J40e+CRkZVV7gMf590pcw+1qdbe8Xb25GwbjGUWtjTKVRMo2fw+ZFilcjen2fT/neh11p5Doe/UNBDI8jQO0Hfai2AFtMBy2L7LygjA2j+3aIZ61tdscBbZ+aJAlFn900uLOaBray0BkI5HNxJTeweXD2UuY1XJ+wM88DK89U/5f02aJUNy5V4QAePREcn9L/9fv5A8oOm9q</source>
  </file>
  <file path="Session/SaveHandler/DbTable.php" generated-path="Session.SaveHandler.DbTable.html" hash="7f43eac53e8e11d345e1cb6617d76b3b" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-webat this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="52" package="Zend_Session\SaveHandler">
      <extends>\Zend_Db_Table_Abstract</extends>
      <implements>\Zend_Session_SaveHandler_Interface</implements>
      <name>Zend_Session_SaveHandler_DbTable</name>
      <full_name>\Zend_Session_SaveHandler_DbTable</full_name>
      <docblock line="52">
        <description>Zend_Session_SaveHandler_DbTable</description>
        <long-description></long-description>
        <tag name="category" line="52" description="Zend"/>
        <tag name="package" line="52" description="Zend_Session"/>
        <tag name="subpackage" line="52" description="SaveHandler"/>
        <tag name="copyright" line="52" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="52" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <constant namespace="" line="56" package="Zend_Session\SaveHandler">
        <name>PRIMARY_ASSIGNMENT</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_ASSIGNMENT</full_name>
        <value>'primaryAssignment'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="57" package="Zend_Session\SaveHandler">
        <name>PRIMARY_ASSIGNMENT_SESSION_SAVE_PATH</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_ASSIGNMENT_SESSION_SAVE_PATH</full_name>
        <value>'sessionSavePath'</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="58" package="Zend_Session\SaveHandler">
        <name>PRIMARY_ASSIGNMENT_SESSION_NAME</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_ASSIGNMENT_SESSION_NAME</full_name>
        <value>'sessionName'</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="59" package="Zend_Session\SaveHandler">
        <name>PRIMARY_ASSIGNMENT_SESSION_ID</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_ASSIGNMENT_SESSION_ID</full_name>
        <value>'sessionId'</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="61" package="Zend_Session\SaveHandler">
        <name>MODIFIED_COLUMN</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::MODIFIED_COLUMN</full_name>
        <value>'modifiedColumn'</value>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="62" package="Zend_Session\SaveHandler">
        <name>LIFETIME_COLUMN</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::LIFETIME_COLUMN</full_name>
        <value>'lifetimeColumn'</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="63" package="Zend_Session\SaveHandler">
        <name>DATA_COLUMN</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::DATA_COLUMN</full_name>
        <value>'dataColumn'</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="65" package="Zend_Session\SaveHandler">
        <name>LIFETIME</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::LIFETIME</full_name>
        <value>'lifetime'</value>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="66" package="Zend_Session\SaveHandler">
        <name>OVERRIDE_LIFETIME</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::OVERRIDE_LIFETIME</full_name>
        <value>'overrideLifetime'</value>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="68" package="Zend_Session\SaveHandler">
        <name>PRIMARY_TYPE_NUM</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_TYPE_NUM</full_name>
        <value>'PRIMARY_TYPE_NUM'</value>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="69" package="Zend_Session\SaveHandler">
        <name>PRIMARY_TYPE_PRIMARYNUM</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_TYPE_PRIMARYNUM</full_name>
        <value>'PRIMARY_TYPE_PRIMARYNUM'</value>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="70" package="Zend_Session\SaveHandler">
        <name>PRIMARY_TYPE_ASSOC</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_TYPE_ASSOC</full_name>
        <value>'PRIMARY_TYPE_ASSOC'</value>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="71" package="Zend_Session\SaveHandler">
        <name>PRIMARY_TYPE_WHERECLAUSE</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::PRIMARY_TYPE_WHERECLAUSE</full_name>
        <value>'PRIMARY_TYPE_WHERECLAUSE'</value>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="" line="78" package="Zend_Session\SaveHandler">
        <name>$_primaryAssignment</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_primaryAssignment</full_name>
        <default>null</default>
        <docblock line="78">
          <description>Session table primary key value assignment</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="85" package="Zend_Session\SaveHandler">
        <name>$_modifiedColumn</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_modifiedColumn</full_name>
        <default>null</default>
        <docblock line="85">
          <description>Session table last modification time column</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="92" package="Zend_Session\SaveHandler">
        <name>$_lifetimeColumn</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_lifetimeColumn</full_name>
        <default>null</default>
        <docblock line="92">
          <description>Session table lifetime column</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="99" package="Zend_Session\SaveHandler">
        <name>$_dataColumn</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_dataColumn</full_name>
        <default>null</default>
        <docblock line="99">
          <description>Session table data column</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="106" package="Zend_Session\SaveHandler">
        <name>$_lifetime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_lifetime</full_name>
        <default>false</default>
        <docblock line="106">
          <description>Session lifetime</description>
          <long-description></long-description>
          <tag name="var" line="106" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="113" package="Zend_Session\SaveHandler">
        <name>$_overrideLifetime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_overrideLifetime</full_name>
        <default>false</default>
        <docblock line="113">
          <description>Whether or not the lifetime of an existing session should be overridden</description>
          <long-description></long-description>
          <tag name="var" line="113" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="120" package="Zend_Session\SaveHandler">
        <name>$_sessionSavePath</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_sessionSavePath</full_name>
        <default></default>
        <docblock line="120">
          <description>Session save path</description>
          <long-description></long-description>
          <tag name="var" line="120" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="127" package="Zend_Session\SaveHandler">
        <name>$_sessionName</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_sessionName</full_name>
        <default></default>
        <docblock line="127">
          <description>Session name</description>
          <long-description></long-description>
          <tag name="var" line="127" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Zend_Session\SaveHandler">
        <name>__construct</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::__construct()</full_name>
        <docblock line="163">
          <description>Constructor</description>
          <long-description>$config is an instance of Zend_Config or an array of key/value pairs containing configuration options for
Zend_Session_SaveHandler_DbTable and Zend_Db_Table_Abstract. These are the configuration options for
Zend_Session_SaveHandler_DbTable:

primaryAssignment =&gt; (string|array) Session table primary key value assignment
     (optional; default: 1 =&gt; sessionId) You have to assign a value to each primary key of your session table.
     The value of this configuration option is either a string if you have only one primary key or an array if
     you have multiple primary keys. The array consists of numeric keys starting at 1 and string values. There
     are some values which will be replaced by session information:

     sessionId       =&gt; The id of the current session
     sessionName     =&gt; The name of the current session
     sessionSavePath =&gt; The save path of the current session

     NOTE: One of your assignments MUST contain 'sessionId' as value!

modifiedColumn    =&gt; (string) Session table last modification time column

lifetimeColumn    =&gt; (string) Session table lifetime column

dataColumn        =&gt; (string) Session table data column

lifetime          =&gt; (integer) Session lifetime (optional; default: ini_get('session.gc_maxlifetime'))

overrideLifetime  =&gt; (boolean) Whether or not the lifetime of an existing session should be overridden
     (optional; default: false)</long-description>
          <tag name="param" line="163" description="&lt;p&gt;User-provided configuration&lt;/p&gt;" type="\Zend_Config|array" variable="$config">
            <type>\Zend_Config</type>
            <type>array</type>
          </tag>
          <tag name="return" line="163" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="163" description="" type="\Zend_Session_SaveHandler_Exception">
            <type>\Zend_Session_SaveHandler_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Zend_Config|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="215" package="Zend_Session\SaveHandler">
        <name>__destruct</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::__destruct()</full_name>
        <docblock line="215">
          <description>Destructor</description>
          <long-description></long-description>
          <tag name="return" line="215" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="229" package="Zend_Session\SaveHandler">
        <name>setLifetime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::setLifetime()</full_name>
        <docblock line="229">
          <description>Set session lifetime and optional whether or not the lifetime of an existing session should be overridden</description>
          <long-description>$lifetime === false resets lifetime to session.gc_maxlifetime</long-description>
          <tag name="param" line="229" description="" type="integer" variable="$lifetime">
            <type>integer</type>
          </tag>
          <tag name="param" line="229" description="&lt;p&gt;(optional)&lt;/p&gt;" type="boolean" variable="$overrideLifetime">
            <type>boolean</type>
          </tag>
          <tag name="return" line="229" description="" type="\Zend_Session_SaveHandler_DbTable">
            <type>\Zend_Session_SaveHandler_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lifetime</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$overrideLifetime</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="255" package="Zend_Session\SaveHandler">
        <name>getLifetime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::getLifetime()</full_name>
        <docblock line="255">
          <description>Retrieve session lifetime</description>
          <long-description></long-description>
          <tag name="return" line="255" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="266" package="Zend_Session\SaveHandler">
        <name>setOverrideLifetime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::setOverrideLifetime()</full_name>
        <docblock line="266">
          <description>Set whether or not the lifetime of an existing session should be overridden</description>
          <long-description></long-description>
          <tag name="param" line="266" description="" type="boolean" variable="$overrideLifetime">
            <type>boolean</type>
          </tag>
          <tag name="return" line="266" description="" type="\Zend_Session_SaveHandler_DbTable">
            <type>\Zend_Session_SaveHandler_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$overrideLifetime</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="278" package="Zend_Session\SaveHandler">
        <name>getOverrideLifetime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::getOverrideLifetime()</full_name>
        <docblock line="278">
          <description>Retrieve whether or not the lifetime of an existing session should be overridden</description>
          <long-description></long-description>
          <tag name="return" line="278" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="290" package="Zend_Session\SaveHandler">
        <name>open</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::open()</full_name>
        <docblock line="290">
          <description>Open Session</description>
          <long-description></long-description>
          <tag name="param" line="290" description="" type="string" variable="$save_path">
            <type>string</type>
          </tag>
          <tag name="param" line="290" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="290" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$save_path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="303" package="Zend_Session\SaveHandler">
        <name>close</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::close()</full_name>
        <docblock line="303">
          <description>Close session</description>
          <long-description></long-description>
          <tag name="return" line="303" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="314" package="Zend_Session\SaveHandler">
        <name>read</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::read()</full_name>
        <docblock line="314">
          <description>Read session data</description>
          <long-description></long-description>
          <tag name="param" line="314" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="314" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="338" package="Zend_Session\SaveHandler">
        <name>write</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::write()</full_name>
        <docblock line="338">
          <description>Write session data</description>
          <long-description></long-description>
          <tag name="param" line="338" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="338" description="" type="string" variable="$data">
            <type>string</type>
          </tag>
          <tag name="return" line="338" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="370" package="Zend_Session\SaveHandler">
        <name>destroy</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::destroy()</full_name>
        <docblock line="370">
          <description>Destroy session</description>
          <long-description></long-description>
          <tag name="param" line="370" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="370" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="387" package="Zend_Session\SaveHandler">
        <name>gc</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::gc()</full_name>
        <docblock line="387">
          <description>Garbage Collection</description>
          <long-description></long-description>
          <tag name="param" line="387" description="" type="integer" variable="$maxlifetime">
            <type>integer</type>
          </tag>
          <tag name="return" line="387" description="" type="true">
            <type>true</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$maxlifetime</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="401" package="Zend_Session\SaveHandler">
        <name>_setup</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_setup()</full_name>
        <docblock line="401">
          <description>Calls other protected methods for individual setup tasks and requirement checks</description>
          <long-description></long-description>
          <tag name="return" line="401" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="417" package="Zend_Session\SaveHandler">
        <name>_setupTableName</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_setupTableName()</full_name>
        <docblock line="417">
          <description>Initialize table and schema names</description>
          <long-description></long-description>
          <tag name="return" line="417" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="417" description="" type="\Zend_Session_SaveHandler_Exception">
            <type>\Zend_Session_SaveHandler_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="439" package="Zend_Session\SaveHandler">
        <name>_setupPrimaryAssignment</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_setupPrimaryAssignment()</full_name>
        <docblock line="439">
          <description>Initialize session table primary key value assignment</description>
          <long-description></long-description>
          <tag name="return" line="439" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="439" description="" type="\Zend_Session_SaveHandler_Exception">
            <type>\Zend_Session_SaveHandler_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="478" package="Zend_Session\SaveHandler">
        <name>_checkRequiredColumns</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_checkRequiredColumns()</full_name>
        <docblock line="478">
          <description>Check for required session table columns</description>
          <long-description></long-description>
          <tag name="return" line="478" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="478" description="" type="\Zend_Session_SaveHandler_Exception">
            <type>\Zend_Session_SaveHandler_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="517" package="Zend_Session\SaveHandler">
        <name>_getPrimary</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_getPrimary()</full_name>
        <docblock line="517">
          <description>Retrieve session table primary key values</description>
          <long-description></long-description>
          <tag name="param" line="517" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="517" description="&lt;p&gt;(optional; default: self::PRIMARY_TYPE_NUM)&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="517" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="570" package="Zend_Session\SaveHandler">
        <name>_getLifetime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_getLifetime()</full_name>
        <docblock line="570">
          <description>Retrieve session lifetime considering Zend_Session_SaveHandler_DbTable::OVERRIDE_LIFETIME</description>
          <long-description></long-description>
          <tag name="param" line="570" description="" type="\Zend_Db_Table_Row_Abstract" variable="$row">
            <type>\Zend_Db_Table_Row_Abstract</type>
          </tag>
          <tag name="return" line="570" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$row</name>
          <default></default>
          <type>\Zend_Db_Table_Row_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="587" package="Zend_Session\SaveHandler">
        <name>_getExpirationTime</name>
        <full_name>\Zend_Session_SaveHandler_DbTable::_getExpirationTime()</full_name>
        <docblock line="587">
          <description>Retrieve session expiration time</description>
          <long-description></long-description>
          <tag name="param" line="587" description="" type="\Zend_Db_Table_Row_Abstract" variable="$row">
            <type>\Zend_Db_Table_Row_Abstract</type>
          </tag>
          <tag name="return" line="587" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$row</name>
          <default></default>
          <type>\Zend_Db_Table_Row_Abstract</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Session/SaveHandler/Interface.php" generated-path="Session.SaveHandler.Interface.html" hash="617704bf38e31d51b79c636480447b91" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <interface namespace="" line="33" package="Zend_Session\SaveHandler">
      <name>Zend_Session_SaveHandler_Interface</name>
      <full_name>\Zend_Session_SaveHandler_Interface</full_name>
      <docblock line="33">
        <description>Zend_Session_SaveHandler_Interface</description>
        <long-description></long-description>
        <tag name="category" line="33" description="Zend"/>
        <tag name="package" line="33" description="Zend_Session"/>
        <tag name="subpackage" line="33" description="SaveHandler"/>
        <tag name="copyright" line="33" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="33" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="see" line="33" description="" link="http://php.net/session_set_save_handler"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="Zend_Session\SaveHandler">
        <name>open</name>
        <full_name>\Zend_Session_SaveHandler_Interface::open()</full_name>
        <docblock line="42">
          <description>Open Session - retrieve resources</description>
          <long-description></long-description>
          <tag name="param" line="42" description="" type="string" variable="$save_path">
            <type>string</type>
          </tag>
          <tag name="param" line="42" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$save_path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="Zend_Session\SaveHandler">
        <name>close</name>
        <full_name>\Zend_Session_SaveHandler_Interface::close()</full_name>
        <docblock line="48">
          <description>Close Session - free resources</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="Zend_Session\SaveHandler">
        <name>read</name>
        <full_name>\Zend_Session_SaveHandler_Interface::read()</full_name>
        <docblock line="55">
          <description>Read session data</description>
          <long-description></long-description>
          <tag name="param" line="55" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="Zend_Session\SaveHandler">
        <name>write</name>
        <full_name>\Zend_Session_SaveHandler_Interface::write()</full_name>
        <docblock line="63">
          <description>Write Session - commit data to resource</description>
          <long-description></long-description>
          <tag name="param" line="63" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="63" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="71" package="Zend_Session\SaveHandler">
        <name>destroy</name>
        <full_name>\Zend_Session_SaveHandler_Interface::destroy()</full_name>
        <docblock line="71">
          <description>Destroy Session - remove data from resource for
given session id</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="Zend_Session\SaveHandler">
        <name>gc</name>
        <full_name>\Zend_Session_SaveHandler_Interface::gc()</full_name>
        <docblock line="79">
          <description>Garbage Collection - remove old session data older
than $maxlifetime (in seconds)</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="integer" variable="$maxlifetime">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$maxlifetime</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </interface>
    <source>eJzVVU1v2zAMvedX8JBDEjR2VqCXbcC6pd0WoOiGpsOAXQJZpm2tsmRIctxs2H8fJX80xdKg6G2+JKYeHx+fKPntu6qoRvFsNoIZ/ECVwkfDSmy0uaOID16tlpfX68vu7bYQFqyuDUfIhETwr3XyE7kDp8EVCAob+LC+ACk4KosUY87DklqlElPP0ghXUJyCFeN3LCcaFXIDZVcxcvcu8uhVSGfSamBbJiRLpGc1us6LkEVqZTpvRIrzBhOgcoH7283Va59fOFe9juOsbyz6RX1GXJdxJzEmyfPEBmmrDHa6hlSkoLQDgxzFFoEB19UOdBYK9q0x8osZhFq1mrRn0Ilj1I5wRzSeQCWREYP1ljMFWFJjPptM7NjPe5nkNzQInGAB7vV1ekRZYiqYQ7mLuh065/Saa7MDCBsaYr3NXWyzRmuFVi2eiIzICwewHP5O+BROF4uz+eni1Vk7GLfIC6WlzgWSt+v3sFI8gknnbtM0g6/TwNubRM+zd8CD4boboKt2LZBt0XjBfnm8SschZoXigR7gq8GtoLQbbG1dRKcEiUf7k903vVmzLX5mfhjNZqUcmoxxfKl7NPz98h7v/2Osxc7CgYwuhEihi21nl0W3sdTaphh6i0ei9+051v4ejTx/2Av/zOBLhQq6JJjTKXNGIB0zg+3dYjtgj6ctoBbBEkzlMA5yKuaKJ9YV2dEtxeG3qhMyBLJacedLaqo/eaA5aVOmb/4RupSanH5Qmhl8UuXhUtwzTA5Q3yBLoTMZUubY8Z5FerSMIbYJgQ4U+m6E2++BxqOk28mX9NdN380zy/cLpbjHFMZ7wg8La3x1r+ykBR8QeIFURe8eDUSpaRyCxMzQFdiLhEybPi2ni1kNDg4CX+Zf2mp4wsJPzCT+iC+1lNgmDCK1fLyNPoCDSPr6KRiX7F6KDJ0oESbCi+ZapXZ6WDIdrkcpR4XnfLKP9eL/jP4CCypmig==</source>
  </file>
  <file path="Session/Abstract.php" generated-path="Session.Abstract.html" hash="8207a738009ab2ddd4e02752878713dc" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="33" package="Zend_Session">
      <extends/>
      <name>Zend_Session_Abstract</name>
      <full_name>\Zend_Session_Abstract</full_name>
      <docblock line="33">
        <description>Zend_Session_Abstract</description>
        <long-description></long-description>
        <tag name="category" line="33" description="Zend"/>
        <tag name="package" line="33" description="Zend_Session"/>
        <tag name="copyright" line="33" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="33" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <constant namespace="" line="62" package="Zend_Session">
        <name>_THROW_NOT_WRITABLE_MSG</name>
        <full_name>\Zend_Session_Abstract::_THROW_NOT_WRITABLE_MSG</full_name>
        <value>'Zend_Session is currently marked as read-only.'</value>
        <docblock line="62">
          <description>Error message thrown when an action requires modification,
but current Zend_Session has been marked as read-only.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="69" package="Zend_Session">
        <name>_THROW_NOT_READABLE_MSG</name>
        <full_name>\Zend_Session_Abstract::_THROW_NOT_READABLE_MSG</full_name>
        <value>'Zend_Session is not marked as readable.'</value>
        <docblock line="69">
          <description>Error message thrown when an action requires reading session data,
but current Zend_Session is not marked as readable.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="protected" namespace="" line="40" package="Zend_Session">
        <name>$_writable</name>
        <full_name>\Zend_Session_Abstract::_writable</full_name>
        <default>false</default>
        <docblock line="40">
          <description>Whether or not session permits writing (modification of $_SESSION[])</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="47" package="Zend_Session">
        <name>$_readable</name>
        <full_name>\Zend_Session_Abstract::_readable</full_name>
        <default>false</default>
        <docblock line="47">
          <description>Whether or not session permits reading (reading data in $_SESSION[])</description>
          <long-description></long-description>
          <tag name="var" line="47" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="55" package="Zend_Session">
        <name>$_expiringData</name>
        <full_name>\Zend_Session_Abstract::_expiringData</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Since expiring data is handled at startup to avoid __destruct difficulties,
the data that will be expiring at end of this request is held here</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="79" package="Zend_Session">
        <name>_namespaceIsset</name>
        <full_name>\Zend_Session_Abstract::_namespaceIsset()</full_name>
        <docblock line="79">
          <description>namespaceIsset() - check to see if a namespace or a variable within a namespace is set</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="105" package="Zend_Session">
        <name>_namespaceUnset</name>
        <full_name>\Zend_Session_Abstract::_namespaceUnset()</full_name>
        <docblock line="105">
          <description>namespaceUnset() - unset a namespace or a variable within a namespace</description>
          <long-description></long-description>
          <tag name="param" line="105" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="throws" line="105" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="105" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="140" package="Zend_Session">
        <name>_namespaceGet</name>
        <full_name>\Zend_Session_Abstract::_namespaceGet()</full_name>
        <docblock line="140">
          <description>namespaceGet() - Get $name variable from $namespace, returning by reference.</description>
          <long-description></long-description>
          <tag name="param" line="140" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="140" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="140" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="177" package="Zend_Session">
        <name>_namespaceGetAll</name>
        <full_name>\Zend_Session_Abstract::_namespaceGetAll()</full_name>
        <docblock line="177">
          <description>namespaceGetAll() - Get an array containing $namespace, including expiring data.</description>
          <long-description></long-description>
          <tag name="param" line="177" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="177" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="177" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJztWEtv20YQvutXzMGIJcMW3QC5ODUSJ1FTAa5dWA4MtAiIFTmUtqa47HIpWm383zuzXFKkrIft+BRUB5tczs7jm5lvuPz5XTpNOx3v4KADB/AHJiH8osUMC6VvaYUXz4cfBxejgbu7nsoMMpXrACGSMQLf5uO/MDBgFJgpQoIFfBh9glgGmGRIa8Kw2DhPwhhD1lJIM6V1WkxFcCsmpCaxe61KZ7Fv7kyfpYd2u4gzBWIuZCzGMWvVKp9M7S7yNg6PChniUYFjIHNW95er8xPePzUmPfG8qAqs/w/F2Q/UzHMueuTy0Tizrg0jWKgcQhlCogxoDFDOEQQEKl2AiqzBKjRBeAmNkCelT4o1qLERFI40W3w8hDRGQRoyhlwkgDMKjHcTiE77+8pNwhsKhIDErDj75/yRsxmGUhiMF32XofcB3U6UXgDYhNq1Cma35o8wy6RKSnlSpOVkagA+1pfdoAevj4/fHL0+/ulNWRjXGEwTFauJRMJ2dAbDJOhD16FbFEWNa8/qrUCi36MzwMJw4QrovHxmlc1Rs8P8eG8Y7tm1TCaBVQ/wu8a5pG1XWMJ63H9NIl6nVdpV1P7ZODNaBOYHRszrCBckBLHIsg0A/Nvh7RYj/h3AzRSpWjUobcs/KzdAinomTQaFlkYmE+jOVCgjScDxU+qKPX80GI2Glxd/fu05XZXK93OhYaxU7BY8+z/VyhBpYAiZIS0BaWDlto9OIaJux7edJ3qnUYTWu+oiFEYwtbyEd6xzu3cjW494l0q9NJ7BVFjeY1oiZdrkKTe5mCuiGN8PkVKRU5oITwI0jw0Vy2GlkpnD6rEkWsg4hnHDBK1xnVlWkhz/3zmps0YxDumPxnXhCq3FYle8lZFPbP603NPtUdSrYQ+0pnzMKBfcL8x5RQLFFBPmNSoyzhB7JjV1QbNu6ijHOVVprjUmplWnBB2NDSRNM6FvGcIyx0cqsXzXCCBQCQXuX/96dXnjX1xe+zdXw+uzD+cD/7fRZ3J/v6WXAHL24sVa3fvfG2dVgVWJchJ3x0t+cV23PeKi2xHs1eDs07ZgNyhdF2VChJMR+eEwy9B0e3AEwRSDW67ZDGlQRzR7aiHuRAFUU9K2Bs91aremAL8foFmtwlQQsQEVmy3jvVp8m0D9TKPJdfKIpo3ypEyLvxLV0uBhqZtAS/I4LsmhJEX+UbDdDOPo5KTZ/6eOAXoNyRaK1Y9nFEHWot7BXYCpsZOkJeq17l0d+YoZxabTcwq8WkGfXt0og81ttijtC9h6my6YDZXTWyq777QwcBidOpRW4nb56FKuLbg12S5h/tqDb9/c8wrQJsG0RZuOABLSzzBYXj/Fbr2jhYNDY2ObfEmqNsn56knN8aJdYXOfbS22Ze/w8Hly75ShPqd3lpP9R+qd5ohZ3zsVPt0yY71y4e1SwPMesCuPfJFKKETC6aAHGmfKHkF4dkeaDgQPimylVGC1bff3VwHPk829+naN5M6u3dGzW+xVjfccsw/33rfQJRjo6OQQtEc3QaNzLuKcytct19r6LfRwlprFBoSeh+ZuNvnsuIT+u+Kp6cMmvtl8ZSszEYwXdBPRy15Sx/Cyo3Ym7/CxfPGqwRif/5+1LzxrWWLbmCX5JalUL5+R1FT0ETGFPUu4Y0KV0RYUNt1rVbejL3t86c1Oemg51j4jNR3DfJtju6ys83EFwJ1hspcZlXQWLSrBZn+1LWznvB3Jqrhrc86e5LlT9315WutTK13Pzc0W956YokrTMzP1GBI+i+Oah/l0x4dfPnbxl702jR4Cnfrj3B72WjhtIOJdPPxSNOyvhrO0uMq8e+4sak/6/Lay9T3+1St6n/bLzwGbOOhdC/u1UnCy/KRQC658c3gst7R8egQTtd3btWGdpy4hdt2foZ5gt4niYTsUt/G+c9/5Dz/hCIM=</source>
  </file>
  <file path="Loader.php" generated-path="Loader.html" hash="732e5842a429b2193f8a50f757b66975" package="Zend_Loader">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Loader"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="30" package="Zend_Loader">
      <extends/>
      <name>Zend_Loader</name>
      <full_name>\Zend_Loader</full_name>
      <docblock line="30">
        <description>Static methods for loading classes and files.</description>
        <long-description></long-description>
        <tag name="category" line="30" description="Zend"/>
        <tag name="package" line="30" description="Zend_Loader"/>
        <tag name="copyright" line="30" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="30" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="52" package="Zend_Loader">
        <name>loadClass</name>
        <full_name>\Zend_Loader::loadClass()</full_name>
        <docblock line="52">
          <description>Loads a class from a PHP file.  The filename must be formatted
as "$class.php".</description>
          <long-description>If $dirs is a string or an array, it will search the directories
in the order supplied, and attempt to load the first matching file.

If $dirs is null, it will split the class name at underscores to
generate a path hierarchy (e.g., "Zend_Example_Class" will map
to "Zend/Example/Class.php").

If the file was not found in the $dirs, or if no $dirs were specified,
it will attempt to load it from PHP's include_path.</long-description>
          <tag name="param" line="52" description="&lt;ul&gt;&#10;&lt;li&gt;The full class name of a Zend component.&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="52" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL Either a path or an array of paths&#10;to search.&lt;/li&gt;&#10;&lt;/ul&gt;" type="string|array" variable="$dirs">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="52" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="52" description="" type="\Zend_Exception">
            <type>\Zend_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dirs</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="114" package="Zend_Loader">
        <name>loadFile</name>
        <full_name>\Zend_Loader::loadFile()</full_name>
        <docblock line="114">
          <description>Loads a PHP file.  This is a wrapper for PHP's include() function.</description>
          <long-description>$filename must be the complete filename, including any
extension such as ".php".  Note that a security check is performed that
does not permit extended characters in the filename.  This method is
intended for loading Zend Framework files.

If $dirs is a string or an array, it will search the directories
in the order supplied, and attempt to load the first matching file.

If the file was not found in the $dirs, or if no $dirs were specified,
it will attempt to load it from PHP's include_path.

If $once is TRUE, it will use include_once() instead of include().</long-description>
          <tag name="param" line="114" description="" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="param" line="114" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL either a path or array of paths&#10;to search.&lt;/li&gt;&#10;&lt;/ul&gt;" type="string|array" variable="$dirs">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="114" description="" type="boolean" variable="$once">
            <type>boolean</type>
          </tag>
          <tag name="return" line="114" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="114" description="" type="\Zend_Exception">
            <type>\Zend_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dirs</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$once</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="162" package="Zend_Loader">
        <name>isReadable</name>
        <full_name>\Zend_Loader::isReadable()</full_name>
        <docblock line="162">
          <description>Returns TRUE if the $filename is readable, or FALSE otherwise.</description>
          <long-description>This function uses the PHP include_path, where PHP's is_readable()
does not.

Note from ZF-2900:
If you use custom error handler, please check whether return value
 from error_reporting() is zero or not.
At mark of fopen() can not suppress warning if the handler is used.</long-description>
          <tag name="param" line="162" description="" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="162" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="202" package="Zend_Loader">
        <name>explodeIncludePath</name>
        <full_name>\Zend_Loader::explodeIncludePath()</full_name>
        <docblock line="202">
          <description>Explode an include path into an array</description>
          <long-description>If no path provided, uses current include_path. Works around issues that
occur when the path includes stream schemas.</long-description>
          <tag name="param" line="202" description="" type="string|null" variable="$path">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="202" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="231" package="Zend_Loader">
        <name>autoload</name>
        <full_name>\Zend_Loader::autoload()</full_name>
        <docblock line="231">
          <description>spl_autoload() suitable implementation for supporting class autoloading.</description>
          <long-description>Attach to spl_autoload() using the following:
&lt;code&gt;
spl_autoload_register(array('Zend_Loader', 'autoload'));
&lt;/code&gt;</long-description>
          <tag name="deprecated" line="231" description="Since 1.8.0"/>
          <tag name="param" line="231" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="231" description="Class name on success; false on failure" type="string|false">
            <type>string</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="252" package="Zend_Loader">
        <name>registerAutoload</name>
        <full_name>\Zend_Loader::registerAutoload()</full_name>
        <docblock line="252">
          <description>Register {@link autoload()} with spl_autoload()</description>
          <long-description></long-description>
          <tag name="deprecated" line="252" description="Since 1.8.0"/>
          <tag name="param" line="252" description="&lt;p&gt;(optional)&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="252" description="&lt;p&gt;(optional)&lt;/p&gt;" type="boolean" variable="$enabled">
            <type>boolean</type>
          </tag>
          <tag name="return" line="252" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="252" description="if spl_autoload() is not found&#10;or if the specified class does not have an autoload() method." type="\Zend_Exception">
            <type>\Zend_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default>'Zend_Loader'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$enabled</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="284" package="Zend_Loader">
        <name>_securityCheck</name>
        <full_name>\Zend_Loader::_securityCheck()</full_name>
        <docblock line="284">
          <description>Ensure that filename does not contain exploits</description>
          <long-description></long-description>
          <tag name="param" line="284" description="" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="284" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="284" description="" type="\Zend_Exception">
            <type>\Zend_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="309" package="Zend_Loader">
        <name>_includeFile</name>
        <full_name>\Zend_Loader::_includeFile()</full_name>
        <docblock line="309">
          <description>Attempt to include() the file.</description>
          <long-description>include() is not prefixed with the @ operator because if
the file is loaded and contains a parse error, execution
will halt silently and this is difficult to debug.

Always set display_errors = Off on production servers!</long-description>
          <tag name="param" line="309" description="" type="string" variable="$filespec">
            <type>string</type>
          </tag>
          <tag name="param" line="309" description="" type="boolean" variable="$once">
            <type>boolean</type>
          </tag>
          <tag name="return" line="309" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="309" description="Since 1.5.0; use loadFile() instead"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filespec</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$once</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="330" package="Zend_Loader">
        <name>standardiseFile</name>
        <full_name>\Zend_Loader::standardiseFile()</full_name>
        <docblock line="330">
          <description>Standardise the filename.</description>
          <long-description>Convert the supplied filename into the namespace-aware standard,
based on the Framework Interop Group reference implementation:
http://groups.google.com/group/php-standards/web/psr-0-final-proposal

The filename must be formatted as "$file.php".</long-description>
          <tag name="param" line="330" description="&lt;ul&gt;&#10;&lt;li&gt;The file name to be loaded.&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="330" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Date.php" generated-path="Date.html" hash="6309366b032a1867dd65e101c9b03644" package="Zend_Date">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Date"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="36" package="Zend_Date">
      <extends>\Zend_Date_DateObject</extends>
      <name>Zend_Date</name>
      <full_name>\Zend_Date</full_name>
      <docblock line="36">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="36" description="Zend"/>
        <tag name="package" line="36" description="Zend_Date"/>
        <tag name="copyright" line="36" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="36" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Date_DateObject" refers="\Zend_Date_DateObject" link="/classes/Zend_Date_DateObject.html"/>
      </docblock>
      <constant namespace="" line="53" package="Zend_Date">
        <name>DAY</name>
        <full_name>\Zend_Date::DAY</full_name>
        <value>'dd'</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="54" package="Zend_Date">
        <name>DAY_SHORT</name>
        <full_name>\Zend_Date::DAY_SHORT</full_name>
        <value>'d'</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="55" package="Zend_Date">
        <name>DAY_SUFFIX</name>
        <full_name>\Zend_Date::DAY_SUFFIX</full_name>
        <value>'SS'</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="56" package="Zend_Date">
        <name>DAY_OF_YEAR</name>
        <full_name>\Zend_Date::DAY_OF_YEAR</full_name>
        <value>'D'</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="57" package="Zend_Date">
        <name>WEEKDAY</name>
        <full_name>\Zend_Date::WEEKDAY</full_name>
        <value>'EEEE'</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="58" package="Zend_Date">
        <name>WEEKDAY_SHORT</name>
        <full_name>\Zend_Date::WEEKDAY_SHORT</full_name>
        <value>'EEE'</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="59" package="Zend_Date">
        <name>WEEKDAY_NARROW</name>
        <full_name>\Zend_Date::WEEKDAY_NARROW</full_name>
        <value>'E'</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="60" package="Zend_Date">
        <name>WEEKDAY_NAME</name>
        <full_name>\Zend_Date::WEEKDAY_NAME</full_name>
        <value>'EE'</value>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="61" package="Zend_Date">
        <name>WEEKDAY_8601</name>
        <full_name>\Zend_Date::WEEKDAY_8601</full_name>
        <value>'eee'</value>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="62" package="Zend_Date">
        <name>WEEKDAY_DIGIT</name>
        <full_name>\Zend_Date::WEEKDAY_DIGIT</full_name>
        <value>'e'</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="63" package="Zend_Date">
        <name>WEEK</name>
        <full_name>\Zend_Date::WEEK</full_name>
        <value>'ww'</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="64" package="Zend_Date">
        <name>MONTH</name>
        <full_name>\Zend_Date::MONTH</full_name>
        <value>'MM'</value>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="65" package="Zend_Date">
        <name>MONTH_SHORT</name>
        <full_name>\Zend_Date::MONTH_SHORT</full_name>
        <value>'M'</value>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="66" package="Zend_Date">
        <name>MONTH_DAYS</name>
        <full_name>\Zend_Date::MONTH_DAYS</full_name>
        <value>'ddd'</value>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="67" package="Zend_Date">
        <name>MONTH_NAME</name>
        <full_name>\Zend_Date::MONTH_NAME</full_name>
        <value>'MMMM'</value>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="68" package="Zend_Date">
        <name>MONTH_NAME_SHORT</name>
        <full_name>\Zend_Date::MONTH_NAME_SHORT</full_name>
        <value>'MMM'</value>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="69" package="Zend_Date">
        <name>MONTH_NAME_NARROW</name>
        <full_name>\Zend_Date::MONTH_NAME_NARROW</full_name>
        <value>'MMMMM'</value>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="70" package="Zend_Date">
        <name>YEAR</name>
        <full_name>\Zend_Date::YEAR</full_name>
        <value>'y'</value>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="71" package="Zend_Date">
        <name>YEAR_SHORT</name>
        <full_name>\Zend_Date::YEAR_SHORT</full_name>
        <value>'yy'</value>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="72" package="Zend_Date">
        <name>YEAR_8601</name>
        <full_name>\Zend_Date::YEAR_8601</full_name>
        <value>'Y'</value>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="73" package="Zend_Date">
        <name>YEAR_SHORT_8601</name>
        <full_name>\Zend_Date::YEAR_SHORT_8601</full_name>
        <value>'YY'</value>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="74" package="Zend_Date">
        <name>LEAPYEAR</name>
        <full_name>\Zend_Date::LEAPYEAR</full_name>
        <value>'l'</value>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="75" package="Zend_Date">
        <name>MERIDIEM</name>
        <full_name>\Zend_Date::MERIDIEM</full_name>
        <value>'a'</value>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="76" package="Zend_Date">
        <name>SWATCH</name>
        <full_name>\Zend_Date::SWATCH</full_name>
        <value>'B'</value>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="77" package="Zend_Date">
        <name>HOUR</name>
        <full_name>\Zend_Date::HOUR</full_name>
        <value>'HH'</value>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="78" package="Zend_Date">
        <name>HOUR_SHORT</name>
        <full_name>\Zend_Date::HOUR_SHORT</full_name>
        <value>'H'</value>
        <docblock line="78">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="79" package="Zend_Date">
        <name>HOUR_AM</name>
        <full_name>\Zend_Date::HOUR_AM</full_name>
        <value>'hh'</value>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="80" package="Zend_Date">
        <name>HOUR_SHORT_AM</name>
        <full_name>\Zend_Date::HOUR_SHORT_AM</full_name>
        <value>'h'</value>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="81" package="Zend_Date">
        <name>MINUTE</name>
        <full_name>\Zend_Date::MINUTE</full_name>
        <value>'mm'</value>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="82" package="Zend_Date">
        <name>MINUTE_SHORT</name>
        <full_name>\Zend_Date::MINUTE_SHORT</full_name>
        <value>'m'</value>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="83" package="Zend_Date">
        <name>SECOND</name>
        <full_name>\Zend_Date::SECOND</full_name>
        <value>'ss'</value>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="84" package="Zend_Date">
        <name>SECOND_SHORT</name>
        <full_name>\Zend_Date::SECOND_SHORT</full_name>
        <value>'s'</value>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="85" package="Zend_Date">
        <name>MILLISECOND</name>
        <full_name>\Zend_Date::MILLISECOND</full_name>
        <value>'S'</value>
        <docblock line="85">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="86" package="Zend_Date">
        <name>TIMEZONE_NAME</name>
        <full_name>\Zend_Date::TIMEZONE_NAME</full_name>
        <value>'zzzz'</value>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="87" package="Zend_Date">
        <name>DAYLIGHT</name>
        <full_name>\Zend_Date::DAYLIGHT</full_name>
        <value>'I'</value>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="88" package="Zend_Date">
        <name>GMT_DIFF</name>
        <full_name>\Zend_Date::GMT_DIFF</full_name>
        <value>'Z'</value>
        <docblock line="88">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="89" package="Zend_Date">
        <name>GMT_DIFF_SEP</name>
        <full_name>\Zend_Date::GMT_DIFF_SEP</full_name>
        <value>'ZZZZ'</value>
        <docblock line="89">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="90" package="Zend_Date">
        <name>TIMEZONE</name>
        <full_name>\Zend_Date::TIMEZONE</full_name>
        <value>'z'</value>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="91" package="Zend_Date">
        <name>TIMEZONE_SECS</name>
        <full_name>\Zend_Date::TIMEZONE_SECS</full_name>
        <value>'X'</value>
        <docblock line="91">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="92" package="Zend_Date">
        <name>ISO_8601</name>
        <full_name>\Zend_Date::ISO_8601</full_name>
        <value>'c'</value>
        <docblock line="92">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="93" package="Zend_Date">
        <name>RFC_2822</name>
        <full_name>\Zend_Date::RFC_2822</full_name>
        <value>'r'</value>
        <docblock line="93">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="94" package="Zend_Date">
        <name>TIMESTAMP</name>
        <full_name>\Zend_Date::TIMESTAMP</full_name>
        <value>'U'</value>
        <docblock line="94">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="95" package="Zend_Date">
        <name>ERA</name>
        <full_name>\Zend_Date::ERA</full_name>
        <value>'G'</value>
        <docblock line="95">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="96" package="Zend_Date">
        <name>ERA_NAME</name>
        <full_name>\Zend_Date::ERA_NAME</full_name>
        <value>'GGGG'</value>
        <docblock line="96">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="97" package="Zend_Date">
        <name>ERA_NARROW</name>
        <full_name>\Zend_Date::ERA_NARROW</full_name>
        <value>'GGGGG'</value>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="98" package="Zend_Date">
        <name>DATES</name>
        <full_name>\Zend_Date::DATES</full_name>
        <value>'F'</value>
        <docblock line="98">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="99" package="Zend_Date">
        <name>DATE_FULL</name>
        <full_name>\Zend_Date::DATE_FULL</full_name>
        <value>'FFFFF'</value>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="100" package="Zend_Date">
        <name>DATE_LONG</name>
        <full_name>\Zend_Date::DATE_LONG</full_name>
        <value>'FFFF'</value>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="101" package="Zend_Date">
        <name>DATE_MEDIUM</name>
        <full_name>\Zend_Date::DATE_MEDIUM</full_name>
        <value>'FFF'</value>
        <docblock line="101">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="102" package="Zend_Date">
        <name>DATE_SHORT</name>
        <full_name>\Zend_Date::DATE_SHORT</full_name>
        <value>'FF'</value>
        <docblock line="102">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="103" package="Zend_Date">
        <name>TIMES</name>
        <full_name>\Zend_Date::TIMES</full_name>
        <value>'WW'</value>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="104" package="Zend_Date">
        <name>TIME_FULL</name>
        <full_name>\Zend_Date::TIME_FULL</full_name>
        <value>'TTTTT'</value>
        <docblock line="104">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="105" package="Zend_Date">
        <name>TIME_LONG</name>
        <full_name>\Zend_Date::TIME_LONG</full_name>
        <value>'TTTT'</value>
        <docblock line="105">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="106" package="Zend_Date">
        <name>TIME_MEDIUM</name>
        <full_name>\Zend_Date::TIME_MEDIUM</full_name>
        <value>'TTT'</value>
        <docblock line="106">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="107" package="Zend_Date">
        <name>TIME_SHORT</name>
        <full_name>\Zend_Date::TIME_SHORT</full_name>
        <value>'TT'</value>
        <docblock line="107">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="108" package="Zend_Date">
        <name>DATETIME</name>
        <full_name>\Zend_Date::DATETIME</full_name>
        <value>'K'</value>
        <docblock line="108">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="109" package="Zend_Date">
        <name>DATETIME_FULL</name>
        <full_name>\Zend_Date::DATETIME_FULL</full_name>
        <value>'KKKKK'</value>
        <docblock line="109">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="110" package="Zend_Date">
        <name>DATETIME_LONG</name>
        <full_name>\Zend_Date::DATETIME_LONG</full_name>
        <value>'KKKK'</value>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="111" package="Zend_Date">
        <name>DATETIME_MEDIUM</name>
        <full_name>\Zend_Date::DATETIME_MEDIUM</full_name>
        <value>'KKK'</value>
        <docblock line="111">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="112" package="Zend_Date">
        <name>DATETIME_SHORT</name>
        <full_name>\Zend_Date::DATETIME_SHORT</full_name>
        <value>'KK'</value>
        <docblock line="112">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="113" package="Zend_Date">
        <name>ATOM</name>
        <full_name>\Zend_Date::ATOM</full_name>
        <value>'OOO'</value>
        <docblock line="113">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="114" package="Zend_Date">
        <name>COOKIE</name>
        <full_name>\Zend_Date::COOKIE</full_name>
        <value>'CCC'</value>
        <docblock line="114">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="115" package="Zend_Date">
        <name>RFC_822</name>
        <full_name>\Zend_Date::RFC_822</full_name>
        <value>'R'</value>
        <docblock line="115">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="116" package="Zend_Date">
        <name>RFC_850</name>
        <full_name>\Zend_Date::RFC_850</full_name>
        <value>'RR'</value>
        <docblock line="116">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="117" package="Zend_Date">
        <name>RFC_1036</name>
        <full_name>\Zend_Date::RFC_1036</full_name>
        <value>'RRR'</value>
        <docblock line="117">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="118" package="Zend_Date">
        <name>RFC_1123</name>
        <full_name>\Zend_Date::RFC_1123</full_name>
        <value>'RRRR'</value>
        <docblock line="118">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="119" package="Zend_Date">
        <name>RFC_3339</name>
        <full_name>\Zend_Date::RFC_3339</full_name>
        <value>'RRRRR'</value>
        <docblock line="119">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="120" package="Zend_Date">
        <name>RSS</name>
        <full_name>\Zend_Date::RSS</full_name>
        <value>'SSS'</value>
        <docblock line="120">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="121" package="Zend_Date">
        <name>W3C</name>
        <full_name>\Zend_Date::W3C</full_name>
        <value>'WWW'</value>
        <docblock line="121">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="" line="38" package="Zend_Date">
        <name>$_locale</name>
        <full_name>\Zend_Date::_locale</full_name>
        <default>null</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="41" package="Zend_Date">
        <name>$_fractional</name>
        <full_name>\Zend_Date::_fractional</full_name>
        <default>0</default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="42" package="Zend_Date">
        <name>$_precision</name>
        <full_name>\Zend_Date::_precision</full_name>
        <default>3</default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="44" package="Zend_Date">
        <name>$_options</name>
        <full_name>\Zend_Date::_options</full_name>
        <default>array('format_type' =&gt; 'iso', 'fix_dst' =&gt; true, 'extend_month' =&gt; false, 'cache' =&gt; null, 'timesync' =&gt; null)</default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="34" package="Zend_Date\Zend_Date_DateObject">
        <name>$_unixTimestamp</name>
        <full_name>\Zend_Date_DateObject::_unixTimestamp</full_name>
        <default></default>
        <docblock line="34">
          <description>UNIX Timestamp</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="35" package="Zend_Date\Zend_Date_DateObject">
        <name>$_cache</name>
        <full_name>\Zend_Date_DateObject::_cache</full_name>
        <default>null</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="36" package="Zend_Date\Zend_Date_DateObject">
        <name>$_cacheTags</name>
        <full_name>\Zend_Date_DateObject::_cacheTags</full_name>
        <default>false</default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="37" package="Zend_Date\Zend_Date_DateObject">
        <name>$_defaultOffset</name>
        <full_name>\Zend_Date_DateObject::_defaultOffset</full_name>
        <default>0</default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="42" package="Zend_Date\Zend_Date_DateObject">
        <name>$_timezone</name>
        <full_name>\Zend_Date_DateObject::_timezone</full_name>
        <default>'UTC'</default>
        <docblock line="42">
          <description>active timezone</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="43" package="Zend_Date\Zend_Date_DateObject">
        <name>$_offset</name>
        <full_name>\Zend_Date_DateObject::_offset</full_name>
        <default>0</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="44" package="Zend_Date\Zend_Date_DateObject">
        <name>$_syncronised</name>
        <full_name>\Zend_Date_DateObject::_syncronised</full_name>
        <default>0</default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="47" package="Zend_Date\Zend_Date_DateObject">
        <name>$_dst</name>
        <full_name>\Zend_Date_DateObject::_dst</full_name>
        <default>true</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="52" package="Zend_Date\Zend_Date_DateObject">
        <name>$_monthTable</name>
        <full_name>\Zend_Date_DateObject::_monthTable</full_name>
        <default>array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)</default>
        <docblock line="52">
          <description>Table of Monthdays</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="57" package="Zend_Date\Zend_Date_DateObject">
        <name>$_yearTable</name>
        <full_name>\Zend_Date_DateObject::_yearTable</full_name>
        <default>array(1970 =&gt; 0, 1960 =&gt; -315619200, 1950 =&gt; -631152000, 1940 =&gt; -946771200, 1930 =&gt; -1262304000, 1920 =&gt; -1577923200, 1910 =&gt; -1893456000, 1900 =&gt; -2208988800, 1890 =&gt; -2524521600, 1880 =&gt; -2840140800, 1870 =&gt; -3155673600, 1860 =&gt; -3471292800, 1850 =&gt; -3786825600, 1840 =&gt; -4102444800, 1830 =&gt; -4417977600, 1820 =&gt; -4733596800, 1810 =&gt; -5049129600, 1800 =&gt; -5364662400, 1790 =&gt; -5680195200, 1780 =&gt; -5995814400, 1770 =&gt; -6311347200, 1760 =&gt; -6626966400, 1750 =&gt; -6942499200, 1740 =&gt; -7258118400, 1730 =&gt; -7573651200, 1720 =&gt; -7889270400, 1710 =&gt; -8204803200, 1700 =&gt; -8520336000, 1690 =&gt; -8835868800, 1680 =&gt; -9151488000, 1670 =&gt; -9467020800, 1660 =&gt; -9782640000, 1650 =&gt; -10098172800, 1640 =&gt; -10413792000, 1630 =&gt; -10729324800, 1620 =&gt; -11044944000, 1610 =&gt; -11360476800, 1600 =&gt; -11676096000)</default>
        <docblock line="57">
          <description>Table of Years</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="Zend_Date">
        <name>__construct</name>
        <full_name>\Zend_Date::__construct()</full_name>
        <docblock line="137">
          <description>Generates the standard date object, could be a unix timestamp, localized date,
string, integer, array and so on. Also parts of dates or time are supported
Always set the default timezone: http://php.net/date_default_timezone_set
For example, in your bootstrap: date_default_timezone_set('America/Los_Angeles');
For detailed instructions please look in the docu.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="&lt;p&gt;OPTIONAL Date value or value of date part to set&#10;,depending on $part. If null the actual time is set&lt;/p&gt;" type="string|integer|\Zend_Date|array" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
            <type>array</type>
          </tag>
          <tag name="param" line="137" description="&lt;p&gt;OPTIONAL Defines the input format of $date&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="137" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="137" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="137" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default>null</default>
          <type>string|integer|\Zend_Date|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="238" package="Zend_Date">
        <name>setOptions</name>
        <full_name>\Zend_Date::setOptions()</full_name>
        <docblock line="238">
          <description>Sets class wide options, if no option was given, the actual set options will be returned</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Options to set&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="throws" line="238" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="238" description="array if no option was given" type="\Options">
            <type>\Options</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="312" package="Zend_Date">
        <name>getTimestamp</name>
        <full_name>\Zend_Date::getTimestamp()</full_name>
        <docblock line="312">
          <description>Returns this object's internal UNIX timestamp (equivalent to Zend_Date::TIMESTAMP).</description>
          <long-description>If the timestamp is too large for integers, then the return value will be a string.
This function does not return the timestamp as an object.
Use clone() or copyPart() instead.</long-description>
          <tag name="return" line="312" description="UNIX timestamp" type="integer|string">
            <type>integer</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="326" package="Zend_Date">
        <name>_timestamp</name>
        <full_name>\Zend_Date::_timestamp()</full_name>
        <docblock line="326">
          <description>Returns the calculated timestamp
HINT: timestamps are always GMT</description>
          <long-description></long-description>
          <tag name="param" line="326" description="&lt;p&gt;Type of calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="326" description="&lt;p&gt;Timestamp to calculate, when null the actual timestamp is calculated&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$stamp">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="326" description="" type="\Zend_Date|integer">
            <type>\Zend_Date</type>
            <type>integer</type>
          </tag>
          <tag name="throws" line="326" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$stamp</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="360" package="Zend_Date">
        <name>setTimestamp</name>
        <full_name>\Zend_Date::setTimestamp()</full_name>
        <docblock line="360">
          <description>Sets a new timestamp</description>
          <long-description></long-description>
          <tag name="param" line="360" description="&lt;p&gt;Timestamp to set&lt;/p&gt;" type="integer|string|array|\Zend_Date" variable="$timestamp">
            <type>integer</type>
            <type>string</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="360" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="360" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default></default>
          <type>integer|string|array|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="372" package="Zend_Date">
        <name>addTimestamp</name>
        <full_name>\Zend_Date::addTimestamp()</full_name>
        <docblock line="372">
          <description>Adds a timestamp</description>
          <long-description></long-description>
          <tag name="param" line="372" description="&lt;p&gt;Timestamp to add&lt;/p&gt;" type="integer|string|array|\Zend_Date" variable="$timestamp">
            <type>integer</type>
            <type>string</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="372" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="372" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default></default>
          <type>integer|string|array|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="384" package="Zend_Date">
        <name>subTimestamp</name>
        <full_name>\Zend_Date::subTimestamp()</full_name>
        <docblock line="384">
          <description>Subtracts a timestamp</description>
          <long-description></long-description>
          <tag name="param" line="384" description="&lt;p&gt;Timestamp to sub&lt;/p&gt;" type="integer|string|array|\Zend_Date" variable="$timestamp">
            <type>integer</type>
            <type>string</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="384" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="384" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default></default>
          <type>integer|string|array|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="396" package="Zend_Date">
        <name>compareTimestamp</name>
        <full_name>\Zend_Date::compareTimestamp()</full_name>
        <docblock line="396">
          <description>Compares two timestamps, returning the difference as integer</description>
          <long-description></long-description>
          <tag name="param" line="396" description="&lt;p&gt;Timestamp to compare&lt;/p&gt;" type="integer|string|array|\Zend_Date" variable="$timestamp">
            <type>integer</type>
            <type>string</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="396" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="396" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default></default>
          <type>integer|string|array|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="423" package="Zend_Date">
        <name>toString</name>
        <full_name>\Zend_Date::toString()</full_name>
        <docblock line="423">
          <description>Returns a string representation of the object
Supported format tokens are:
G - era, y - year, Y - ISO year, M - month, w - week of year, D - day of year, d - day of month
E - day of week, e - number of weekday (1-7), h - hour 1-12, H - hour 0-23, m - minute, s - second
A - milliseconds of day, z - timezone, Z - timezone offset, S - fractional second, a - period of day</description>
          <long-description>Additionally format tokens but non ISO conform are:
SS - day suffix, eee - php number of weekday(0-6), ddd - number of days per month
l - Leap year, B - swatch internet time, I - daylight saving time, X - timezone offset in seconds
r - RFC2822 format, U - unix timestamp

Not supported ISO tokens are
u - extended year, Q - quarter, q - quarter, L - stand alone month, W - week of month
F - day of week of month, g - modified julian, c - stand alone weekday, k - hour 0-11, K - hour 1-24
v - wall zone</long-description>
          <tag name="param" line="423" description="&lt;p&gt;OPTIONAL Rule for formatting output. If null the default date format is used&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="423" description="&lt;p&gt;OPTIONAL Type for the format string which overrides the standard setting&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="423" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="423" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="474" package="Zend_Date">
        <name>__toString</name>
        <full_name>\Zend_Date::__toString()</full_name>
        <docblock line="474">
          <description>Returns a string representation of the date which is equal with the timestamp</description>
          <long-description></long-description>
          <tag name="return" line="474" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="486" package="Zend_Date">
        <name>toValue</name>
        <full_name>\Zend_Date::toValue()</full_name>
        <docblock line="486">
          <description>Returns a integer representation of the object
But returns false when the given part is no value f.e. Month-Name</description>
          <long-description></long-description>
          <tag name="param" line="486" description="&lt;p&gt;OPTIONAL Defines the date or datepart to return as integer&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$part">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="486" description="" type="integer|false">
            <type>integer</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>null</default>
          <type>string|integer|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="501" package="Zend_Date">
        <name>toArray</name>
        <full_name>\Zend_Date::toArray()</full_name>
        <docblock line="501">
          <description>Returns an array representation of the object</description>
          <long-description></long-description>
          <tag name="return" line="501" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="527" package="Zend_Date">
        <name>get</name>
        <full_name>\Zend_Date::get()</full_name>
        <docblock line="527">
          <description>Returns a representation of a date or datepart
This could be for example a localized monthname, the time without date,
the era or only the fractional seconds. There are about 50 different supported date parts.</description>
          <long-description>For a complete list of supported datepart values look into the docu</long-description>
          <tag name="param" line="527" description="&lt;p&gt;OPTIONAL Part of the date to return, if null the timestamp is returned&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="527" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="527" description="date or datepart" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="556" package="Zend_Date">
        <name>_toToken</name>
        <full_name>\Zend_Date::_toToken()</full_name>
        <docblock line="556">
          <description>Internal method to apply tokens</description>
          <long-description></long-description>
          <tag name="param" line="556" description="" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="556" description="" type="string" variable="$locale">
            <type>string</type>
          </tag>
          <tag name="return" line="556" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="596" package="Zend_Date">
        <name>_parseIsoToDate</name>
        <full_name>\Zend_Date::_parseIsoToDate()</full_name>
        <docblock line="596">
          <description>Internal parsing method</description>
          <long-description></long-description>
          <tag name="param" line="596" description="" type="string" variable="$token">
            <type>string</type>
          </tag>
          <tag name="param" line="596" description="" type="string" variable="$locale">
            <type>string</type>
          </tag>
          <tag name="return" line="596" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$token</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="974" package="Zend_Date">
        <name>_toComment</name>
        <full_name>\Zend_Date::_toComment()</full_name>
        <docblock line="974">
          <description>Private function to make a comment of a token</description>
          <long-description></long-description>
          <tag name="param" line="974" description="" type="string" variable="$token">
            <type>string</type>
          </tag>
          <tag name="return" line="974" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$token</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="993" package="Zend_Date">
        <name>_getDigitFromName</name>
        <full_name>\Zend_Date::_getDigitFromName()</full_name>
        <docblock line="993">
          <description>Return digit from standard names (english)
Faster implementation than locale aware searching</description>
          <long-description></long-description>
          <tag name="param" line="993" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="993" description="Number of this month" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="993" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="1045" package="Zend_Date">
        <name>getFullYear</name>
        <full_name>\Zend_Date::getFullYear()</full_name>
        <docblock line="1045">
          <description>Counts the exact year number
&lt; 70 - 2000 added, &gt;70 &lt; 100 - 1900, others just returned</description>
          <long-description></long-description>
          <tag name="param" line="1045" description="&lt;p&gt;year number&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="1045" description="Number of year" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1069" package="Zend_Date">
        <name>set</name>
        <full_name>\Zend_Date::set()</full_name>
        <docblock line="1069">
          <description>Sets the given date as new date or a given datepart as new datepart returning the new datepart
This could be for example a localized dayname, the date without time,
the month or only the seconds. There are about 50 different supported date parts.</description>
          <long-description>For a complete list of supported datepart values look into the docu</long-description>
          <tag name="param" line="1069" description="&lt;p&gt;Date or datepart to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="1069" description="&lt;p&gt;OPTIONAL Part of the date to set, if null the timestamp is set&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="1069" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="1069" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="1069" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1097" package="Zend_Date">
        <name>add</name>
        <full_name>\Zend_Date::add()</full_name>
        <docblock line="1097">
          <description>Adds a date or datepart to the existing date, by extracting $part from $date,
and modifying this object by adding that part.  The $part is then extracted from
this object and returned as an integer or numeric string (for large values, or $part's
corresponding to pre-defined formatted date strings).</description>
          <long-description>This could be for example a ISO 8601 date, the hour the monthname or only the minute.
There are about 50 different supported date parts.
For a complete list of supported datepart values look into the docu.</long-description>
          <tag name="param" line="1097" description="&lt;p&gt;Date or datepart to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="1097" description="&lt;p&gt;OPTIONAL Part of the date to add, if null the timestamp is added&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="1097" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="1097" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="1097" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>self::TIMESTAMP</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1120" package="Zend_Date">
        <name>sub</name>
        <full_name>\Zend_Date::sub()</full_name>
        <docblock line="1120">
          <description>Subtracts a date from another date.</description>
          <long-description>This could be for example a RFC2822 date, the time,
the year or only the timestamp. There are about 50 different supported date parts.
For a complete list of supported datepart values look into the docu
Be aware: Adding -2 Months is not equal to Subtracting 2 Months !!!</long-description>
          <tag name="param" line="1120" description="&lt;p&gt;Date or datepart to subtract&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="1120" description="&lt;p&gt;OPTIONAL Part of the date to sub, if null the timestamp is subtracted&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="1120" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="1120" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="1120" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>self::TIMESTAMP</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1140" package="Zend_Date">
        <name>compare</name>
        <full_name>\Zend_Date::compare()</full_name>
        <docblock line="1140">
          <description>Compares a date or datepart with the existing one.</description>
          <long-description>Returns -1 if earlier, 0 if equal and 1 if later.</long-description>
          <tag name="param" line="1140" description="&lt;p&gt;Date or datepart to compare with the date object&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="1140" description="&lt;p&gt;OPTIONAL Part of the date to compare, if null the timestamp is subtracted&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="1140" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="1140" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="1140" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>self::TIMESTAMP</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1170" package="Zend_Date">
        <name>copyPart</name>
        <full_name>\Zend_Date::copyPart()</full_name>
        <docblock line="1170">
          <description>Returns a new instance of Zend_Date with the selected part copied.</description>
          <long-description>To make an exact copy, use PHP's clone keyword.
For a complete list of supported date part values look into the docu.
If a date part is copied, all other date parts are set to standard values.
For example: If only YEAR is copied, the returned date object is equal to
01-01-YEAR 00:00:00 (01-01-1970 00:00:00 is equal to timestamp 0)
If only HOUR is copied, the returned date object is equal to
01-01-1970 HOUR:00:00 (so $this contains a timestamp equal to a timestamp of 0 plus HOUR).</long-description>
          <tag name="param" line="1170" description="&lt;p&gt;Part of the date to compare, if null the timestamp is subtracted&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="1170" description="&lt;p&gt;OPTIONAL New object's locale.  No adjustments to timezone are made.&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="1170" description="New clone with requested part" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1187" package="Zend_Date">
        <name>getTimezoneFromString</name>
        <full_name>\Zend_Date::getTimezoneFromString()</full_name>
        <docblock line="1187">
          <description>Internal function, returns the offset of a given timezone</description>
          <long-description></long-description>
          <tag name="param" line="1187" description="" type="string" variable="$zone">
            <type>string</type>
          </tag>
          <tag name="return" line="1187" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$zone</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1238" package="Zend_Date">
        <name>_assign</name>
        <full_name>\Zend_Date::_assign()</full_name>
        <docblock line="1238">
          <description>Calculates the date or object</description>
          <long-description></long-description>
          <tag name="param" line="1238" description="&lt;p&gt;Calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;Date for calculation&lt;/p&gt;" type="string|integer" variable="$date">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;Second date for calculation&lt;/p&gt;" type="string|integer" variable="$comp">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;Use dst correction if option is set&lt;/p&gt;" type="boolean|integer" variable="$dst">
            <type>boolean</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="1238" description="new timestamp or Zend_Date depending on calculation" type="integer|string|\Zend_Date">
            <type>integer</type>
            <type>string</type>
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$comp</name>
          <default>0</default>
          <type>string|integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dst</name>
          <default>false</default>
          <type>boolean|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1288" package="Zend_Date">
        <name>_calculate</name>
        <full_name>\Zend_Date::_calculate()</full_name>
        <docblock line="1288">
          <description>Calculates the date or object</description>
          <long-description></long-description>
          <tag name="param" line="1288" description="&lt;p&gt;Calculation to make, one of: 'add'|'sub'|'cmp'|'copy'|'set'&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="1288" description="&lt;p&gt;Date or datepart to calculate with&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="1288" description="&lt;p&gt;Part of the date to calculate, if null the timestamp is used&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="1288" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="1288" description="new timestamp" type="integer|string|\Zend_Date">
            <type>integer</type>
            <type>string</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="1288" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2696" package="Zend_Date">
        <name>equals</name>
        <full_name>\Zend_Date::equals()</full_name>
        <docblock line="2696">
          <description>Returns true when both date objects or date parts are equal.</description>
          <long-description>For example:
15.May.2000 &lt;-&gt; 15.June.2000 Equals only for Day or Year... all other will return false</long-description>
          <tag name="param" line="2696" description="&lt;p&gt;Date or datepart to equal with&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2696" description="&lt;p&gt;OPTIONAL Part of the date to compare, if null the timestamp is used&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="2696" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2696" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="2696" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>self::TIMESTAMP</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2718" package="Zend_Date">
        <name>isEarlier</name>
        <full_name>\Zend_Date::isEarlier()</full_name>
        <docblock line="2718">
          <description>Returns if the given date or datepart is earlier
For example:
15.May.2000 &lt;-&gt; 13.June.1999 will return true for day, year and date, but not for month</description>
          <long-description></long-description>
          <tag name="param" line="2718" description="&lt;p&gt;Date or datepart to compare with&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2718" description="&lt;p&gt;OPTIONAL Part of the date to compare, if null the timestamp is used&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="2718" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2718" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="2718" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2741" package="Zend_Date">
        <name>isLater</name>
        <full_name>\Zend_Date::isLater()</full_name>
        <docblock line="2741">
          <description>Returns if the given date or datepart is later
For example:
15.May.2000 &lt;-&gt; 13.June.1999 will return true for month but false for day, year and date
Returns if the given date is later</description>
          <long-description></long-description>
          <tag name="param" line="2741" description="&lt;p&gt;Date or datepart to compare with&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2741" description="&lt;p&gt;OPTIONAL Part of the date to compare, if null the timestamp is used&lt;/p&gt;" type="string" variable="$part">
            <type>string</type>
          </tag>
          <tag name="param" line="2741" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2741" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="2741" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2760" package="Zend_Date">
        <name>getTime</name>
        <full_name>\Zend_Date::getTime()</full_name>
        <docblock line="2760">
          <description>Returns only the time of the date as new Zend_Date object
For example:
15.May.2000 10:11:23 will return a dateobject equal to 01.Jan.1970 10:11:23</description>
          <long-description></long-description>
          <tag name="param" line="2760" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2760" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="2781" package="Zend_Date">
        <name>_time</name>
        <full_name>\Zend_Date::_time()</full_name>
        <docblock line="2781">
          <description>Returns the calculated time</description>
          <long-description></long-description>
          <tag name="param" line="2781" description="&lt;p&gt;Calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="2781" description="&lt;p&gt;Time to calculate with, if null the actual time is taken&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$time">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2781" description="&lt;p&gt;Timeformat for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="2781" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2781" description="new time" type="integer|\Zend_Date">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="2781" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2854" package="Zend_Date">
        <name>setTime</name>
        <full_name>\Zend_Date::setTime()</full_name>
        <docblock line="2854">
          <description>Sets a new time for the date object. Format defines how to parse the time string.</description>
          <long-description>Also a complete date can be given, but only the time is used for setting.
For example: dd.MMMM.yyTHH:mm' and 'ss sec'-&gt; 10.May.07T25:11 and 44 sec =&gt; 1h11min44sec + 1 day
Returned is the new date object and the existing date is left as it was before</long-description>
          <tag name="param" line="2854" description="&lt;p&gt;Time to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$time">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2854" description="&lt;p&gt;OPTIONAL Timeformat for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="2854" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2854" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="2854" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2872" package="Zend_Date">
        <name>addTime</name>
        <full_name>\Zend_Date::addTime()</full_name>
        <docblock line="2872">
          <description>Adds a time to the existing date. Format defines how to parse the time string.</description>
          <long-description>If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: HH:mm:ss -&gt; 10 -&gt; +10 hours</long-description>
          <tag name="param" line="2872" description="&lt;p&gt;Time to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$time">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2872" description="&lt;p&gt;OPTIONAL Timeformat for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="2872" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2872" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="2872" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2890" package="Zend_Date">
        <name>subTime</name>
        <full_name>\Zend_Date::subTime()</full_name>
        <docblock line="2890">
          <description>Subtracts a time from the existing date. Format defines how to parse the time string.</description>
          <long-description>If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: HH:mm:ss -&gt; 10 -&gt; -10 hours</long-description>
          <tag name="param" line="2890" description="&lt;p&gt;Time to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$time">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2890" description="&lt;p&gt;OPTIONAL Timeformat for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="2890" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2890" description="Provides a fluent inteface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="2890" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2908" package="Zend_Date">
        <name>compareTime</name>
        <full_name>\Zend_Date::compareTime()</full_name>
        <docblock line="2908">
          <description>Compares the time from the existing date. Format defines how to parse the time string.</description>
          <long-description>If only parts are given the other parts are set to default.
If no format us given, the standardformat of this locale is used.
For example: HH:mm:ss -&gt; 10 -&gt; 10 hours</long-description>
          <tag name="param" line="2908" description="&lt;p&gt;Time to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$time">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2908" description="&lt;p&gt;OPTIONAL Timeformat for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="2908" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2908" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="2908" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2919" package="Zend_Date">
        <name>getDate</name>
        <full_name>\Zend_Date::getDate()</full_name>
        <docblock line="2919">
          <description>Returns a clone of $this, with the time part set to 00:00:00.</description>
          <long-description></long-description>
          <tag name="param" line="2919" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2919" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="2943" package="Zend_Date">
        <name>_date</name>
        <full_name>\Zend_Date::_date()</full_name>
        <docblock line="2943">
          <description>Returns the calculated date</description>
          <long-description></long-description>
          <tag name="param" line="2943" description="&lt;p&gt;Calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="2943" description="&lt;p&gt;Date to calculate with, if null the actual date is taken&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="2943" description="&lt;p&gt;Date format for parsing&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="2943" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="2943" description="new date" type="integer|\Zend_Date">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="2943" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3016" package="Zend_Date">
        <name>setDate</name>
        <full_name>\Zend_Date::setDate()</full_name>
        <docblock line="3016">
          <description>Sets a new date for the date object. Format defines how to parse the date string.</description>
          <long-description>Also a complete date with time can be given, but only the date is used for setting.
For example: MMMM.yy HH:mm-&gt; May.07 22:11 =&gt; 01.May.07 00:00
Returned is the new date object and the existing time is left as it was before</long-description>
          <tag name="param" line="3016" description="&lt;p&gt;Date to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3016" description="&lt;p&gt;OPTIONAL Date format for parsing&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="3016" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3016" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3016" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3034" package="Zend_Date">
        <name>addDate</name>
        <full_name>\Zend_Date::addDate()</full_name>
        <docblock line="3034">
          <description>Adds a date to the existing date object. Format defines how to parse the date string.</description>
          <long-description>If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: MM.dd.YYYY -&gt; 10 -&gt; +10 months</long-description>
          <tag name="param" line="3034" description="&lt;p&gt;Date to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3034" description="&lt;p&gt;OPTIONAL Date format for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="3034" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3034" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3034" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3053" package="Zend_Date">
        <name>subDate</name>
        <full_name>\Zend_Date::subDate()</full_name>
        <docblock line="3053">
          <description>Subtracts a date from the existing date object. Format defines how to parse the date string.</description>
          <long-description>If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: MM.dd.YYYY -&gt; 10 -&gt; -10 months
Be aware: Subtracting 2 months is not equal to Adding -2 months !!!</long-description>
          <tag name="param" line="3053" description="&lt;p&gt;Date to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3053" description="&lt;p&gt;OPTIONAL Date format for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="3053" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3053" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3053" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3072" package="Zend_Date">
        <name>compareDate</name>
        <full_name>\Zend_Date::compareDate()</full_name>
        <docblock line="3072">
          <description>Compares the date from the existing date object, ignoring the time.</description>
          <long-description>Format defines how to parse the date string.
If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: 10.01.2000 =&gt; 10.02.1999 -&gt; false</long-description>
          <tag name="param" line="3072" description="&lt;p&gt;Date to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3072" description="&lt;p&gt;OPTIONAL Date format for parsing input&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="3072" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3072" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="3072" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3087" package="Zend_Date">
        <name>getIso</name>
        <full_name>\Zend_Date::getIso()</full_name>
        <docblock line="3087">
          <description>Returns the full ISO 8601 date from the date object.</description>
          <long-description>Always the complete ISO 8601 specifiction is used. If an other ISO date is needed
(ISO 8601 defines several formats) use toString() instead.
This function does not return the ISO date as object. Use copy() instead.</long-description>
          <tag name="param" line="3087" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3087" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3104" package="Zend_Date">
        <name>setIso</name>
        <full_name>\Zend_Date::setIso()</full_name>
        <docblock line="3104">
          <description>Sets a new date for the date object. Not given parts are set to default.</description>
          <long-description>Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; 01.Sept.2005 00:00:00, 20050201T10:00:30 -&gt; 01.Feb.2005 10h00m30s
Returned is the new date object</long-description>
          <tag name="param" line="3104" description="&lt;p&gt;ISO Date to set&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3104" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3104" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3104" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3121" package="Zend_Date">
        <name>addIso</name>
        <full_name>\Zend_Date::addIso()</full_name>
        <docblock line="3121">
          <description>Adds a ISO date to the date object. Not given parts are set to default.</description>
          <long-description>Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; + 01.Sept.2005 00:00:00, 10:00:00 -&gt; +10h
Returned is the new date object</long-description>
          <tag name="param" line="3121" description="&lt;p&gt;ISO Date to add&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3121" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3121" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3121" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3138" package="Zend_Date">
        <name>subIso</name>
        <full_name>\Zend_Date::subIso()</full_name>
        <docblock line="3138">
          <description>Subtracts a ISO date from the date object. Not given parts are set to default.</description>
          <long-description>Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; - 01.Sept.2005 00:00:00, 10:00:00 -&gt; -10h
Returned is the new date object</long-description>
          <tag name="param" line="3138" description="&lt;p&gt;ISO Date to sub&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3138" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3138" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3138" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3155" package="Zend_Date">
        <name>compareIso</name>
        <full_name>\Zend_Date::compareIso()</full_name>
        <docblock line="3155">
          <description>Compares a ISO date with the date object. Not given parts are set to default.</description>
          <long-description>Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; - 01.Sept.2005 00:00:00, 10:00:00 -&gt; -10h
Returns if equal, earlier or later</long-description>
          <tag name="param" line="3155" description="&lt;p&gt;ISO Date to sub&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3155" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3155" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="3155" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3168" package="Zend_Date">
        <name>getArpa</name>
        <full_name>\Zend_Date::getArpa()</full_name>
        <docblock line="3168">
          <description>Returns a RFC 822 compilant datestring from the date object.</description>
          <long-description>This function does not return the RFC date as object. Use copy() instead.</long-description>
          <tag name="param" line="3168" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3168" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3191" package="Zend_Date">
        <name>setArpa</name>
        <full_name>\Zend_Date::setArpa()</full_name>
        <docblock line="3191">
          <description>Sets a RFC 822 date as new date for the date object.</description>
          <long-description>Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returned is the new date object</long-description>
          <tag name="param" line="3191" description="&lt;p&gt;RFC 822 to set&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3191" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3191" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3191" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3209" package="Zend_Date">
        <name>addArpa</name>
        <full_name>\Zend_Date::addArpa()</full_name>
        <docblock line="3209">
          <description>Adds a RFC 822 date to the date object.</description>
          <long-description>ARPA messages are used in emails or HTTP Headers.
Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returned is the new date object</long-description>
          <tag name="param" line="3209" description="&lt;p&gt;RFC 822 Date to add&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3209" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3209" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3209" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3227" package="Zend_Date">
        <name>subArpa</name>
        <full_name>\Zend_Date::subArpa()</full_name>
        <docblock line="3227">
          <description>Subtracts a RFC 822 date from the date object.</description>
          <long-description>ARPA messages are used in emails or HTTP Headers.
Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returned is the new date object</long-description>
          <tag name="param" line="3227" description="&lt;p&gt;RFC 822 Date to sub&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3227" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3227" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3227" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3245" package="Zend_Date">
        <name>compareArpa</name>
        <full_name>\Zend_Date::compareArpa()</full_name>
        <docblock line="3245">
          <description>Compares a RFC 822 compilant date with the date object.</description>
          <long-description>ARPA messages are used in emails or HTTP Headers.
Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returns if equal, earlier or later</long-description>
          <tag name="param" line="3245" description="&lt;p&gt;RFC 822 Date to sub&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3245" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3245" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="3245" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="3257" package="Zend_Date">
        <name>_checkLocation</name>
        <full_name>\Zend_Date::_checkLocation()</full_name>
        <docblock line="3257">
          <description>Check if location is supported</description>
          <long-description></long-description>
          <tag name="param" line="3257" description="&lt;p&gt;locations array&lt;/p&gt;" type="array" variable="$location">
            <type>array</type>
          </tag>
          <tag name="throws" line="3257" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="3257" description="$horizon float" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$location</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3304" package="Zend_Date">
        <name>getSunrise</name>
        <full_name>\Zend_Date::getSunrise()</full_name>
        <docblock line="3304">
          <description>Returns the time of sunrise for this date and a given location as new date object
For a list of cities and correct locations use the class Zend_Date_Cities</description>
          <long-description></long-description>
          <tag name="param" line="3304" description="&lt;p&gt;location of sunrise&#10;['horizon']   -&gt; civil, nautic, astronomical, effective (default)&#10;['longitude'] -&gt; longitude of location&#10;['latitude']  -&gt; latitude of location&lt;/p&gt;" type="array" variable="$location">
            <type>array</type>
          </tag>
          <tag name="return" line="3304" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3304" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$location</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3324" package="Zend_Date">
        <name>getSunset</name>
        <full_name>\Zend_Date::getSunset()</full_name>
        <docblock line="3324">
          <description>Returns the time of sunset for this date and a given location as new date object
For a list of cities and correct locations use the class Zend_Date_Cities</description>
          <long-description></long-description>
          <tag name="param" line="3324" description="&lt;p&gt;location of sunset&#10;['horizon']   -&gt; civil, nautic, astronomical, effective (default)&#10;['longitude'] -&gt; longitude of location&#10;['latitude']  -&gt; latitude of location&lt;/p&gt;" type="array" variable="$location">
            <type>array</type>
          </tag>
          <tag name="return" line="3324" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3324" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$location</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3344" package="Zend_Date">
        <name>getSunInfo</name>
        <full_name>\Zend_Date::getSunInfo()</full_name>
        <docblock line="3344">
          <description>Returns an array with the sunset and sunrise dates for all horizon types
For a list of cities and correct locations use the class Zend_Date_Cities</description>
          <long-description></long-description>
          <tag name="param" line="3344" description="&lt;p&gt;location of suninfo&#10;['horizon']   -&gt; civil, nautic, astronomical, effective (default)&#10;['longitude'] -&gt; longitude of location&#10;['latitude']  -&gt; latitude of location&lt;/p&gt;" type="array" variable="$location">
            <type>array</type>
          </tag>
          <tag name="return" line="3344" description="- [sunset|sunrise][effective|civil|nautic|astronomic]" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="3344" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$location</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="3380" package="Zend_Date">
        <name>checkLeapYear</name>
        <full_name>\Zend_Date::checkLeapYear()</full_name>
        <docblock line="3380">
          <description>Check a given year for leap year.</description>
          <long-description></long-description>
          <tag name="param" line="3380" description="&lt;p&gt;Year to check&lt;/p&gt;" type="integer|array|\Zend_Date" variable="$year">
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3380" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="3380" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer|array|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3409" package="Zend_Date">
        <name>isLeapYear</name>
        <full_name>\Zend_Date::isLeapYear()</full_name>
        <docblock line="3409">
          <description>Returns true, if the year is a leap year.</description>
          <long-description></long-description>
          <tag name="return" line="3409" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3420" package="Zend_Date">
        <name>isToday</name>
        <full_name>\Zend_Date::isToday()</full_name>
        <docblock line="3420">
          <description>Returns if the set date is todays date</description>
          <long-description></long-description>
          <tag name="return" line="3420" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3433" package="Zend_Date">
        <name>isYesterday</name>
        <full_name>\Zend_Date::isYesterday()</full_name>
        <docblock line="3433">
          <description>Returns if the set date is yesterdays date</description>
          <long-description></long-description>
          <tag name="return" line="3433" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3448" package="Zend_Date">
        <name>isTomorrow</name>
        <full_name>\Zend_Date::isTomorrow()</full_name>
        <docblock line="3448">
          <description>Returns if the set date is tomorrows date</description>
          <long-description></long-description>
          <tag name="return" line="3448" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="3463" package="Zend_Date">
        <name>now</name>
        <full_name>\Zend_Date::now()</full_name>
        <docblock line="3463">
          <description>Returns the actual date as new date object</description>
          <long-description></long-description>
          <tag name="param" line="3463" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3463" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="3478" package="Zend_Date">
        <name>_calcdetail</name>
        <full_name>\Zend_Date::_calcdetail()</full_name>
        <docblock line="3478">
          <description>Calculate date details</description>
          <long-description></long-description>
          <tag name="param" line="3478" description="&lt;p&gt;Calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="3478" description="&lt;p&gt;Date or Part to calculate&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3478" description="&lt;p&gt;Datepart for Calculation&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="3478" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3478" description="new date" type="integer|string">
            <type>integer</type>
            <type>string</type>
          </tag>
          <tag name="throws" line="3478" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="3519" package="Zend_Date">
        <name>_calcvalue</name>
        <full_name>\Zend_Date::_calcvalue()</full_name>
        <docblock line="3519">
          <description>Internal calculation, returns the requested date type</description>
          <long-description></long-description>
          <tag name="param" line="3519" description="&lt;p&gt;Calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="3519" description="&lt;p&gt;Datevalue to calculate with, if null the actual value is taken&lt;/p&gt;" type="string|integer|\Zend_Date" variable="$value">
            <type>string</type>
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3519" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="3519" description="" type="string" variable="$parameter">
            <type>string</type>
          </tag>
          <tag name="param" line="3519" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="throws" line="3519" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="3519" description="new date" type="integer|\Zend_Date">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string|integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameter</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3553" package="Zend_Date">
        <name>getYear</name>
        <full_name>\Zend_Date::getYear()</full_name>
        <docblock line="3553">
          <description>Returns only the year from the date object as new object.</description>
          <long-description>For example: 10.May.2000 10:30:00 -&gt; 01.Jan.2000 00:00:00</long-description>
          <tag name="param" line="3553" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3553" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3578" package="Zend_Date">
        <name>setYear</name>
        <full_name>\Zend_Date::setYear()</full_name>
        <docblock line="3578">
          <description>Sets a new year
If the year is between 0 and 69, 2000 will be set (2000-2069)
If the year if between 70 and 99, 1999 will be set (1970-1999)
3 or 4 digit years are set as expected. If you need to set year 0-99
use set() instead.</description>
          <long-description>Returned is the new date object</long-description>
          <tag name="param" line="3578" description="&lt;p&gt;Year to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$year">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3578" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3578" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3578" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3597" package="Zend_Date">
        <name>addYear</name>
        <full_name>\Zend_Date::addYear()</full_name>
        <docblock line="3597">
          <description>Adds the year to the existing date object
If the year is between 0 and 69, 2000 will be added (2000-2069)
If the year if between 70 and 99, 1999 will be added (1970-1999)
3 or 4 digit years are added as expected. If you need to add years from 0-99
use add() instead.</description>
          <long-description>Returned is the new date object</long-description>
          <tag name="param" line="3597" description="&lt;p&gt;Year to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$year">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3597" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3597" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3597" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3616" package="Zend_Date">
        <name>subYear</name>
        <full_name>\Zend_Date::subYear()</full_name>
        <docblock line="3616">
          <description>Subs the year from the existing date object
If the year is between 0 and 69, 2000 will be subtracted (2000-2069)
If the year if between 70 and 99, 1999 will be subtracted (1970-1999)
3 or 4 digit years are subtracted as expected. If you need to subtract years from 0-99
use sub() instead.</description>
          <long-description>Returned is the new date object</long-description>
          <tag name="param" line="3616" description="&lt;p&gt;Year to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$year">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3616" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3616" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3616" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3632" package="Zend_Date">
        <name>compareYear</name>
        <full_name>\Zend_Date::compareYear()</full_name>
        <docblock line="3632">
          <description>Compares the year with the existing date object, ignoring other date parts.</description>
          <long-description>For example: 10.03.2000 -&gt; 15.02.2000 -&gt; true
Returns if equal, earlier or later</long-description>
          <tag name="param" line="3632" description="&lt;p&gt;Year to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$year">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3632" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3632" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="3632" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3645" package="Zend_Date">
        <name>getMonth</name>
        <full_name>\Zend_Date::getMonth()</full_name>
        <docblock line="3645">
          <description>Returns only the month from the date object as new object.</description>
          <long-description>For example: 10.May.2000 10:30:00 -&gt; 01.May.1970 00:00:00</long-description>
          <tag name="param" line="3645" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3645" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="3666" package="Zend_Date">
        <name>_month</name>
        <full_name>\Zend_Date::_month()</full_name>
        <docblock line="3666">
          <description>Returns the calculated month</description>
          <long-description></long-description>
          <tag name="param" line="3666" description="&lt;p&gt;Calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="3666" description="&lt;p&gt;Month to calculate with, if null the actual month is taken&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$month">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3666" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3666" description="new time" type="integer|\Zend_Date">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3666" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3740" package="Zend_Date">
        <name>setMonth</name>
        <full_name>\Zend_Date::setMonth()</full_name>
        <docblock line="3740">
          <description>Sets a new month
The month can be a number or a string. Setting months lower then 0 and greater then 12
will result in adding or subtracting the relevant year. (12 months equal one year)
If a localized monthname is given it will be parsed with the default locale or the optional
set locale.</description>
          <long-description>Returned is the new date object</long-description>
          <tag name="param" line="3740" description="&lt;p&gt;Month to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$month">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3740" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3740" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3740" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3759" package="Zend_Date">
        <name>addMonth</name>
        <full_name>\Zend_Date::addMonth()</full_name>
        <docblock line="3759">
          <description>Adds months to the existing date object.</description>
          <long-description>The month can be a number or a string. Adding months lower then 0 and greater then 12
will result in adding or subtracting the relevant year. (12 months equal one year)
If a localized monthname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object</long-description>
          <tag name="param" line="3759" description="&lt;p&gt;Month to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$month">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3759" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3759" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3759" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3778" package="Zend_Date">
        <name>subMonth</name>
        <full_name>\Zend_Date::subMonth()</full_name>
        <docblock line="3778">
          <description>Subtracts months from the existing date object.</description>
          <long-description>The month can be a number or a string. Subtracting months lower then 0 and greater then 12
will result in adding or subtracting the relevant year. (12 months equal one year)
If a localized monthname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object</long-description>
          <tag name="param" line="3778" description="&lt;p&gt;Month to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$month">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3778" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3778" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3778" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3794" package="Zend_Date">
        <name>compareMonth</name>
        <full_name>\Zend_Date::compareMonth()</full_name>
        <docblock line="3794">
          <description>Compares the month with the existing date object, ignoring other date parts.</description>
          <long-description>For example: 10.03.2000 -&gt; 15.03.1950 -&gt; true
Returns if equal, earlier or later</long-description>
          <tag name="param" line="3794" description="&lt;p&gt;Month to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$month">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3794" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3794" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="3794" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3807" package="Zend_Date">
        <name>getDay</name>
        <full_name>\Zend_Date::getDay()</full_name>
        <docblock line="3807">
          <description>Returns the day as new date object
Example: 20.May.1986 -&gt; 20.Jan.1970 00:00:00</description>
          <long-description></long-description>
          <tag name="param" line="3807" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="\Zend_Locale" variable="$locale">
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3807" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="3821" package="Zend_Date">
        <name>_day</name>
        <full_name>\Zend_Date::_day()</full_name>
        <docblock line="3821">
          <description>Returns the calculated day</description>
          <long-description></long-description>
          <tag name="param" line="3821" description="&lt;p&gt;Type of calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="3821" description="&lt;p&gt;Day to calculate, when null the actual day is calculated&lt;/p&gt;" type="\Zend_Date" variable="$day">
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3821" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="\Zend_Locale" variable="$locale">
            <type>\Zend_Locale</type>
          </tag>
          <tag name="throws" line="3821" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="3821" description="" type="\Zend_Date|integer">
            <type>\Zend_Date</type>
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3884" package="Zend_Date">
        <name>setDay</name>
        <full_name>\Zend_Date::setDay()</full_name>
        <docblock line="3884">
          <description>Sets a new day
The day can be a number or a string. Setting days lower then 0 or greater than the number of this months days
will result in adding or subtracting the relevant month.</description>
          <long-description>If a localized dayname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object
Example: setDay('Montag', 'de_AT'); will set the monday of this week as day.</long-description>
          <tag name="param" line="3884" description="&lt;p&gt;Day to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3884" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3884" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3884" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3902" package="Zend_Date">
        <name>addDay</name>
        <full_name>\Zend_Date::addDay()</full_name>
        <docblock line="3902">
          <description>Adds days to the existing date object.</description>
          <long-description>The day can be a number or a string. Adding days lower then 0 or greater than the number of this months days
will result in adding or subtracting the relevant month.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.</long-description>
          <tag name="param" line="3902" description="&lt;p&gt;Day to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3902" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3902" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3902" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3920" package="Zend_Date">
        <name>subDay</name>
        <full_name>\Zend_Date::subDay()</full_name>
        <docblock line="3920">
          <description>Subtracts days from the existing date object.</description>
          <long-description>The day can be a number or a string. Subtracting days lower then 0 or greater than the number of this months days
will result in adding or subtracting the relevant month.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.</long-description>
          <tag name="param" line="3920" description="&lt;p&gt;Day to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3920" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3920" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="3920" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3936" package="Zend_Date">
        <name>compareDay</name>
        <full_name>\Zend_Date::compareDay()</full_name>
        <docblock line="3936">
          <description>Compares the day with the existing date object, ignoring other date parts.</description>
          <long-description>For example: 'Monday', 'en' -&gt; 08.Jan.2007 -&gt; 0
Returns if equal, earlier or later</long-description>
          <tag name="param" line="3936" description="&lt;p&gt;Day to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3936" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3936" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="3936" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="3950" package="Zend_Date">
        <name>getWeekday</name>
        <full_name>\Zend_Date::getWeekday()</full_name>
        <docblock line="3950">
          <description>Returns the weekday as new date object
Weekday is always from 1-7
Example: 09-Jan-2007 -&gt; 2 = Tuesday -&gt; 02-Jan-1970 (when 02.01.1970 is also Tuesday)</description>
          <long-description></long-description>
          <tag name="param" line="3950" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="\Zend_Locale" variable="$locale">
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3950" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="3971" package="Zend_Date">
        <name>_weekday</name>
        <full_name>\Zend_Date::_weekday()</full_name>
        <docblock line="3971">
          <description>Returns the calculated weekday</description>
          <long-description></long-description>
          <tag name="param" line="3971" description="&lt;p&gt;Type of calculation to make&lt;/p&gt;" type="string" variable="$calc">
            <type>string</type>
          </tag>
          <tag name="param" line="3971" description="&lt;p&gt;Weekday to calculate, when null the actual weekday is calculated&lt;/p&gt;" type="\Zend_Date" variable="$weekday">
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="3971" description="&lt;p&gt;Locale for parsing input&lt;/p&gt;" type="\Zend_Locale" variable="$locale">
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="3971" description="" type="\Zend_Date|integer">
            <type>\Zend_Date</type>
            <type>integer</type>
          </tag>
          <tag name="throws" line="3971" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$calc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$weekday</name>
          <default></default>
          <type>\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4032" package="Zend_Date">
        <name>setWeekday</name>
        <full_name>\Zend_Date::setWeekday()</full_name>
        <docblock line="4032">
          <description>Sets a new weekday
The weekday can be a number or a string. If a localized weekday name is given,
then it will be parsed as a date in $locale (defaults to the same locale as $this).</description>
          <long-description>Returned is the new date object.
Example: setWeekday(3); will set the wednesday of this week as day.</long-description>
          <tag name="param" line="4032" description="&lt;p&gt;Weekday to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$weekday">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4032" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4032" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4032" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$weekday</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4052" package="Zend_Date">
        <name>addWeekday</name>
        <full_name>\Zend_Date::addWeekday()</full_name>
        <docblock line="4052">
          <description>Adds weekdays to the existing date object.</description>
          <long-description>The weekday can be a number or a string.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object
Example: addWeekday(3); will add the difference of days from the begining of the month until
wednesday.</long-description>
          <tag name="param" line="4052" description="&lt;p&gt;Weekday to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$weekday">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4052" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4052" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4052" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$weekday</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4072" package="Zend_Date">
        <name>subWeekday</name>
        <full_name>\Zend_Date::subWeekday()</full_name>
        <docblock line="4072">
          <description>Subtracts weekdays from the existing date object.</description>
          <long-description>The weekday can be a number or a string.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object
Example: subWeekday(3); will subtract the difference of days from the begining of the month until
wednesday.</long-description>
          <tag name="param" line="4072" description="&lt;p&gt;Weekday to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$weekday">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4072" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4072" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4072" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$weekday</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4088" package="Zend_Date">
        <name>compareWeekday</name>
        <full_name>\Zend_Date::compareWeekday()</full_name>
        <docblock line="4088">
          <description>Compares the weekday with the existing date object, ignoring other date parts.</description>
          <long-description>For example: 'Monday', 'en' -&gt; 08.Jan.2007 -&gt; 0
Returns if equal, earlier or later</long-description>
          <tag name="param" line="4088" description="&lt;p&gt;Weekday to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$weekday">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4088" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4088" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4088" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$weekday</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4101" package="Zend_Date">
        <name>getDayOfYear</name>
        <full_name>\Zend_Date::getDayOfYear()</full_name>
        <docblock line="4101">
          <description>Returns the day of year as new date object
Example: 02.Feb.1986 10:00:00 -&gt; 02.Feb.1970 00:00:00</description>
          <long-description></long-description>
          <tag name="param" line="4101" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4101" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4124" package="Zend_Date">
        <name>setDayOfYear</name>
        <full_name>\Zend_Date::setDayOfYear()</full_name>
        <docblock line="4124">
          <description>Sets a new day of year
The day of year is always a number.</description>
          <long-description>Returned is the new date object
Example: 04.May.2004 -&gt; setDayOfYear(10) -&gt; 10.Jan.2004</long-description>
          <tag name="param" line="4124" description="&lt;p&gt;Day of Year to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4124" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4124" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4124" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4141" package="Zend_Date">
        <name>addDayOfYear</name>
        <full_name>\Zend_Date::addDayOfYear()</full_name>
        <docblock line="4141">
          <description>Adds a day of year to the existing date object.</description>
          <long-description>The day of year is always a number.
Returned is the new date object
Example: addDayOfYear(10); will add 10 days to the existing date object.</long-description>
          <tag name="param" line="4141" description="&lt;p&gt;Day of Year to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4141" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4141" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4141" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4158" package="Zend_Date">
        <name>subDayOfYear</name>
        <full_name>\Zend_Date::subDayOfYear()</full_name>
        <docblock line="4158">
          <description>Subtracts a day of year from the existing date object.</description>
          <long-description>The day of year is always a number.
Returned is the new date object
Example: subDayOfYear(10); will subtract 10 days from the existing date object.</long-description>
          <tag name="param" line="4158" description="&lt;p&gt;Day of Year to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4158" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4158" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4158" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4174" package="Zend_Date">
        <name>compareDayOfYear</name>
        <full_name>\Zend_Date::compareDayOfYear()</full_name>
        <docblock line="4174">
          <description>Compares the day of year with the existing date object.</description>
          <long-description>For example: compareDayOfYear(33) -&gt; 02.Feb.2007 -&gt; 0
Returns if equal, earlier or later</long-description>
          <tag name="param" line="4174" description="&lt;p&gt;Day of Year to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$day">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4174" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4174" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4174" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4187" package="Zend_Date">
        <name>getHour</name>
        <full_name>\Zend_Date::getHour()</full_name>
        <docblock line="4187">
          <description>Returns the hour as new date object
Example: 02.Feb.1986 10:30:25 -&gt; 01.Jan.1970 10:00:00</description>
          <long-description></long-description>
          <tag name="param" line="4187" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="\Zend_Locale" variable="$locale">
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4187" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4204" package="Zend_Date">
        <name>setHour</name>
        <full_name>\Zend_Date::setHour()</full_name>
        <docblock line="4204">
          <description>Sets a new hour
The hour is always a number.</description>
          <long-description>Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; setHour(7); -&gt; 04.May.1993 07:07:25</long-description>
          <tag name="param" line="4204" description="&lt;p&gt;Hour to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$hour">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4204" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4204" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4204" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hour</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4221" package="Zend_Date">
        <name>addHour</name>
        <full_name>\Zend_Date::addHour()</full_name>
        <docblock line="4221">
          <description>Adds hours to the existing date object.</description>
          <long-description>The hour is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; addHour(12); -&gt; 05.May.1993 01:07:25</long-description>
          <tag name="param" line="4221" description="&lt;p&gt;Hour to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$hour">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4221" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4221" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4221" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hour</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4238" package="Zend_Date">
        <name>subHour</name>
        <full_name>\Zend_Date::subHour()</full_name>
        <docblock line="4238">
          <description>Subtracts hours from the existing date object.</description>
          <long-description>The hour is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; subHour(6); -&gt; 05.May.1993 07:07:25</long-description>
          <tag name="param" line="4238" description="&lt;p&gt;Hour to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$hour">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4238" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4238" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4238" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hour</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4254" package="Zend_Date">
        <name>compareHour</name>
        <full_name>\Zend_Date::compareHour()</full_name>
        <docblock line="4254">
          <description>Compares the hour with the existing date object.</description>
          <long-description>For example: 10:30:25 -&gt; compareHour(10) -&gt; 0
Returns if equal, earlier or later</long-description>
          <tag name="param" line="4254" description="&lt;p&gt;Hour to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$hour">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4254" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4254" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4254" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hour</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4267" package="Zend_Date">
        <name>getMinute</name>
        <full_name>\Zend_Date::getMinute()</full_name>
        <docblock line="4267">
          <description>Returns the minute as new date object
Example: 02.Feb.1986 10:30:25 -&gt; 01.Jan.1970 00:30:00</description>
          <long-description></long-description>
          <tag name="param" line="4267" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4267" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4290" package="Zend_Date">
        <name>setMinute</name>
        <full_name>\Zend_Date::setMinute()</full_name>
        <docblock line="4290">
          <description>Sets a new minute
The minute is always a number.</description>
          <long-description>Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; setMinute(29); -&gt; 04.May.1993 13:29:25</long-description>
          <tag name="param" line="4290" description="&lt;p&gt;Minute to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$minute">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4290" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4290" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4290" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$minute</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4307" package="Zend_Date">
        <name>addMinute</name>
        <full_name>\Zend_Date::addMinute()</full_name>
        <docblock line="4307">
          <description>Adds minutes to the existing date object.</description>
          <long-description>The minute is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; addMinute(65); -&gt; 04.May.1993 13:12:25</long-description>
          <tag name="param" line="4307" description="&lt;p&gt;Minute to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$minute">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4307" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4307" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4307" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$minute</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4324" package="Zend_Date">
        <name>subMinute</name>
        <full_name>\Zend_Date::subMinute()</full_name>
        <docblock line="4324">
          <description>Subtracts minutes from the existing date object.</description>
          <long-description>The minute is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; subMinute(9); -&gt; 04.May.1993 12:58:25</long-description>
          <tag name="param" line="4324" description="&lt;p&gt;Minute to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$minute">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4324" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4324" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4324" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$minute</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4340" package="Zend_Date">
        <name>compareMinute</name>
        <full_name>\Zend_Date::compareMinute()</full_name>
        <docblock line="4340">
          <description>Compares the minute with the existing date object.</description>
          <long-description>For example: 10:30:25 -&gt; compareMinute(30) -&gt; 0
Returns if equal, earlier or later</long-description>
          <tag name="param" line="4340" description="&lt;p&gt;Hour to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$minute">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4340" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4340" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4340" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$minute</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4353" package="Zend_Date">
        <name>getSecond</name>
        <full_name>\Zend_Date::getSecond()</full_name>
        <docblock line="4353">
          <description>Returns the second as new date object
Example: 02.Feb.1986 10:30:25 -&gt; 01.Jan.1970 00:00:25</description>
          <long-description></long-description>
          <tag name="param" line="4353" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4353" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4376" package="Zend_Date">
        <name>setSecond</name>
        <full_name>\Zend_Date::setSecond()</full_name>
        <docblock line="4376">
          <description>Sets new seconds to the existing date object.</description>
          <long-description>The second is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; setSecond(100); -&gt; 04.May.1993 13:08:40</long-description>
          <tag name="param" line="4376" description="&lt;p&gt;Second to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$second">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4376" description="&lt;p&gt;(Optional) Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4376" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4376" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$second</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4393" package="Zend_Date">
        <name>addSecond</name>
        <full_name>\Zend_Date::addSecond()</full_name>
        <docblock line="4393">
          <description>Adds seconds to the existing date object.</description>
          <long-description>The second is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; addSecond(65); -&gt; 04.May.1993 13:08:30</long-description>
          <tag name="param" line="4393" description="&lt;p&gt;Second to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$second">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4393" description="&lt;p&gt;(Optional) Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4393" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4393" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$second</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4410" package="Zend_Date">
        <name>subSecond</name>
        <full_name>\Zend_Date::subSecond()</full_name>
        <docblock line="4410">
          <description>Subtracts seconds from the existing date object.</description>
          <long-description>The second is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; subSecond(10); -&gt; 04.May.1993 13:07:15</long-description>
          <tag name="param" line="4410" description="&lt;p&gt;Second to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$second">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4410" description="&lt;p&gt;(Optional) Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4410" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4410" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$second</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4426" package="Zend_Date">
        <name>compareSecond</name>
        <full_name>\Zend_Date::compareSecond()</full_name>
        <docblock line="4426">
          <description>Compares the second with the existing date object.</description>
          <long-description>For example: 10:30:25 -&gt; compareSecond(25) -&gt; 0
Returns if equal, earlier or later</long-description>
          <tag name="param" line="4426" description="&lt;p&gt;Second to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$second">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4426" description="&lt;p&gt;(Optional) Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4426" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4426" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$second</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4437" package="Zend_Date">
        <name>getFractionalPrecision</name>
        <full_name>\Zend_Date::getFractionalPrecision()</full_name>
        <docblock line="4437">
          <description>Returns the precision for fractional seconds</description>
          <long-description></long-description>
          <tag name="return" line="4437" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4450" package="Zend_Date">
        <name>setFractionalPrecision</name>
        <full_name>\Zend_Date::setFractionalPrecision()</full_name>
        <docblock line="4450">
          <description>Sets a new precision for fractional seconds</description>
          <long-description></long-description>
          <tag name="param" line="4450" description="&lt;p&gt;Precision for the fractional datepart 3 = milliseconds&lt;/p&gt;" type="integer" variable="$precision">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4450" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="4450" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$precision</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4473" package="Zend_Date">
        <name>getMilliSecond</name>
        <full_name>\Zend_Date::getMilliSecond()</full_name>
        <docblock line="4473">
          <description>Returns the milliseconds of the date object</description>
          <long-description></long-description>
          <tag name="return" line="4473" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4487" package="Zend_Date">
        <name>setMilliSecond</name>
        <full_name>\Zend_Date::setMilliSecond()</full_name>
        <docblock line="4487">
          <description>Sets new milliseconds for the date object
Example: setMilliSecond(550, 2) -&gt; equals +5 Sec +50 MilliSec</description>
          <long-description></long-description>
          <tag name="param" line="4487" description="&lt;p&gt;(Optional) Millisecond to set, when null the actual millisecond is set&lt;/p&gt;" type="integer|\Zend_Date" variable="$milli">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4487" description="&lt;p&gt;(Optional) Fraction precision of the given milliseconds&lt;/p&gt;" type="integer" variable="$precision">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4487" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="4487" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$milli</name>
          <default>null</default>
          <type>integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$precision</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4520" package="Zend_Date">
        <name>addMilliSecond</name>
        <full_name>\Zend_Date::addMilliSecond()</full_name>
        <docblock line="4520">
          <description>Adds milliseconds to the date object</description>
          <long-description></long-description>
          <tag name="param" line="4520" description="&lt;p&gt;(Optional) Millisecond to add, when null the actual millisecond is added&lt;/p&gt;" type="integer|\Zend_Date" variable="$milli">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4520" description="&lt;p&gt;(Optional) Fractional precision for the given milliseconds&lt;/p&gt;" type="integer" variable="$precision">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4520" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="4520" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$milli</name>
          <default>null</default>
          <type>integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$precision</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4585" package="Zend_Date">
        <name>subMilliSecond</name>
        <full_name>\Zend_Date::subMilliSecond()</full_name>
        <docblock line="4585">
          <description>Subtracts a millisecond</description>
          <long-description></long-description>
          <tag name="param" line="4585" description="&lt;p&gt;(Optional) Millisecond to sub, when null the actual millisecond is subtracted&lt;/p&gt;" type="integer|\Zend_Date" variable="$milli">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4585" description="&lt;p&gt;(Optional) Fractional precision for the given milliseconds&lt;/p&gt;" type="integer" variable="$precision">
            <type>integer</type>
          </tag>
          <tag name="return" line="4585" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$milli</name>
          <default>null</default>
          <type>integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$precision</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4599" package="Zend_Date">
        <name>compareMilliSecond</name>
        <full_name>\Zend_Date::compareMilliSecond()</full_name>
        <docblock line="4599">
          <description>Compares only the millisecond part, returning the difference</description>
          <long-description></long-description>
          <tag name="param" line="4599" description="&lt;p&gt;OPTIONAL Millisecond to compare, when null the actual millisecond is compared&lt;/p&gt;" type="integer|\Zend_Date" variable="$milli">
            <type>integer</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4599" description="&lt;p&gt;OPTIONAL Fractional precision for the given milliseconds&lt;/p&gt;" type="integer" variable="$precision">
            <type>integer</type>
          </tag>
          <tag name="throws" line="4599" description="On invalid input" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="4599" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$milli</name>
          <default>null</default>
          <type>integer|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$precision</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4647" package="Zend_Date">
        <name>getWeek</name>
        <full_name>\Zend_Date::getWeek()</full_name>
        <docblock line="4647">
          <description>Returns the week as new date object using monday as begining of the week
Example: 12.Jan.2007 -&gt; 08.Jan.1970 00:00:00</description>
          <long-description></long-description>
          <tag name="param" line="4647" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="\Zend_Locale" variable="$locale">
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4647" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4668" package="Zend_Date">
        <name>setWeek</name>
        <full_name>\Zend_Date::setWeek()</full_name>
        <docblock line="4668">
          <description>Sets a new week. The week is always a number. The day of week is not changed.</description>
          <long-description>Returned is the new date object
Example: 09.Jan.2007 13:07:25 -&gt; setWeek(1); -&gt; 02.Jan.2007 13:07:25</long-description>
          <tag name="param" line="4668" description="&lt;p&gt;Week to set&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$week">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4668" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4668" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4668" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$week</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4683" package="Zend_Date">
        <name>addWeek</name>
        <full_name>\Zend_Date::addWeek()</full_name>
        <docblock line="4683">
          <description>Adds a week. The week is always a number. The day of week is not changed.</description>
          <long-description>Returned is the new date object
Example: 09.Jan.2007 13:07:25 -&gt; addWeek(1); -&gt; 16.Jan.2007 13:07:25</long-description>
          <tag name="param" line="4683" description="&lt;p&gt;Week to add&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$week">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4683" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4683" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4683" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$week</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4698" package="Zend_Date">
        <name>subWeek</name>
        <full_name>\Zend_Date::subWeek()</full_name>
        <docblock line="4698">
          <description>Subtracts a week. The week is always a number. The day of week is not changed.</description>
          <long-description>Returned is the new date object
Example: 09.Jan.2007 13:07:25 -&gt; subWeek(1); -&gt; 02.Jan.2007 13:07:25</long-description>
          <tag name="param" line="4698" description="&lt;p&gt;Week to sub&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$week">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4698" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4698" description="Provides a fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
          <tag name="throws" line="4698" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$week</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4713" package="Zend_Date">
        <name>compareWeek</name>
        <full_name>\Zend_Date::compareWeek()</full_name>
        <docblock line="4713">
          <description>Compares only the week part, returning the difference
Returned is the new date object
Returns if equal, earlier or later
Example: 09.Jan.2007 13:07:25 -&gt; compareWeek(2); -&gt; 0</description>
          <long-description></long-description>
          <tag name="param" line="4713" description="&lt;p&gt;Week to compare&lt;/p&gt;" type="string|integer|array|\Zend_Date" variable="$week">
            <type>string</type>
            <type>integer</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4713" description="&lt;p&gt;OPTIONAL Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4713" description="0 = equal, 1 = later, -1 = earlier" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$week</name>
          <default></default>
          <type>string|integer|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4729" package="Zend_Date">
        <name>setLocale</name>
        <full_name>\Zend_Date::setLocale()</full_name>
        <docblock line="4729">
          <description>Sets a new standard locale for the date object.</description>
          <long-description>This locale will be used for all functions
Returned is the really set locale.
Example: 'de_XX' will be set to 'de' because 'de_XX' does not exist
'xx_YY' will be set to 'root' because 'xx' does not exist</long-description>
          <tag name="param" line="4729" description="&lt;p&gt;(Optional) Locale for parsing input&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="throws" line="4729" description="When the given locale does not exist" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
          <tag name="return" line="4729" description="Provides fluent interface" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="4746" package="Zend_Date">
        <name>getLocale</name>
        <full_name>\Zend_Date::getLocale()</full_name>
        <docblock line="4746">
          <description>Returns the actual set locale</description>
          <long-description></long-description>
          <tag name="return" line="4746" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="4763" package="Zend_Date">
        <name>isDate</name>
        <full_name>\Zend_Date::isDate()</full_name>
        <docblock line="4763">
          <description>Checks if the given date is a real date or datepart.</description>
          <long-description>Returns false if a expected datepart is missing or a datepart exceeds its possible border.
But the check will only be done for the expected dateparts which are given by format.
If no format is given the standard dateformat for the actual locale is used.
f.e. 30.February.2007 will return false if format is 'dd.MMMM.YYYY'</long-description>
          <tag name="param" line="4763" description="&lt;p&gt;Date to parse for correctness&lt;/p&gt;" type="string|array|\Zend_Date" variable="$date">
            <type>string</type>
            <type>array</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="param" line="4763" description="&lt;p&gt;(Optional) Format for parsing the date string&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="4763" description="&lt;p&gt;(Optional) Locale for parsing date parts&lt;/p&gt;" type="string|\Zend_Locale" variable="$locale">
            <type>string</type>
            <type>\Zend_Locale</type>
          </tag>
          <tag name="return" line="4763" description="True when all date parts are correct" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string|array|\Zend_Date</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default>null</default>
          <type>string|\Zend_Locale</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="4905" package="Zend_Date">
        <name>_getLocalizedToken</name>
        <full_name>\Zend_Date::_getLocalizedToken()</full_name>
        <docblock line="4905">
          <description>Returns the ISO Token for all localized constants</description>
          <long-description></long-description>
          <tag name="param" line="4905" description="&lt;p&gt;Token to normalize&lt;/p&gt;" type="string" variable="$token">
            <type>string</type>
          </tag>
          <tag name="param" line="4905" description="&lt;p&gt;Locale to search&lt;/p&gt;" type="string" variable="$locale">
            <type>string</type>
          </tag>
          <tag name="return" line="4905" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$token</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$locale</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="79" package="Zend_Date\Zend_Date_DateObject">
        <name>setUnixTimestamp</name>
        <full_name>\Zend_Date_DateObject::setUnixTimestamp()</full_name>
        <docblock line="79">
          <description>Set this object to have a new UNIX timestamp.</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;OPTIONAL timestamp; defaults to local time using time()&lt;/p&gt;" type="string|integer" variable="$timestamp">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="79" description="old timestamp" type="string|integer">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="throws" line="79" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default>null</default>
          <type>string|integer</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="102" package="Zend_Date\Zend_Date_DateObject">
        <name>getUnixTimestamp</name>
        <full_name>\Zend_Date_DateObject::getUnixTimestamp()</full_name>
        <docblock line="102">
          <description>Returns this object's UNIX timestamp
A timestamp greater then the integer range will be returned as string
This function does not return the timestamp as object. Use copy() instead.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="timestamp" type="integer|string">
            <type>integer</type>
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="119" package="Zend_Date\Zend_Date_DateObject">
        <name>_getTime</name>
        <full_name>\Zend_Date_DateObject::_getTime()</full_name>
        <docblock line="119">
          <description>Internal function.</description>
          <long-description>Returns time().  This method exists to allow unit tests to work-around methods that might otherwise
be hard-coded to use time().  For example, this makes it possible to test isYesterday() in Date.php.</long-description>
          <tag name="param" line="119" description="&lt;p&gt;OPTIONAL time syncronisation value&lt;/p&gt;" type="integer" variable="$sync">
            <type>integer</type>
          </tag>
          <tag name="return" line="119" description="timestamp" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sync</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="146" package="Zend_Date\Zend_Date_DateObject">
        <name>mktime</name>
        <full_name>\Zend_Date_DateObject::mktime()</full_name>
        <docblock line="146">
          <description>Internal mktime function used by Zend_Date.</description>
          <long-description>The timestamp returned by mktime() can exceed the precision of traditional UNIX timestamps,
by allowing PHP to auto-convert to using a float value.

Returns a timestamp relative to 1970/01/01 00:00:00 GMT/UTC.
DST (Summer/Winter) is depriciated since php 5.1.0.
Year has to be 4 digits otherwise it would be recognised as
year 70 AD instead of 1970 AD as expected !!</long-description>
          <tag name="param" line="146" description="" type="integer" variable="$hour">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$minute">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$second">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$month">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$day">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date&lt;/p&gt;" type="boolean" variable="$gmt">
            <type>boolean</type>
          </tag>
          <tag name="return" line="146" description="timestamp (number of seconds elapsed relative to 1970/01/01 00:00:00 GMT/UTC)" type="integer|float">
            <type>integer</type>
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hour</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$minute</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$second</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$gmt</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="274" package="Zend_Date\Zend_Date_DateObject">
        <name>isYearLeapYear</name>
        <full_name>\Zend_Date_DateObject::isYearLeapYear()</full_name>
        <docblock line="274">
          <description>Returns true, if given $year is a leap year.</description>
          <long-description></long-description>
          <tag name="param" line="274" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="return" line="274" description="true, if year is leap year" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="301" package="Zend_Date\Zend_Date_DateObject">
        <name>date</name>
        <full_name>\Zend_Date_DateObject::date()</full_name>
        <docblock line="301">
          <description>Internal mktime function used by Zend_Date for handling 64bit timestamps.</description>
          <long-description>Returns a formatted date for a given timestamp.</long-description>
          <tag name="param" line="301" description="&lt;p&gt;format for output&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="301" description="" type="mixed" variable="$timestamp">
            <type>mixed</type>
          </tag>
          <tag name="param" line="301" description="&lt;p&gt;OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date&lt;/p&gt;" type="boolean" variable="$gmt">
            <type>boolean</type>
          </tag>
          <tag name="return" line="301" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$gmt</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="636" package="Zend_Date\Zend_Date_DateObject">
        <name>dayOfWeek</name>
        <full_name>\Zend_Date_DateObject::dayOfWeek()</full_name>
        <docblock line="636">
          <description>Returns the day of week for a Gregorian calendar date.</description>
          <long-description>0 = sunday, 6 = saturday</long-description>
          <tag name="param" line="636" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="param" line="636" description="" type="integer" variable="$month">
            <type>integer</type>
          </tag>
          <tag name="param" line="636" description="" type="integer" variable="$day">
            <type>integer</type>
          </tag>
          <tag name="return" line="636" description="dayOfWeek" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="674" package="Zend_Date\Zend_Date_DateObject">
        <name>getDateParts</name>
        <full_name>\Zend_Date_DateObject::getDateParts()</full_name>
        <docblock line="674">
          <description>Internal getDateParts function for handling 64bit timestamps, similar to:
http://www.php.net/getdate</description>
          <long-description>Returns an array of date parts for $timestamp, relative to 1970/01/01 00:00:00 GMT/UTC.

$fast specifies ALL date parts should be returned (slower)
Default is false, and excludes $dayofweek, weekday, month and timestamp from parts returned.</long-description>
          <tag name="param" line="674" description="" type="mixed" variable="$timestamp">
            <type>mixed</type>
          </tag>
          <tag name="param" line="674" description="&lt;p&gt;OPTIONAL defaults to fast (false), resulting in fewer date parts&lt;/p&gt;" type="boolean" variable="$fast">
            <type>boolean</type>
          </tag>
          <tag name="return" line="674" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fast</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="867" package="Zend_Date\Zend_Date_DateObject">
        <name>weekNumber</name>
        <full_name>\Zend_Date_DateObject::weekNumber()</full_name>
        <docblock line="867">
          <description>Internal getWeekNumber function for handling 64bit timestamps</description>
          <long-description>Returns the ISO 8601 week number of a given date</long-description>
          <tag name="param" line="867" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="param" line="867" description="" type="integer" variable="$month">
            <type>integer</type>
          </tag>
          <tag name="param" line="867" description="" type="integer" variable="$day">
            <type>integer</type>
          </tag>
          <tag name="return" line="867" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="896" package="Zend_Date\Zend_Date_DateObject">
        <name>_range</name>
        <full_name>\Zend_Date_DateObject::_range()</full_name>
        <docblock line="896">
          <description>Internal _range function
Sets the value $a to be in the range of [0, $b]</description>
          <long-description></long-description>
          <tag name="param" line="896" description="&lt;ul&gt;&#10;&lt;li&gt;value to correct&lt;/li&gt;&#10;&lt;/ul&gt;" type="float" variable="$a">
            <type>float</type>
          </tag>
          <tag name="param" line="896" description="&lt;ul&gt;&#10;&lt;li&gt;maximum range to set&lt;/li&gt;&#10;&lt;/ul&gt;" type="float" variable="$b">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$a</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$b</name>
          <default></default>
          <type>float</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="913" package="Zend_Date\Zend_Date_DateObject">
        <name>calcSun</name>
        <full_name>\Zend_Date_DateObject::calcSun()</full_name>
        <docblock line="913">
          <description>Calculates the sunrise or sunset based on a location</description>
          <long-description></long-description>
          <tag name="param" line="913" description="&lt;p&gt;Location for calculation MUST include 'latitude', 'longitude', 'horizon'&lt;/p&gt;" type="array" variable="$location">
            <type>array</type>
          </tag>
          <tag name="param" line="913" description="&lt;p&gt;true: sunrise; false: sunset&lt;/p&gt;" type="boolean" variable="$horizon">
            <type>boolean</type>
          </tag>
          <tag name="return" line="913" description="- false: midnight sun, integer:" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$location</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$horizon</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rise</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1014" package="Zend_Date\Zend_Date_DateObject">
        <name>setTimezone</name>
        <full_name>\Zend_Date_DateObject::setTimezone()</full_name>
        <docblock line="1014">
          <description>Sets a new timezone for calculation of $this object's gmt offset.</description>
          <long-description>For a list of supported timezones look here: http://php.net/timezones
If no timezone can be detected or the given timezone is wrong UTC will be set.</long-description>
          <tag name="param" line="1014" description="&lt;p&gt;OPTIONAL timezone for date calculation; defaults to date_default_timezone_get()&lt;/p&gt;" type="string" variable="$zone">
            <type>string</type>
          </tag>
          <tag name="return" line="1014" description="Provides fluent interface" type="\Zend_Date_DateObject">
            <type>\Zend_Date_DateObject</type>
          </tag>
          <tag name="throws" line="1014" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$zone</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1051" package="Zend_Date\Zend_Date_DateObject">
        <name>getTimezone</name>
        <full_name>\Zend_Date_DateObject::getTimezone()</full_name>
        <docblock line="1051">
          <description>Return the timezone of $this object.</description>
          <long-description>The timezone is initially set when the object is instantiated.</long-description>
          <tag name="return" line="1051" description="actual set timezone string" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1063" package="Zend_Date\Zend_Date_DateObject">
        <name>getGmtOffset</name>
        <full_name>\Zend_Date_DateObject::getGmtOffset()</full_name>
        <docblock line="1063">
          <description>Return the offset to GMT of $this object's timezone.</description>
          <long-description>The offset to GMT is initially set when the object is instantiated using the currently,
in effect, default timezone for PHP functions.</long-description>
          <tag name="return" line="1063" description="seconds difference between GMT timezone and timezone when object was instantiated" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="1084" package="Zend_Date\Zend_Date_DateObject">
        <name>_getTagSupportForCache</name>
        <full_name>\Zend_Date_DateObject::_getTagSupportForCache()</full_name>
        <docblock line="1084">
          <description>Internal method to check if the given cache supports tags</description>
          <long-description></long-description>
          <tag name="param" line="1084" description="" type="\Zend_Cache" variable="$cache">
            <type>\Zend_Cache</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Date_DateObject</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="36" code="PPC:ERR-50005">No summary for class \Zend_Date</error>
      <error line="38" code="PPC:ERR-50007">No summary for property $_locale</error>
      <error line="41" code="PPC:ERR-50007">No summary for property $_fractional</error>
      <error line="42" code="PPC:ERR-50007">No summary for property $_precision</error>
      <error line="44" code="PPC:ERR-50007">No summary for property $_options</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="Date/Cities.php" generated-path="Date.Cities.html" hash="4a320f54a467d7928e441a786eb7ecdb" package="Zend_Date">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Date"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="34" package="Zend_Date\Zend_Date_Cities">
      <extends/>
      <name>Zend_Date_Cities</name>
      <full_name>\Zend_Date_Cities</full_name>
      <docblock line="34">
        <description>Additional data for sunset/sunrise calculations</description>
        <long-description>Holds the geographical data for all capital cities and many others worldwide
Original data from http://www.fallingrain.com/world/</long-description>
        <tag name="category" line="34" description="Zend"/>
        <tag name="package" line="34" description="Zend_Date"/>
        <tag name="subpackage" line="34" description="Zend_Date_Cities"/>
        <tag name="copyright" line="34" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="34" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="43" package="Zend_Date\Zend_Date_Cities">
        <name>$cities</name>
        <full_name>\Zend_Date_Cities::cities</full_name>
        <default>array('Abidjan' =&gt; array('latitude' =&gt; 5.3411111, 'longitude' =&gt; -4.0280556), 'Abu Dhabi' =&gt; array('latitude' =&gt; 24.4666667, 'longitude' =&gt; 54.3666667), 'Abuja' =&gt; array('latitude' =&gt; 9.1758333, 'longitude' =&gt; 7.1808333), 'Accra' =&gt; array('latitude' =&gt; 5.55, 'longitude' =&gt; -0.2166667), 'Adamstown' =&gt; array('latitude' =&gt; -25.0666667, 'longitude' =&gt; -130.0833333), 'Addis Ababa' =&gt; array('latitude' =&gt; 9.0333333, 'longitude' =&gt; 38.7), 'Adelaide' =&gt; array('latitude' =&gt; -34.9333333, 'longitude' =&gt; 138.6), 'Algiers' =&gt; array('latitude' =&gt; 36.7630556, 'longitude' =&gt; 3.0505556), 'Alofi' =&gt; array('latitude' =&gt; -19.0166667, 'longitude' =&gt; -169.9166667), 'Amman' =&gt; array('latitude' =&gt; 31.95, 'longitude' =&gt; 35.9333333), 'Amsterdam' =&gt; array('latitude' =&gt; 52.35, 'longitude' =&gt; 4.9166667), 'Andorra la Vella' =&gt; array('latitude' =&gt; 42.5, 'longitude' =&gt; 1.5166667), 'Ankara' =&gt; array('latitude' =&gt; 39.9272222, 'longitude' =&gt; 32.8644444), 'Antananarivo' =&gt; array('latitude' =&gt; -18.9166667, 'longitude' =&gt; 47.5166667), 'Apia' =&gt; array('latitude' =&gt; -13.8333333, 'longitude' =&gt; -171.7333333), 'Ashgabat' =&gt; array('latitude' =&gt; 37.95, 'longitude' =&gt; 58.3833333), 'Asmara' =&gt; array('latitude' =&gt; 15.3333333, 'longitude' =&gt; 38.9333333), 'Astana' =&gt; array('latitude' =&gt; 51.1811111, 'longitude' =&gt; 71.4277778), 'Asunción' =&gt; array('latitude' =&gt; -25.2666667, 'longitude' =&gt; -57.6666667), 'Athens' =&gt; array('latitude' =&gt; 37.9833333, 'longitude' =&gt; 23.7333333), 'Auckland' =&gt; array('latitude' =&gt; -36.8666667, 'longitude' =&gt; 174.7666667), 'Avarua' =&gt; array('latitude' =&gt; -21.2, 'longitude' =&gt; -159.7666667), 'Baghdad' =&gt; array('latitude' =&gt; 33.3386111, 'longitude' =&gt; 44.3938889), 'Baku' =&gt; array('latitude' =&gt; 40.3952778, 'longitude' =&gt; 49.8822222), 'Bamako' =&gt; array('latitude' =&gt; 12.65, 'longitude' =&gt; -8), 'Bandar Seri Begawan' =&gt; array('latitude' =&gt; 4.8833333, 'longitude' =&gt; 114.9333333), 'Bankok' =&gt; array('latitude' =&gt; 13.5833333, 'longitude' =&gt; 100.2166667), 'Bangui' =&gt; array('latitude' =&gt; 4.3666667, 'longitude' =&gt; 18.5833333), 'Banjul' =&gt; array('latitude' =&gt; 13.4530556, 'longitude' =&gt; -16.5775), 'Basel' =&gt; array('latitude' =&gt; 47.5666667, 'longitude' =&gt; 7.6), 'Basseterre' =&gt; array('latitude' =&gt; 17.3, 'longitude' =&gt; -62.7166667), 'Beijing' =&gt; array('latitude' =&gt; 39.9288889, 'longitude' =&gt; 116.3883333), 'Beirut' =&gt; array('latitude' =&gt; 33.8719444, 'longitude' =&gt; 35.5097222), 'Belgrade' =&gt; array('latitude' =&gt; 44.8186111, 'longitude' =&gt; 20.4680556), 'Belmopan' =&gt; array('latitude' =&gt; 17.25, 'longitude' =&gt; -88.7666667), 'Berlin' =&gt; array('latitude' =&gt; 52.5166667, 'longitude' =&gt; 13.4), 'Bern' =&gt; array('latitude' =&gt; 46.9166667, 'longitude' =&gt; 7.4666667), 'Bishkek' =&gt; array('latitude' =&gt; 42.8730556, 'longitude' =&gt; 74.6002778), 'Bissau' =&gt; array('latitude' =&gt; 11.85, 'longitude' =&gt; -15.5833333), 'Bloemfontein' =&gt; array('latitude' =&gt; -29.1333333, 'longitude' =&gt; 26.2), 'Bogotá' =&gt; array('latitude' =&gt; 4.6, 'longitude' =&gt; -74.0833333), 'Brasilia' =&gt; array('latitude' =&gt; -15.7833333, 'longitude' =&gt; -47.9166667), 'Bratislava' =&gt; array('latitude' =&gt; 48.15, 'longitude' =&gt; 17.1166667), 'Brazzaville' =&gt; array('latitude' =&gt; -4.2591667, 'longitude' =&gt; 15.2847222), 'Bridgetown' =&gt; array('latitude' =&gt; 13.1, 'longitude' =&gt; -59.6166667), 'Brisbane' =&gt; array('latitude' =&gt; -27.5, 'longitude' =&gt; 153.0166667), 'Brussels' =&gt; array('latitude' =&gt; 50.8333333, 'longitude' =&gt; 4.3333333), 'Bucharest' =&gt; array('latitude' =&gt; 44.4333333, 'longitude' =&gt; 26.1), 'Budapest' =&gt; array('latitude' =&gt; 47.5, 'longitude' =&gt; 19.0833333), 'Buenos Aires' =&gt; array('latitude' =&gt; -34.5875, 'longitude' =&gt; -58.6725), 'Bujumbura' =&gt; array('latitude' =&gt; -3.3761111, 'longitude' =&gt; 29.36), 'Cairo' =&gt; array('latitude' =&gt; 30.05, 'longitude' =&gt; 31.25), 'Calgary' =&gt; array('latitude' =&gt; 51.0833333, 'longitude' =&gt; -114.0833333), 'Canberra' =&gt; array('latitude' =&gt; -35.2833333, 'longitude' =&gt; 149.2166667), 'Cape Town' =&gt; array('latitude' =&gt; -33.9166667, 'longitude' =&gt; 18.4166667), 'Caracas' =&gt; array('latitude' =&gt; 10.5, 'longitude' =&gt; -66.9166667), 'Castries' =&gt; array('latitude' =&gt; 14, 'longitude' =&gt; -61), 'Charlotte Amalie' =&gt; array('latitude' =&gt; 18.34389, 'longitude' =&gt; -64.93111), 'Chicago' =&gt; array('latitude' =&gt; 41.85, 'longitude' =&gt; -87.65), 'Chisinau' =&gt; array('latitude' =&gt; 47.055556, 'longitude' =&gt; 28.8575), 'Cockburn Town' =&gt; array('latitude' =&gt; 21.4666667, 'longitude' =&gt; -71.1333333), 'Colombo' =&gt; array('latitude' =&gt; 6.9319444, 'longitude' =&gt; 79.8477778), 'Conakry' =&gt; array('latitude' =&gt; 9.5091667, 'longitude' =&gt; -13.7122222), 'Copenhagen' =&gt; array('latitude' =&gt; 55.6666667, 'longitude' =&gt; 12.5833333), 'Cotonou' =&gt; array('latitude' =&gt; 6.35, 'longitude' =&gt; 2.4333333), 'Dakar' =&gt; array('latitude' =&gt; 14.6708333, 'longitude' =&gt; -17.4380556), 'Damascus' =&gt; array('latitude' =&gt; 33.5, 'longitude' =&gt; 36.3), 'Dar es Salaam' =&gt; array('latitude' =&gt; -6.8, 'longitude' =&gt; 39.2833333), 'Dhaka' =&gt; array('latitude' =&gt; 23.7230556, 'longitude' =&gt; 90.4086111), 'Dili' =&gt; array('latitude' =&gt; -8.5586111, 'longitude' =&gt; 125.5736111), 'Djibouti' =&gt; array('latitude' =&gt; 11.595, 'longitude' =&gt; 43.1480556), 'Dodoma' =&gt; array('latitude' =&gt; -6.1833333, 'longitude' =&gt; 35.75), 'Doha' =&gt; array('latitude' =&gt; 25.2866667, 'longitude' =&gt; 51.5333333), 'Dubai' =&gt; array('latitude' =&gt; 25.2522222, 'longitude' =&gt; 55.28), 'Dublin' =&gt; array('latitude' =&gt; 53.3330556, 'longitude' =&gt; -6.2488889), 'Dushanbe' =&gt; array('latitude' =&gt; 38.56, 'longitude' =&gt; 68.7738889), 'Fagatogo' =&gt; array('latitude' =&gt; -14.2825, 'longitude' =&gt; -170.69), 'Fongafale' =&gt; array('latitude' =&gt; -8.5166667, 'longitude' =&gt; 179.2166667), 'Freetown' =&gt; array('latitude' =&gt; 8.49, 'longitude' =&gt; -13.2341667), 'Gaborone' =&gt; array('latitude' =&gt; -24.6463889, 'longitude' =&gt; 25.9119444), 'Geneva' =&gt; array('latitude' =&gt; 46.2, 'longitude' =&gt; 6.1666667), 'George Town' =&gt; array('latitude' =&gt; 19.3, 'longitude' =&gt; -81.3833333), 'Georgetown' =&gt; array('latitude' =&gt; 6.8, 'longitude' =&gt; -58.1666667), 'Gibraltar' =&gt; array('latitude' =&gt; 36.1333333, 'longitude' =&gt; -5.35), 'Glasgow' =&gt; array('latitude' =&gt; 55.8333333, 'longitude' =&gt; -4.25), 'Guatemala la Nueva' =&gt; array('latitude' =&gt; 14.6211111, 'longitude' =&gt; -90.5269444), 'Hagatna' =&gt; array('latitude' =&gt; 13.47417, 'longitude' =&gt; 144.74778), 'The Hague' =&gt; array('latitude' =&gt; 52.0833333, 'longitude' =&gt; 4.3), 'Hamilton' =&gt; array('latitude' =&gt; 32.2941667, 'longitude' =&gt; -64.7838889), 'Hanoi' =&gt; array('latitude' =&gt; 21.0333333, 'longitude' =&gt; 105.85), 'Harare' =&gt; array('latitude' =&gt; -17.8177778, 'longitude' =&gt; 31.0447222), 'Havana' =&gt; array('latitude' =&gt; 23.1319444, 'longitude' =&gt; -82.3641667), 'Helsinki' =&gt; array('latitude' =&gt; 60.1755556, 'longitude' =&gt; 24.9341667), 'Honiara' =&gt; array('latitude' =&gt; -9.4333333, 'longitude' =&gt; 159.95), 'Islamabad' =&gt; array('latitude' =&gt; 30.8486111, 'longitude' =&gt; 72.4944444), 'Istanbul' =&gt; array('latitude' =&gt; 41.0186111, 'longitude' =&gt; 28.9647222), 'Jakarta' =&gt; array('latitude' =&gt; -6.1744444, 'longitude' =&gt; 106.8294444), 'Jamestown' =&gt; array('latitude' =&gt; -15.9333333, 'longitude' =&gt; -5.7166667), 'Jerusalem' =&gt; array('latitude' =&gt; 31.7666667, 'longitude' =&gt; 35.2333333), 'Johannesburg' =&gt; array('latitude' =&gt; -26.2, 'longitude' =&gt; 28.0833333), 'Kabul' =&gt; array('latitude' =&gt; 34.5166667, 'longitude' =&gt; 69.1833333), 'Kampala' =&gt; array('latitude' =&gt; 0.3155556, 'longitude' =&gt; 32.5655556), 'Kathmandu' =&gt; array('latitude' =&gt; 27.7166667, 'longitude' =&gt; 85.3166667), 'Khartoum' =&gt; array('latitude' =&gt; 15.5880556, 'longitude' =&gt; 32.5341667), 'Kigali' =&gt; array('latitude' =&gt; -1.9536111, 'longitude' =&gt; 30.0605556), 'Kingston' =&gt; array('latitude' =&gt; -29.05, 'longitude' =&gt; 167.95), 'Kingstown' =&gt; array('latitude' =&gt; 13.1333333, 'longitude' =&gt; -61.2166667), 'Kinshasa' =&gt; array('latitude' =&gt; -4.3, 'longitude' =&gt; 15.3), 'Kolkata' =&gt; array('latitude' =&gt; 22.5697222, 'longitude' =&gt; 88.3697222), 'Kuala Lumpur' =&gt; array('latitude' =&gt; 3.1666667, 'longitude' =&gt; 101.7), 'Kuwait City' =&gt; array('latitude' =&gt; 29.3697222, 'longitude' =&gt; 47.9783333), 'Kiev' =&gt; array('latitude' =&gt; 50.4333333, 'longitude' =&gt; 30.5166667), 'La Paz' =&gt; array('latitude' =&gt; -16.5, 'longitude' =&gt; -68.15), 'Libreville' =&gt; array('latitude' =&gt; 0.3833333, 'longitude' =&gt; 9.45), 'Lilongwe' =&gt; array('latitude' =&gt; -13.9833333, 'longitude' =&gt; 33.7833333), 'Lima' =&gt; array('latitude' =&gt; -12.05, 'longitude' =&gt; -77.05), 'Lisbon' =&gt; array('latitude' =&gt; 38.7166667, 'longitude' =&gt; -9.1333333), 'Ljubljana' =&gt; array('latitude' =&gt; 46.0552778, 'longitude' =&gt; 14.5144444), 'Lobamba' =&gt; array('latitude' =&gt; -26.4666667, 'longitude' =&gt; 31.2), 'Lomé' =&gt; array('latitude' =&gt; 9.7166667, 'longitude' =&gt; 38.3), 'London' =&gt; array('latitude' =&gt; 51.5, 'longitude' =&gt; -0.1166667), 'Los Angeles' =&gt; array('latitude' =&gt; 34.05222, 'longitude' =&gt; -118.24278), 'Luanda' =&gt; array('latitude' =&gt; -8.8383333, 'longitude' =&gt; 13.2344444), 'Lusaka' =&gt; array('latitude' =&gt; -15.4166667, 'longitude' =&gt; 28.2833333), 'Luxembourg' =&gt; array('latitude' =&gt; 49.6116667, 'longitude' =&gt; 6.13), 'Madrid' =&gt; array('latitude' =&gt; 40.4, 'longitude' =&gt; -3.6833333), 'Majuro' =&gt; array('latitude' =&gt; 7.1, 'longitude' =&gt; 171.3833333), 'Malabo' =&gt; array('latitude' =&gt; 3.75, 'longitude' =&gt; 8.7833333), 'Managua' =&gt; array('latitude' =&gt; 12.1508333, 'longitude' =&gt; -86.2683333), 'Manama' =&gt; array('latitude' =&gt; 26.2361111, 'longitude' =&gt; 50.5830556), 'Manila' =&gt; array('latitude' =&gt; 14.6041667, 'longitude' =&gt; 120.9822222), 'Maputo' =&gt; array('latitude' =&gt; -25.9652778, 'longitude' =&gt; 32.5891667), 'Maseru' =&gt; array('latitude' =&gt; -29.3166667, 'longitude' =&gt; 27.4833333), 'Mbabane' =&gt; array('latitude' =&gt; -26.3166667, 'longitude' =&gt; 31.1333333), 'Melbourne' =&gt; array('latitude' =&gt; -37.8166667, 'longitude' =&gt; 144.9666667), 'Melekeok' =&gt; array('latitude' =&gt; 7.4933333, 'longitude' =&gt; 134.6341667), 'Mexiko City' =&gt; array('latitude' =&gt; 19.4341667, 'longitude' =&gt; -99.1386111), 'Minsk' =&gt; array('latitude' =&gt; 53.9, 'longitude' =&gt; 27.5666667), 'Mogadishu' =&gt; array('latitude' =&gt; 2.0666667, 'longitude' =&gt; 45.3666667), 'Monaco' =&gt; array('latitude' =&gt; 43.7333333, 'longitude' =&gt; 7.4166667), 'Monrovia' =&gt; array('latitude' =&gt; 6.3105556, 'longitude' =&gt; -10.8047222), 'Montevideo' =&gt; array('latitude' =&gt; -34.8580556, 'longitude' =&gt; -56.1708333), 'Montreal' =&gt; array('latitude' =&gt; 45.5, 'longitude' =&gt; -73.5833333), 'Moroni' =&gt; array('latitude' =&gt; -11.7041667, 'longitude' =&gt; 43.2402778), 'Moscow' =&gt; array('latitude' =&gt; 55.7522222, 'longitude' =&gt; 37.6155556), 'Muscat' =&gt; array('latitude' =&gt; 23.6133333, 'longitude' =&gt; 58.5933333), 'Nairobi' =&gt; array('latitude' =&gt; -1.3166667, 'longitude' =&gt; 36.8333333), 'Nassau' =&gt; array('latitude' =&gt; 25.0833333, 'longitude' =&gt; -77.35), 'N´Djamena' =&gt; array('latitude' =&gt; 12.1130556, 'longitude' =&gt; 15.0491667), 'New Dehli' =&gt; array('latitude' =&gt; 28.6, 'longitude' =&gt; 77.2), 'New York' =&gt; array('latitude' =&gt; 40.71417, 'longitude' =&gt; -74.00639), 'Newcastle' =&gt; array('latitude' =&gt; -32.9166667, 'longitude' =&gt; 151.75), 'Niamey' =&gt; array('latitude' =&gt; 13.6666667, 'longitude' =&gt; 1.7833333), 'Nicosia' =&gt; array('latitude' =&gt; 35.1666667, 'longitude' =&gt; 33.3666667), 'Nouakchott' =&gt; array('latitude' =&gt; 18.0863889, 'longitude' =&gt; -15.9752778), 'Noumea' =&gt; array('latitude' =&gt; -22.2666667, 'longitude' =&gt; 166.45), 'Nuku´alofa' =&gt; array('latitude' =&gt; -21.1333333, 'longitude' =&gt; -175.2), 'Nuuk' =&gt; array('latitude' =&gt; 64.1833333, 'longitude' =&gt; -51.75), 'Oranjestad' =&gt; array('latitude' =&gt; 12.5166667, 'longitude' =&gt; -70.0333333), 'Oslo' =&gt; array('latitude' =&gt; 59.9166667, 'longitude' =&gt; 10.75), 'Ouagadougou' =&gt; array('latitude' =&gt; 12.3702778, 'longitude' =&gt; -1.5247222), 'Palikir' =&gt; array('latitude' =&gt; 6.9166667, 'longitude' =&gt; 158.15), 'Panama City' =&gt; array('latitude' =&gt; 8.9666667, 'longitude' =&gt; -79.5333333), 'Papeete' =&gt; array('latitude' =&gt; -17.5333333, 'longitude' =&gt; -149.5666667), 'Paramaribo' =&gt; array('latitude' =&gt; 5.8333333, 'longitude' =&gt; -55.1666667), 'Paris' =&gt; array('latitude' =&gt; 48.8666667, 'longitude' =&gt; 2.3333333), 'Perth' =&gt; array('latitude' =&gt; -31.9333333, 'longitude' =&gt; 115.8333333), 'Phnom Penh' =&gt; array('latitude' =&gt; 11.55, 'longitude' =&gt; 104.9166667), 'Podgorica' =&gt; array('latitude' =&gt; 43.7752778, 'longitude' =&gt; 19.6827778), 'Port Louis' =&gt; array('latitude' =&gt; -20.1666667, 'longitude' =&gt; 57.5), 'Port Moresby' =&gt; array('latitude' =&gt; -9.4647222, 'longitude' =&gt; 147.1925), 'Port-au-Prince' =&gt; array('latitude' =&gt; 18.5391667, 'longitude' =&gt; -72.335), 'Port of Spain' =&gt; array('latitude' =&gt; 10.6666667, 'longitude' =&gt; -61.5), 'Porto-Novo' =&gt; array('latitude' =&gt; 6.4833333, 'longitude' =&gt; 2.6166667), 'Prague' =&gt; array('latitude' =&gt; 50.0833333, 'longitude' =&gt; 14.4666667), 'Praia' =&gt; array('latitude' =&gt; 14.9166667, 'longitude' =&gt; -23.5166667), 'Pretoria' =&gt; array('latitude' =&gt; -25.7069444, 'longitude' =&gt; 28.2294444), 'Pyongyang' =&gt; array('latitude' =&gt; 39.0194444, 'longitude' =&gt; 125.7547222), 'Quito' =&gt; array('latitude' =&gt; -0.2166667, 'longitude' =&gt; -78.5), 'Rabat' =&gt; array('latitude' =&gt; 34.0252778, 'longitude' =&gt; -6.8361111), 'Reykjavik' =&gt; array('latitude' =&gt; 64.15, 'longitude' =&gt; -21.95), 'Riga' =&gt; array('latitude' =&gt; 56.95, 'longitude' =&gt; 24.1), 'Rio de Janero' =&gt; array('latitude' =&gt; -22.9, 'longitude' =&gt; -43.2333333), 'Road Town' =&gt; array('latitude' =&gt; 18.4166667, 'longitude' =&gt; -64.6166667), 'Rome' =&gt; array('latitude' =&gt; 41.9, 'longitude' =&gt; 12.4833333), 'Roseau' =&gt; array('latitude' =&gt; 15.3, 'longitude' =&gt; -61.4), 'Rotterdam' =&gt; array('latitude' =&gt; 51.9166667, 'longitude' =&gt; 4.5), 'Salvador' =&gt; array('latitude' =&gt; -12.9833333, 'longitude' =&gt; -38.5166667), 'San José' =&gt; array('latitude' =&gt; 9.9333333, 'longitude' =&gt; -84.0833333), 'San Juan' =&gt; array('latitude' =&gt; 18.46833, 'longitude' =&gt; -66.10611), 'San Marino' =&gt; array('latitude' =&gt; 43.5333333, 'longitude' =&gt; 12.9666667), 'San Salvador' =&gt; array('latitude' =&gt; 13.7086111, 'longitude' =&gt; -89.2030556), 'Sanaá' =&gt; array('latitude' =&gt; 15.3547222, 'longitude' =&gt; 44.2066667), 'Santa Cruz' =&gt; array('latitude' =&gt; -17.8, 'longitude' =&gt; -63.1666667), 'Santiago' =&gt; array('latitude' =&gt; -33.45, 'longitude' =&gt; -70.6666667), 'Santo Domingo' =&gt; array('latitude' =&gt; 18.4666667, 'longitude' =&gt; -69.9), 'Sao Paulo' =&gt; array('latitude' =&gt; -23.5333333, 'longitude' =&gt; -46.6166667), 'Sarajevo' =&gt; array('latitude' =&gt; 43.85, 'longitude' =&gt; 18.3833333), 'Seoul' =&gt; array('latitude' =&gt; 37.5663889, 'longitude' =&gt; 126.9997222), 'Shanghai' =&gt; array('latitude' =&gt; 31.2222222, 'longitude' =&gt; 121.4580556), 'Sydney' =&gt; array('latitude' =&gt; -33.8833333, 'longitude' =&gt; 151.2166667), 'Singapore' =&gt; array('latitude' =&gt; 1.2930556, 'longitude' =&gt; 103.8558333), 'Skopje' =&gt; array('latitude' =&gt; 42, 'longitude' =&gt; 21.4333333), 'Sofia' =&gt; array('latitude' =&gt; 42.6833333, 'longitude' =&gt; 23.3166667), 'St. George´s' =&gt; array('latitude' =&gt; 12.05, 'longitude' =&gt; -61.75), 'St. John´s' =&gt; array('latitude' =&gt; 17.1166667, 'longitude' =&gt; -61.85), 'Stanley' =&gt; array('latitude' =&gt; -51.7, 'longitude' =&gt; -57.85), 'Stockholm' =&gt; array('latitude' =&gt; 59.3333333, 'longitude' =&gt; 18.05), 'Suva' =&gt; array('latitude' =&gt; -18.1333333, 'longitude' =&gt; 178.4166667), 'Taipei' =&gt; array('latitude' =&gt; 25.0166667, 'longitude' =&gt; 121.45), 'Tallinn' =&gt; array('latitude' =&gt; 59.4338889, 'longitude' =&gt; 24.7280556), 'Tashkent' =&gt; array('latitude' =&gt; 41.3166667, 'longitude' =&gt; 69.25), 'Tbilisi' =&gt; array('latitude' =&gt; 41.725, 'longitude' =&gt; 44.7908333), 'Tegucigalpa' =&gt; array('latitude' =&gt; 14.1, 'longitude' =&gt; -87.2166667), 'Tehran' =&gt; array('latitude' =&gt; 35.6719444, 'longitude' =&gt; 51.4244444), 'The Hague' =&gt; array('latitude' =&gt; 52.0833333, 'longitude' =&gt; 4.3), 'Thimphu' =&gt; array('latitude' =&gt; 27.4833333, 'longitude' =&gt; 89.6), 'Tirana' =&gt; array('latitude' =&gt; 41.3275, 'longitude' =&gt; 19.8188889), 'Tiraspol' =&gt; array('latitude' =&gt; 46.8402778, 'longitude' =&gt; 29.6433333), 'Tokyo' =&gt; array('latitude' =&gt; 35.685, 'longitude' =&gt; 139.7513889), 'Toronto' =&gt; array('latitude' =&gt; 43.6666667, 'longitude' =&gt; -79.4166667), 'Tórshavn' =&gt; array('latitude' =&gt; 62.0166667, 'longitude' =&gt; -6.7666667), 'Tripoli' =&gt; array('latitude' =&gt; 32.8925, 'longitude' =&gt; 13.18), 'Tunis' =&gt; array('latitude' =&gt; 36.8027778, 'longitude' =&gt; 10.1797222), 'Ulaanbaatar' =&gt; array('latitude' =&gt; 47.9166667, 'longitude' =&gt; 106.9166667), 'Vaduz' =&gt; array('latitude' =&gt; 47.1333333, 'longitude' =&gt; 9.5166667), 'Valletta' =&gt; array('latitude' =&gt; 35.8997222, 'longitude' =&gt; 14.5147222), 'Valparaiso' =&gt; array('latitude' =&gt; -33.0477778, 'longitude' =&gt; -71.6011111), 'Vancouver' =&gt; array('latitude' =&gt; 49.25, 'longitude' =&gt; -123.1333333), 'Vatican City' =&gt; array('latitude' =&gt; 41.9, 'longitude' =&gt; 12.4833333), 'Victoria' =&gt; array('latitude' =&gt; -4.6166667, 'longitude' =&gt; 55.45), 'Vienna' =&gt; array('latitude' =&gt; 48.2, 'longitude' =&gt; 16.3666667), 'Vientaine' =&gt; array('latitude' =&gt; 17.9666667, 'longitude' =&gt; 102.6), 'Vilnius' =&gt; array('latitude' =&gt; 54.6833333, 'longitude' =&gt; 25.3166667), 'Warsaw' =&gt; array('latitude' =&gt; 52.25, 'longitude' =&gt; 21), 'Washington dc' =&gt; array('latitude' =&gt; 38.895, 'longitude' =&gt; -77.03667), 'Wellington' =&gt; array('latitude' =&gt; -41.3, 'longitude' =&gt; 174.7833333), 'Willemstad' =&gt; array('latitude' =&gt; 12.1, 'longitude' =&gt; -68.9166667), 'Windhoek' =&gt; array('latitude' =&gt; -22.57, 'longitude' =&gt; 17.0836111), 'Yamoussoukro' =&gt; array('latitude' =&gt; 6.8166667, 'longitude' =&gt; -5.2833333), 'Yaoundé' =&gt; array('latitude' =&gt; 3.8666667, 'longitude' =&gt; 11.5166667), 'Yerevan' =&gt; array('latitude' =&gt; 40.1811111, 'longitude' =&gt; 44.5136111), 'Zürich' =&gt; array('latitude' =&gt; 47.3666667, 'longitude' =&gt; 8.55), 'Zagreb' =&gt; array('latitude' =&gt; 45.8, 'longitude' =&gt; 16))</default>
        <docblock line="43">
          <description>Array Collection of known cities</description>
          <long-description>The array contains 'latitude' and 'longitude' for every known city</long-description>
          <tag name="var" line="43" description="" type="Array" variable="">
            <type>Array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="300" package="Zend_Date\Zend_Date_Cities">
        <name>City</name>
        <full_name>\Zend_Date_Cities::City()</full_name>
        <docblock line="300">
          <description>Returns the location from the selected city</description>
          <long-description></long-description>
          <tag name="param" line="300" description="&lt;p&gt;City to get location for&lt;/p&gt;" type="string" variable="$city">
            <type>string</type>
          </tag>
          <tag name="param" line="300" description="&lt;p&gt;Horizon to use :&#10;                        default: effective&#10;                        others are civil, nautic, astronomic&lt;/p&gt;" type="string" variable="$horizon">
            <type>string</type>
          </tag>
          <tag name="return" line="300" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="300" description="When city is unknown" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$city</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$horizon</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="318" package="Zend_Date\Zend_Date_Cities">
        <name>getCityList</name>
        <full_name>\Zend_Date_Cities::getCityList()</full_name>
        <docblock line="318">
          <description>Return a list with all known cities</description>
          <long-description></long-description>
          <tag name="return" line="318" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Date/Exception.php" generated-path="Date.Exception.html" hash="6d2084d3eee32a8dfeb16ad5d833add8" package="Zend_Date">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Date"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="35" package="Zend_Date">
      <extends>\Zend_Exception</extends>
      <name>Zend_Date_Exception</name>
      <full_name>\Zend_Date_Exception</full_name>
      <docblock line="35">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="35" description="Zend"/>
        <tag name="package" line="35" description="Zend_Date"/>
        <tag name="copyright" line="35" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="35" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Exception" refers="\Zend_Exception" link="/classes/Zend_Exception.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="37" package="Zend_Date">
        <name>$operand</name>
        <full_name>\Zend_Date_Exception::operand</full_name>
        <default>null</default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="Zend_Date">
        <name>__construct</name>
        <full_name>\Zend_Date_Exception::__construct()</full_name>
        <docblock line="39">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Zend_Exception::__construct()" refers="\Zend_Exception::__construct()" link="/classes/Zend_Exception.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$e</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$op</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="Zend_Date">
        <name>getOperand</name>
        <full_name>\Zend_Date_Exception::getOperand()</full_name>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="35" code="PPC:ERR-50005">No summary for class \Zend_Date_Exception</error>
      <error line="39" code="PPC:ERR-50015">Argument $message is missing from the Docblock of __construct</error>
      <error line="39" code="PPC:ERR-50015">Argument $code is missing from the Docblock of __construct</error>
      <error line="39" code="PPC:ERR-50015">Argument $e is missing from the Docblock of __construct</error>
      <error line="39" code="PPC:ERR-50015">Argument $op is missing from the Docblock of __construct</error>
      <error line="39" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="45" code="PPC:ERR-50008">No summary for method getOperand()</error>
      <error line="37" code="PPC:ERR-50007">No summary for property $operand</error>
    </parse_markers>
    <source>eJzNU8tu2zAQvPsr9mAgtmFLboBcnD7SJi5gwEiBOr30YlDUWmJDkSofVtwi/94lJdmFUQQ99FCdqOXszHC4fP2uLutBOpkMYAJfUeXw0bAKG20eqRKK69Xt8n6z7P4eSmHBam84wk5IhPDrs2/IHTgNrkRQ2MCHzR1IwVFZpBpzAZZ5lUvMA0sjXEl1KtaMP7KCaFTsjZSdYuKeXBLQq9jOpNXA9kxIlsnAarQvythFbmU+a0SOswYzILnI/eXzehH6S+fqRZru+oMlP+icCddV2llMyfIss9HaagcH7SEXOSjtwCBHsUdgwHV9AL2Lgv3RGOXFDIJXrScdGHTmGB1HuBc8TqGWyIjBhsiZAqzoYKGbQuzYb3qblDc0CJxgER78dX5EVWEumEN5SLobuuH0W2hzAIgXGmt9zF1te0eYFkwsRhSlA7g9Lkd8DJfz+dXscv7qqp2KB+Sl0lIXAinYzXtYKZ7AqIu2aZpjqOPIu0djhVZBcLjKh7HWp0bfX19JAMN9N1Hrdo/I0sHg96HdLp841o4E457B714Y3GpFU3oRAOkRkNC8X1yf2v+PuP5pNFwya0/GT+EAPjmq2vPMfg4CVW20o2eMOQx1jSbM9htQXkpKK+77jBzAziseybZbrpV1xnM3GlZoLSU2hSHXOVLjnJbYEUwDY7ceR65WMU5HeKqztydFgl4fd2t6XcotFi9oBZ1x2/H8Z6MFuk8t/ehc3aDzRp2Z6MmeB78AUKqefw==</source>
  </file>
  <file path="Date/DateObject.php" generated-path="Date.DateObject.html" hash="f532022a5c0a6b16de0b228305ae4525" package="Zend_Date">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Date"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="29" package="Zend_Date\Zend_Date_DateObject">
      <extends/>
      <name>Zend_Date_DateObject</name>
      <full_name>\Zend_Date_DateObject</full_name>
      <docblock line="29">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="29" description="Zend"/>
        <tag name="package" line="29" description="Zend_Date"/>
        <tag name="subpackage" line="29" description="Zend_Date_DateObject"/>
        <tag name="copyright" line="29" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="29" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="34" package="Zend_Date\Zend_Date_DateObject">
        <name>$_unixTimestamp</name>
        <full_name>\Zend_Date_DateObject::_unixTimestamp</full_name>
        <default></default>
        <docblock line="34">
          <description>UNIX Timestamp</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="35" package="Zend_Date\Zend_Date_DateObject">
        <name>$_cache</name>
        <full_name>\Zend_Date_DateObject::_cache</full_name>
        <default>null</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="36" package="Zend_Date\Zend_Date_DateObject">
        <name>$_cacheTags</name>
        <full_name>\Zend_Date_DateObject::_cacheTags</full_name>
        <default>false</default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="37" package="Zend_Date\Zend_Date_DateObject">
        <name>$_defaultOffset</name>
        <full_name>\Zend_Date_DateObject::_defaultOffset</full_name>
        <default>0</default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="42" package="Zend_Date\Zend_Date_DateObject">
        <name>$_timezone</name>
        <full_name>\Zend_Date_DateObject::_timezone</full_name>
        <default>'UTC'</default>
        <docblock line="42">
          <description>active timezone</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="43" package="Zend_Date\Zend_Date_DateObject">
        <name>$_offset</name>
        <full_name>\Zend_Date_DateObject::_offset</full_name>
        <default>0</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="44" package="Zend_Date\Zend_Date_DateObject">
        <name>$_syncronised</name>
        <full_name>\Zend_Date_DateObject::_syncronised</full_name>
        <default>0</default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="47" package="Zend_Date\Zend_Date_DateObject">
        <name>$_dst</name>
        <full_name>\Zend_Date_DateObject::_dst</full_name>
        <default>true</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="52" package="Zend_Date\Zend_Date_DateObject">
        <name>$_monthTable</name>
        <full_name>\Zend_Date_DateObject::_monthTable</full_name>
        <default>array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)</default>
        <docblock line="52">
          <description>Table of Monthdays</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="57" package="Zend_Date\Zend_Date_DateObject">
        <name>$_yearTable</name>
        <full_name>\Zend_Date_DateObject::_yearTable</full_name>
        <default>array(1970 =&gt; 0, 1960 =&gt; -315619200, 1950 =&gt; -631152000, 1940 =&gt; -946771200, 1930 =&gt; -1262304000, 1920 =&gt; -1577923200, 1910 =&gt; -1893456000, 1900 =&gt; -2208988800, 1890 =&gt; -2524521600, 1880 =&gt; -2840140800, 1870 =&gt; -3155673600, 1860 =&gt; -3471292800, 1850 =&gt; -3786825600, 1840 =&gt; -4102444800, 1830 =&gt; -4417977600, 1820 =&gt; -4733596800, 1810 =&gt; -5049129600, 1800 =&gt; -5364662400, 1790 =&gt; -5680195200, 1780 =&gt; -5995814400, 1770 =&gt; -6311347200, 1760 =&gt; -6626966400, 1750 =&gt; -6942499200, 1740 =&gt; -7258118400, 1730 =&gt; -7573651200, 1720 =&gt; -7889270400, 1710 =&gt; -8204803200, 1700 =&gt; -8520336000, 1690 =&gt; -8835868800, 1680 =&gt; -9151488000, 1670 =&gt; -9467020800, 1660 =&gt; -9782640000, 1650 =&gt; -10098172800, 1640 =&gt; -10413792000, 1630 =&gt; -10729324800, 1620 =&gt; -11044944000, 1610 =&gt; -11360476800, 1600 =&gt; -11676096000)</default>
        <docblock line="57">
          <description>Table of Years</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="79" package="Zend_Date\Zend_Date_DateObject">
        <name>setUnixTimestamp</name>
        <full_name>\Zend_Date_DateObject::setUnixTimestamp()</full_name>
        <docblock line="79">
          <description>Set this object to have a new UNIX timestamp.</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;OPTIONAL timestamp; defaults to local time using time()&lt;/p&gt;" type="string|integer" variable="$timestamp">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="79" description="old timestamp" type="string|integer">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="throws" line="79" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default>null</default>
          <type>string|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="102" package="Zend_Date\Zend_Date_DateObject">
        <name>getUnixTimestamp</name>
        <full_name>\Zend_Date_DateObject::getUnixTimestamp()</full_name>
        <docblock line="102">
          <description>Returns this object's UNIX timestamp
A timestamp greater then the integer range will be returned as string
This function does not return the timestamp as object. Use copy() instead.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="timestamp" type="integer|string">
            <type>integer</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="119" package="Zend_Date\Zend_Date_DateObject">
        <name>_getTime</name>
        <full_name>\Zend_Date_DateObject::_getTime()</full_name>
        <docblock line="119">
          <description>Internal function.</description>
          <long-description>Returns time().  This method exists to allow unit tests to work-around methods that might otherwise
be hard-coded to use time().  For example, this makes it possible to test isYesterday() in Date.php.</long-description>
          <tag name="param" line="119" description="&lt;p&gt;OPTIONAL time syncronisation value&lt;/p&gt;" type="integer" variable="$sync">
            <type>integer</type>
          </tag>
          <tag name="return" line="119" description="timestamp" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sync</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="146" package="Zend_Date\Zend_Date_DateObject">
        <name>mktime</name>
        <full_name>\Zend_Date_DateObject::mktime()</full_name>
        <docblock line="146">
          <description>Internal mktime function used by Zend_Date.</description>
          <long-description>The timestamp returned by mktime() can exceed the precision of traditional UNIX timestamps,
by allowing PHP to auto-convert to using a float value.

Returns a timestamp relative to 1970/01/01 00:00:00 GMT/UTC.
DST (Summer/Winter) is depriciated since php 5.1.0.
Year has to be 4 digits otherwise it would be recognised as
year 70 AD instead of 1970 AD as expected !!</long-description>
          <tag name="param" line="146" description="" type="integer" variable="$hour">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$minute">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$second">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$month">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$day">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date&lt;/p&gt;" type="boolean" variable="$gmt">
            <type>boolean</type>
          </tag>
          <tag name="return" line="146" description="timestamp (number of seconds elapsed relative to 1970/01/01 00:00:00 GMT/UTC)" type="integer|float">
            <type>integer</type>
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hour</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$minute</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$second</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$gmt</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="274" package="Zend_Date\Zend_Date_DateObject">
        <name>isYearLeapYear</name>
        <full_name>\Zend_Date_DateObject::isYearLeapYear()</full_name>
        <docblock line="274">
          <description>Returns true, if given $year is a leap year.</description>
          <long-description></long-description>
          <tag name="param" line="274" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="return" line="274" description="true, if year is leap year" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="301" package="Zend_Date\Zend_Date_DateObject">
        <name>date</name>
        <full_name>\Zend_Date_DateObject::date()</full_name>
        <docblock line="301">
          <description>Internal mktime function used by Zend_Date for handling 64bit timestamps.</description>
          <long-description>Returns a formatted date for a given timestamp.</long-description>
          <tag name="param" line="301" description="&lt;p&gt;format for output&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="param" line="301" description="" type="mixed" variable="$timestamp">
            <type>mixed</type>
          </tag>
          <tag name="param" line="301" description="&lt;p&gt;OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date&lt;/p&gt;" type="boolean" variable="$gmt">
            <type>boolean</type>
          </tag>
          <tag name="return" line="301" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$gmt</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="636" package="Zend_Date\Zend_Date_DateObject">
        <name>dayOfWeek</name>
        <full_name>\Zend_Date_DateObject::dayOfWeek()</full_name>
        <docblock line="636">
          <description>Returns the day of week for a Gregorian calendar date.</description>
          <long-description>0 = sunday, 6 = saturday</long-description>
          <tag name="param" line="636" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="param" line="636" description="" type="integer" variable="$month">
            <type>integer</type>
          </tag>
          <tag name="param" line="636" description="" type="integer" variable="$day">
            <type>integer</type>
          </tag>
          <tag name="return" line="636" description="dayOfWeek" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="674" package="Zend_Date\Zend_Date_DateObject">
        <name>getDateParts</name>
        <full_name>\Zend_Date_DateObject::getDateParts()</full_name>
        <docblock line="674">
          <description>Internal getDateParts function for handling 64bit timestamps, similar to:
http://www.php.net/getdate</description>
          <long-description>Returns an array of date parts for $timestamp, relative to 1970/01/01 00:00:00 GMT/UTC.

$fast specifies ALL date parts should be returned (slower)
Default is false, and excludes $dayofweek, weekday, month and timestamp from parts returned.</long-description>
          <tag name="param" line="674" description="" type="mixed" variable="$timestamp">
            <type>mixed</type>
          </tag>
          <tag name="param" line="674" description="&lt;p&gt;OPTIONAL defaults to fast (false), resulting in fewer date parts&lt;/p&gt;" type="boolean" variable="$fast">
            <type>boolean</type>
          </tag>
          <tag name="return" line="674" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fast</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="867" package="Zend_Date\Zend_Date_DateObject">
        <name>weekNumber</name>
        <full_name>\Zend_Date_DateObject::weekNumber()</full_name>
        <docblock line="867">
          <description>Internal getWeekNumber function for handling 64bit timestamps</description>
          <long-description>Returns the ISO 8601 week number of a given date</long-description>
          <tag name="param" line="867" description="" type="integer" variable="$year">
            <type>integer</type>
          </tag>
          <tag name="param" line="867" description="" type="integer" variable="$month">
            <type>integer</type>
          </tag>
          <tag name="param" line="867" description="" type="integer" variable="$day">
            <type>integer</type>
          </tag>
          <tag name="return" line="867" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$month</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$day</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="896" package="Zend_Date\Zend_Date_DateObject">
        <name>_range</name>
        <full_name>\Zend_Date_DateObject::_range()</full_name>
        <docblock line="896">
          <description>Internal _range function
Sets the value $a to be in the range of [0, $b]</description>
          <long-description></long-description>
          <tag name="param" line="896" description="&lt;ul&gt;&#10;&lt;li&gt;value to correct&lt;/li&gt;&#10;&lt;/ul&gt;" type="float" variable="$a">
            <type>float</type>
          </tag>
          <tag name="param" line="896" description="&lt;ul&gt;&#10;&lt;li&gt;maximum range to set&lt;/li&gt;&#10;&lt;/ul&gt;" type="float" variable="$b">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$a</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$b</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="913" package="Zend_Date\Zend_Date_DateObject">
        <name>calcSun</name>
        <full_name>\Zend_Date_DateObject::calcSun()</full_name>
        <docblock line="913">
          <description>Calculates the sunrise or sunset based on a location</description>
          <long-description></long-description>
          <tag name="param" line="913" description="&lt;p&gt;Location for calculation MUST include 'latitude', 'longitude', 'horizon'&lt;/p&gt;" type="array" variable="$location">
            <type>array</type>
          </tag>
          <tag name="param" line="913" description="&lt;p&gt;true: sunrise; false: sunset&lt;/p&gt;" type="boolean" variable="$horizon">
            <type>boolean</type>
          </tag>
          <tag name="return" line="913" description="- false: midnight sun, integer:" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$location</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$horizon</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rise</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1014" package="Zend_Date\Zend_Date_DateObject">
        <name>setTimezone</name>
        <full_name>\Zend_Date_DateObject::setTimezone()</full_name>
        <docblock line="1014">
          <description>Sets a new timezone for calculation of $this object's gmt offset.</description>
          <long-description>For a list of supported timezones look here: http://php.net/timezones
If no timezone can be detected or the given timezone is wrong UTC will be set.</long-description>
          <tag name="param" line="1014" description="&lt;p&gt;OPTIONAL timezone for date calculation; defaults to date_default_timezone_get()&lt;/p&gt;" type="string" variable="$zone">
            <type>string</type>
          </tag>
          <tag name="return" line="1014" description="Provides fluent interface" type="\Zend_Date_DateObject">
            <type>\Zend_Date_DateObject</type>
          </tag>
          <tag name="throws" line="1014" description="" type="\Zend_Date_Exception">
            <type>\Zend_Date_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$zone</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1051" package="Zend_Date\Zend_Date_DateObject">
        <name>getTimezone</name>
        <full_name>\Zend_Date_DateObject::getTimezone()</full_name>
        <docblock line="1051">
          <description>Return the timezone of $this object.</description>
          <long-description>The timezone is initially set when the object is instantiated.</long-description>
          <tag name="return" line="1051" description="actual set timezone string" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1063" package="Zend_Date\Zend_Date_DateObject">
        <name>getGmtOffset</name>
        <full_name>\Zend_Date_DateObject::getGmtOffset()</full_name>
        <docblock line="1063">
          <description>Return the offset to GMT of $this object's timezone.</description>
          <long-description>The offset to GMT is initially set when the object is instantiated using the currently,
in effect, default timezone for PHP functions.</long-description>
          <tag name="return" line="1063" description="seconds difference between GMT timezone and timezone when object was instantiated" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="1084" package="Zend_Date\Zend_Date_DateObject">
        <name>_getTagSupportForCache</name>
        <full_name>\Zend_Date_DateObject::_getTagSupportForCache()</full_name>
        <docblock line="1084">
          <description>Internal method to check if the given cache supports tags</description>
          <long-description></long-description>
          <tag name="param" line="1084" description="" type="\Zend_Cache" variable="$cache">
            <type>\Zend_Cache</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="PPC:ERR-50005">No summary for class \Zend_Date_DateObject</error>
      <error line="913" code="PPC:ERR-50015">Argument $rise is missing from the Docblock of calcSun</error>
      <error line="35" code="PPC:ERR-50007">No summary for property $_cache</error>
      <error line="36" code="PPC:ERR-50007">No summary for property $_cacheTags</error>
      <error line="37" code="PPC:ERR-50007">No summary for property $_defaultOffset</error>
      <error line="43" code="PPC:ERR-50007">No summary for property $_offset</error>
      <error line="44" code="PPC:ERR-50007">No summary for property $_syncronised</error>
      <error line="47" code="PPC:ERR-50007">No summary for property $_dst</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="Loader/PluginLoader.php" generated-path="Loader.PluginLoader.html" hash="d10ae00d18d57e007c8cadb50625ee07" package="Zend_Loader\PluginLoader">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Loader"/>
      <tag name="subpackage" line="0" description="PluginLoader"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="38" package="Zend_Loader\PluginLoader">
      <extends/>
      <implements>\Zend_Loader_PluginLoader_Interface</implements>
      <name>Zend_Loader_PluginLoader</name>
      <full_name>\Zend_Loader_PluginLoader</full_name>
      <docblock line="38">
        <description>Generic plugin class loader</description>
        <long-description></long-description>
        <tag name="category" line="38" description="Zend"/>
        <tag name="package" line="38" description="Zend_Loader"/>
        <tag name="subpackage" line="38" description="PluginLoader"/>
        <tag name="copyright" line="38" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="38" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="44" package="Zend_Loader\PluginLoader">
        <name>$_includeFileCache</name>
        <full_name>\Zend_Loader_PluginLoader::_includeFileCache</full_name>
        <default></default>
        <docblock line="44">
          <description>Class map cache file</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="50" package="Zend_Loader\PluginLoader">
        <name>$_includeFileCacheHandler</name>
        <full_name>\Zend_Loader_PluginLoader::_includeFileCacheHandler</full_name>
        <default></default>
        <docblock line="50">
          <description>Class map cache file handler</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="resource" variable="">
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="57" package="Zend_Loader\PluginLoader">
        <name>$_loadedPluginPaths</name>
        <full_name>\Zend_Loader_PluginLoader::_loadedPluginPaths</full_name>
        <default>array()</default>
        <docblock line="57">
          <description>Instance loaded plugin paths</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Loader\PluginLoader">
        <name>$_loadedPlugins</name>
        <full_name>\Zend_Loader_PluginLoader::_loadedPlugins</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Instance loaded plugins</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="71" package="Zend_Loader\PluginLoader">
        <name>$_prefixToPaths</name>
        <full_name>\Zend_Loader_PluginLoader::_prefixToPaths</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>Instance registry property</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="78" package="Zend_Loader\PluginLoader">
        <name>$_staticLoadedPluginPaths</name>
        <full_name>\Zend_Loader_PluginLoader::_staticLoadedPluginPaths</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>Statically loaded plugin path mappings</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="85" package="Zend_Loader\PluginLoader">
        <name>$_staticLoadedPlugins</name>
        <full_name>\Zend_Loader_PluginLoader::_staticLoadedPlugins</full_name>
        <default>array()</default>
        <docblock line="85">
          <description>Statically loaded plugins</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="92" package="Zend_Loader\PluginLoader">
        <name>$_staticPrefixToPaths</name>
        <full_name>\Zend_Loader_PluginLoader::_staticPrefixToPaths</full_name>
        <default>array()</default>
        <docblock line="92">
          <description>Static registry property</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="99" package="Zend_Loader\PluginLoader">
        <name>$_useStaticRegistry</name>
        <full_name>\Zend_Loader_PluginLoader::_useStaticRegistry</full_name>
        <default>null</default>
        <docblock line="99">
          <description>Whether to use a statically named registry for loading plugins</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="string|null" variable="">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="Zend_Loader\PluginLoader">
        <name>__construct</name>
        <full_name>\Zend_Loader_PluginLoader::__construct()</full_name>
        <docblock line="107">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="107" description="" type="array" variable="$prefixToPaths">
            <type>array</type>
          </tag>
          <tag name="param" line="107" description="&lt;p&gt;OPTIONAL&lt;/p&gt;" type="string" variable="$staticRegistryName">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefixToPaths</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$staticRegistryName</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="130" package="Zend_Loader\PluginLoader">
        <name>_formatPrefix</name>
        <full_name>\Zend_Loader_PluginLoader::_formatPrefix()</full_name>
        <docblock line="130">
          <description>Format prefix for internal use</description>
          <long-description></long-description>
          <tag name="param" line="130" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="130" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="153" package="Zend_Loader\PluginLoader">
        <name>addPrefixPath</name>
        <full_name>\Zend_Loader_PluginLoader::addPrefixPath()</full_name>
        <docblock line="153">
          <description>Add prefixed paths to the registry of paths</description>
          <long-description></long-description>
          <tag name="param" line="153" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="153" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="153" description="" type="\Zend_Loader_PluginLoader">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Loader_PluginLoader_Interface::addPrefixPath()" refers="\Zend_Loader_PluginLoader_Interface::addPrefixPath()" link="/classes/Zend_Loader_PluginLoader_Interface.html#method_addPrefixPath"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="182" package="Zend_Loader\PluginLoader">
        <name>getPaths</name>
        <full_name>\Zend_Loader_PluginLoader::getPaths()</full_name>
        <docblock line="182">
          <description>Get path stack</description>
          <long-description></long-description>
          <tag name="param" line="182" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="182" description="False if prefix does not exist, array otherwise" type="false|array">
            <type>false</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="214" package="Zend_Loader\PluginLoader">
        <name>clearPaths</name>
        <full_name>\Zend_Loader_PluginLoader::clearPaths()</full_name>
        <docblock line="214">
          <description>Clear path stack</description>
          <long-description></long-description>
          <tag name="param" line="214" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="214" description="False only if $prefix does not exist" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="251" package="Zend_Loader\PluginLoader">
        <name>removePrefixPath</name>
        <full_name>\Zend_Loader_PluginLoader::removePrefixPath()</full_name>
        <docblock line="251">
          <description>Remove a prefix (or prefixed-path) from the registry</description>
          <long-description></long-description>
          <tag name="param" line="251" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="251" description="&lt;p&gt;OPTIONAL&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="251" description="" type="\Zend_Loader_PluginLoader">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Loader_PluginLoader_Interface::removePrefixPath()" refers="\Zend_Loader_PluginLoader_Interface::removePrefixPath()" link="/classes/Zend_Loader_PluginLoader_Interface.html#method_removePrefixPath"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="285" package="Zend_Loader\PluginLoader">
        <name>_formatName</name>
        <full_name>\Zend_Loader_PluginLoader::_formatName()</full_name>
        <docblock line="285">
          <description>Normalize plugin name</description>
          <long-description></long-description>
          <tag name="param" line="285" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="285" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="296" package="Zend_Loader\PluginLoader">
        <name>isLoaded</name>
        <full_name>\Zend_Loader_PluginLoader::isLoaded()</full_name>
        <docblock line="296">
          <description>Whether or not a Plugin by a specific name is loaded</description>
          <long-description></long-description>
          <tag name="param" line="296" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="296" description="" type="\Zend_Loader_PluginLoader">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Loader_PluginLoader_Interface::isLoaded()" refers="\Zend_Loader_PluginLoader_Interface::isLoaded()" link="/classes/Zend_Loader_PluginLoader_Interface.html#method_isLoaded"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="312" package="Zend_Loader\PluginLoader">
        <name>getClassName</name>
        <full_name>\Zend_Loader_PluginLoader::getClassName()</full_name>
        <docblock line="312">
          <description>Return full class name for a named plugin</description>
          <long-description></long-description>
          <tag name="param" line="312" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="312" description="False if class not found, class name otherwise" type="string|false">
            <type>string</type>
            <type>false</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Loader_PluginLoader_Interface::getClassName()" refers="\Zend_Loader_PluginLoader_Interface::getClassName()" link="/classes/Zend_Loader_PluginLoader_Interface.html#method_getClassName"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="332" package="Zend_Loader\PluginLoader">
        <name>getClassPath</name>
        <full_name>\Zend_Loader_PluginLoader::getClassPath()</full_name>
        <docblock line="332">
          <description>Get path to plugin class</description>
          <long-description></long-description>
          <tag name="param" line="332" description="" type="mixed" variable="$name">
            <type>mixed</type>
          </tag>
          <tag name="return" line="332" description="False if not found" type="string|false">
            <type>string</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="368" package="Zend_Loader\PluginLoader">
        <name>load</name>
        <full_name>\Zend_Loader_PluginLoader::load()</full_name>
        <docblock line="368">
          <description>Load a plugin via the name provided</description>
          <long-description></long-description>
          <tag name="param" line="368" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="368" description="&lt;p&gt;Whether or not to throw exceptions if the&#10;class is not resolved&lt;/p&gt;" type="boolean" variable="$throwExceptions">
            <type>boolean</type>
          </tag>
          <tag name="return" line="368" description="Class name of loaded class; false if $throwExceptions&#10;if false and no class found" type="string|false">
            <type>string</type>
            <type>false</type>
          </tag>
          <tag name="throws" line="368" description="if class not found" type="\Zend_Loader_Exception">
            <type>\Zend_Loader_Exception</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Loader_PluginLoader_Interface::load()" refers="\Zend_Loader_PluginLoader_Interface::load()" link="/classes/Zend_Loader_PluginLoader_Interface.html#method_load"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$throwExceptions</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="445" package="Zend_Loader\PluginLoader">
        <name>setIncludeFileCache</name>
        <full_name>\Zend_Loader_PluginLoader::setIncludeFileCache()</full_name>
        <docblock line="445">
          <description>Set path to class file cache</description>
          <long-description>Specify a path to a file that will add include_once statements for each
plugin class loaded. This is an opt-in feature for performance purposes.</long-description>
          <tag name="param" line="445" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="445" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="445" description="if file is not writeable or path does not exist" type="\Zend_Loader_PluginLoader_Exception">
            <type>\Zend_Loader_PluginLoader_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="480" package="Zend_Loader\PluginLoader">
        <name>getIncludeFileCache</name>
        <full_name>\Zend_Loader_PluginLoader::getIncludeFileCache()</full_name>
        <docblock line="480">
          <description>Retrieve class file cache path</description>
          <long-description></long-description>
          <tag name="return" line="480" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="491" package="Zend_Loader\PluginLoader">
        <name>_appendIncFile</name>
        <full_name>\Zend_Loader_PluginLoader::_appendIncFile()</full_name>
        <docblock line="491">
          <description>Append an include_once statement to the class file cache</description>
          <long-description></long-description>
          <tag name="param" line="491" description="" type="string" variable="$incFile">
            <type>string</type>
          </tag>
          <tag name="return" line="491" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$incFile</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Loader/Exception.php" generated-path="Loader.Exception.html" hash="7c277691d5a550389d380d826fc8dad1" package="Zend_Loader">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Loader"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="34" package="Zend_Loader">
      <extends>\Zend_Exception</extends>
      <name>Zend_Loader_Exception</name>
      <full_name>\Zend_Loader_Exception</full_name>
      <docblock line="34">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="34" description="Zend"/>
        <tag name="package" line="34" description="Zend_Loader"/>
        <tag name="uses" line="34" description="" link="Zend_Exception"/>
        <tag name="copyright" line="34" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="34" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Exception" refers="\Zend_Exception" link="/classes/Zend_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="34" code="PPC:ERR-50005">No summary for class \Zend_Loader_Exception</error>
    </parse_markers>
    <source>eJzVUrFu2zAQ3fUVNwRIYtSSGyBLWqBuUxcQYGSokyVLQJFniQlFqiRl2S367zlSlFOkQNGO1SQ+vnv37vHef+iaLitmswxmcI9awBfLWhyMfSIkgOvyenWzWaXTbSMdONNbjrCVCiEc++oRuQdvwDcIGgf4tPkMSnLUDgljPtCqXguFIqgM0jeEE9gx/sRqktGxNkqmjrnf+zywy1jOlDPAdkwqVqmgak1fN7GK3CoxH6TA+YAVULuoffd1fRXqG++7q6LYToPl32nOnJu2SBYLsjyvXLRWbuFgehBSgDYeLHKUOwQG3HQHMNvYcBqNUV7MIvR69GSCgqk8o3Gk/4PHN9ApZKTgQuRMA7Y0WKimEJP6crJJecOAwIkW6cFf8iPbFoVkHtUhTy+05HSsjT0AxAeN2BRzwh7Whgm0I510rKwbD3B9/D3j53CxWFzOLxZvL8e9uEXeaKNMLZGi3XyEUvMczlK4wzAcYz2PulNG9P31AwQy3KT9WY93UWyH1kmjw/VJKU4IK7Jpa5cOcZxqtefYeeLFe4vfemnxwWja1dNAKI6EnLb+9N2LxD9m1jvKYPx+a/xfJFpkXDHnfh3sZQjAvSfcvZ7tx8/sGdq8WhE=</source>
  </file>
  <file path="Loader/PluginLoader/Exception.php" generated-path="Loader.PluginLoader.Exception.html" hash="b29fabc124089756cd1e0d46f19e4150" package="Zend_Loader\PluginLoader">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Loader"/>
      <tag name="subpackage" line="0" description="PluginLoader"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Loader\PluginLoader">
      <extends>\Zend_Loader_Exception</extends>
      <name>Zend_Loader_PluginLoader_Exception</name>
      <full_name>\Zend_Loader_PluginLoader_Exception</full_name>
      <docblock line="37">
        <description>Plugin class loader exceptions</description>
        <long-description></long-description>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Loader"/>
        <tag name="subpackage" line="37" description="PluginLoader"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Loader_Exception" refers="\Zend_Loader_Exception" link="/classes/Zend_Loader_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <source>eJzlU8Fu2zAMvfsreCjQNljsrEAv3YCm6zLAQFAMS3fZJZAlxtYqS54kR82G/fso2c5y2dB7c7LIx8fHR+b9bdd0WTGbZTCDb6gFfLKsxWDsE0VicF3erx42q/H12EgHzvSWI+ykQojPvvqO3IM34BsEjQE+bD6Ckhy1Q4oxH2FVr4VCEVmC9A3FKdgx/sRqotGpNlGOHXP/7POILlM5U84A2zOpWKUiqzV93aQqUqvEPEiB84AVULvE/fXL+ibWN953N0WxmwbLf9KcOTdtMUosSPK8cklauYOD6UFIAdp4sMhR7hEYcNMdwOxSw2k0Rn4xi9DrQZOJDKbyjMaR/j8a30CnkBGDi5YzDdjSYLGaTBzZl5NM8hsCAidYgkd9ox7Ztigk86gO+bihJadnbewBIC00xSabx9h2bZhAm1K0vSn7WfW11Ce52MPKuvEA98fPC34JV4vF9fxq8fZ6uJlH5I02ytQSyfbNHZSa53AxGh9COFp+mXgn/+j34uVEMDyMt7Uecolsj9ZJo2P6rBRnFCuy6aKXDvF04u3qmWPnCZ5gFn/00uLWaDrn84grBlxxxOX0/zh/dyQcLAKumHOgEhZwwrrXuYIiG+w49fl0jr+mk1WeQO4fK/mV/c7+AK5SfgU=</source>
  </file>
  <file path="Loader/PluginLoader/Interface.php" generated-path="Loader.PluginLoader.Interface.html" hash="60638720a3d503c41b6679d1a12c9e59" package="Zend_Loader\PluginLoader">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Loader"/>
      <tag name="subpackage" line="0" description="PluginLoader"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <interface namespace="" line="32" package="Zend_Loader\PluginLoader">
      <name>Zend_Loader_PluginLoader_Interface</name>
      <full_name>\Zend_Loader_PluginLoader_Interface</full_name>
      <docblock line="32">
        <description>Plugin class loader interface</description>
        <long-description></long-description>
        <tag name="category" line="32" description="Zend"/>
        <tag name="package" line="32" description="Zend_Loader"/>
        <tag name="subpackage" line="32" description="PluginLoader"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="41" package="Zend_Loader\PluginLoader">
        <name>addPrefixPath</name>
        <full_name>\Zend_Loader_PluginLoader_Interface::addPrefixPath()</full_name>
        <docblock line="41">
          <description>Add prefixed paths to the registry of paths</description>
          <long-description></long-description>
          <tag name="param" line="41" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="41" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="41" description="" type="\Zend_Loader_PluginLoader">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="Zend_Loader\PluginLoader">
        <name>removePrefixPath</name>
        <full_name>\Zend_Loader_PluginLoader_Interface::removePrefixPath()</full_name>
        <docblock line="50">
          <description>Remove a prefix (or prefixed-path) from the registry</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;OPTIONAL&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="50" description="" type="\Zend_Loader_PluginLoader">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="Zend_Loader\PluginLoader">
        <name>isLoaded</name>
        <full_name>\Zend_Loader_PluginLoader_Interface::isLoaded()</full_name>
        <docblock line="58">
          <description>Whether or not a Helper by a specific name</description>
          <long-description></long-description>
          <tag name="param" line="58" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="" type="\Zend_Loader_PluginLoader">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="66" package="Zend_Loader\PluginLoader">
        <name>getClassName</name>
        <full_name>\Zend_Loader_PluginLoader_Interface::getClassName()</full_name>
        <docblock line="66">
          <description>Return full class name for a named helper</description>
          <long-description></long-description>
          <tag name="param" line="66" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="66" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="Zend_Loader\PluginLoader">
        <name>load</name>
        <full_name>\Zend_Loader_PluginLoader_Interface::load()</full_name>
        <docblock line="74">
          <description>Load a helper via the name provided</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="74" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <source>eJzlVV1v0zAUfc+vuA976CrajEl7GSA2xhCRqq7ahpB4mRz7JjFz7chxmhXEf+facaIKrRNo8ERfGt+Pc885tpPXb+uqTtLpNIEpfEEt4INla+yMvaeIDy6yi8vlzWVc3Vaygca0liMUUiH4ZZt/Re7AGXAVgsYO3t28ByU56gYpxpwvy1stFAqP0klXUZyCNeP3rCQYHXoDZJw4dw9u7quz0M5UY4BtmFQsVx7VmrasQhexVWLWSYGzDnOgcQH70/Xi1PdXztWnaVoMwubfSOecm3UaKaZEeZY3gVpWwNa0IKQAbRxY5Cg3CAy4qbdgijBwkMbIL2YRWt1zMh7B5I6RHOme4PgCaoWMEBpvOdOAaxLmu8nEiH420CS/oUPgVBbKPb/IR67XKCRzqLbzuENnnJalsVuAsKEhNtgcY3cLwwTakKLdG7Ir1ZZS7+T8DCvLygFcjI8TfgjHR0cns+Ojlyf9mblFXmmjTCmRbL85h0zzOUyi8V3XjZYfBtzBP/r99ub4YljGs7XocwFsg7aRRvv0QSYOKJYmw4nuFQFXrGlABWF01BzagnH8Pw1Lk9GAXWl3u1rustGj74mHCXb63xTOhYDaYiEfkB6Yq5rh4lssZeNsuCUhEVuGTjKVSAOVSF3CQQ+yL0n9Y8qia63eyzbWpeG/bnPyAYpWc+dPBRNiFQatCHESh77oBxy+Sn5Vd41rE657XwgTY0e1s9ADhaUruav3mTLhanWbXS3PF39Frw0C9kqGN6BbpR5R/rlCEmWBBPsXH4OPqGpa51t6bmrksqA5mk7d03p3Kp6nRDahSEwC5KN7FcAL0hNvuC+EghSw8CigChr+nHCfe5Jeie7CD11S+16KXgGR6WnARrL+C+lp1tZs6Gsg/gk5/6obSf1IfgLY93T/</source>
  </file>
  <file path="Loader/Autoloader.php" generated-path="Loader.Autoloader.html" hash="8b501e8e33091a30e52be2094677826b" package="Zend_Loader\Autoloader">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Loader"/>
      <tag name="subpackage" line="0" description="Autoloader"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="35" package="Zend_Loader\Autoloader">
      <extends/>
      <name>Zend_Loader_Autoloader</name>
      <full_name>\Zend_Loader_Autoloader</full_name>
      <docblock line="35">
        <description>Autoloader stack and namespace autoloader</description>
        <long-description></long-description>
        <tag name="uses" line="35" description="" link="Zend_Loader_Autoloader"/>
        <tag name="package" line="35" description="Zend_Loader"/>
        <tag name="subpackage" line="35" description="Autoloader"/>
        <tag name="copyright" line="35" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="35" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="40" package="Zend_Loader\Autoloader">
        <name>$_instance</name>
        <full_name>\Zend_Loader_Autoloader::_instance</full_name>
        <default></default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="40" description="&lt;p&gt;Singleton instance&lt;/p&gt;" type="\Zend_Loader_Autoloader" variable="">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="Zend_Loader\Autoloader">
        <name>$_autoloaders</name>
        <full_name>\Zend_Loader_Autoloader::_autoloaders</full_name>
        <default>array()</default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="45" description="&lt;p&gt;Concrete autoloader callback implementations&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="50" package="Zend_Loader\Autoloader">
        <name>$_defaultAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::_defaultAutoloader</full_name>
        <default>array('Zend_Loader', 'loadClass')</default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;Default autoloader callback&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="55" package="Zend_Loader\Autoloader">
        <name>$_fallbackAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::_fallbackAutoloader</full_name>
        <default>false</default>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="55" description="&lt;p&gt;Whether or not to act as a fallback autoloader&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="60" package="Zend_Loader\Autoloader">
        <name>$_internalAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::_internalAutoloader</full_name>
        <default></default>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="60" description="&lt;p&gt;Callback for internal autoloader implementation&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="65" package="Zend_Loader\Autoloader">
        <name>$_namespaces</name>
        <full_name>\Zend_Loader_Autoloader::_namespaces</full_name>
        <default>array('Zend_' =&gt; true, 'ZendX_' =&gt; true)</default>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="65" description="&lt;p&gt;Supported namespaces 'Zend' and 'ZendX' by default.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="73" package="Zend_Loader\Autoloader">
        <name>$_namespaceAutoloaders</name>
        <full_name>\Zend_Loader_Autoloader::_namespaceAutoloaders</full_name>
        <default>array()</default>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="73" description="&lt;p&gt;Namespace-specific autoloaders&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="78" package="Zend_Loader\Autoloader">
        <name>$_suppressNotFoundWarnings</name>
        <full_name>\Zend_Loader_Autoloader::_suppressNotFoundWarnings</full_name>
        <default>false</default>
        <docblock line="78">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="78" description="&lt;p&gt;Whether or not to suppress file not found warnings&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="83" package="Zend_Loader\Autoloader">
        <name>$_zfPath</name>
        <full_name>\Zend_Loader_Autoloader::_zfPath</full_name>
        <default></default>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="83" description="" type="null|string" variable="">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="90" package="Zend_Loader\Autoloader">
        <name>getInstance</name>
        <full_name>\Zend_Loader_Autoloader::getInstance()</full_name>
        <docblock line="90">
          <description>Retrieve singleton instance</description>
          <long-description></long-description>
          <tag name="return" line="90" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="103" package="Zend_Loader\Autoloader">
        <name>resetInstance</name>
        <full_name>\Zend_Loader_Autoloader::resetInstance()</full_name>
        <docblock line="103">
          <description>Reset the singleton instance</description>
          <long-description></long-description>
          <tag name="return" line="103" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="114" package="Zend_Loader\Autoloader">
        <name>autoload</name>
        <full_name>\Zend_Loader_Autoloader::autoload()</full_name>
        <docblock line="114">
          <description>Autoload a class</description>
          <long-description></long-description>
          <tag name="param" line="114" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="114" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="Zend_Loader\Autoloader">
        <name>setDefaultAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::setDefaultAutoloader()</full_name>
        <docblock line="143">
          <description>Set the default autoloader implementation</description>
          <long-description></long-description>
          <tag name="param" line="143" description="&lt;p&gt;PHP callback&lt;/p&gt;" type="string|array" variable="$callback">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="143" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="158" package="Zend_Loader\Autoloader">
        <name>getDefaultAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::getDefaultAutoloader()</full_name>
        <docblock line="158">
          <description>Retrieve the default autoloader callback</description>
          <long-description></long-description>
          <tag name="return" line="158" description="PHP Callback" type="string|array">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="169" package="Zend_Loader\Autoloader">
        <name>setAutoloaders</name>
        <full_name>\Zend_Loader_Autoloader::setAutoloaders()</full_name>
        <docblock line="169">
          <description>Set several autoloader callbacks at once</description>
          <long-description></long-description>
          <tag name="param" line="169" description="&lt;p&gt;Array of PHP callbacks (or Zend_Loader_Autoloader_Interface implementations) to act as autoloaders&lt;/p&gt;" type="array" variable="$autoloaders">
            <type>array</type>
          </tag>
          <tag name="return" line="169" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$autoloaders</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="180" package="Zend_Loader\Autoloader">
        <name>getAutoloaders</name>
        <full_name>\Zend_Loader_Autoloader::getAutoloaders()</full_name>
        <docblock line="180">
          <description>Get attached autoloader implementations</description>
          <long-description></long-description>
          <tag name="return" line="180" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="191" package="Zend_Loader\Autoloader">
        <name>getNamespaceAutoloaders</name>
        <full_name>\Zend_Loader_Autoloader::getNamespaceAutoloaders()</full_name>
        <docblock line="191">
          <description>Return all autoloaders for a given namespace</description>
          <long-description></long-description>
          <tag name="param" line="191" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="191" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="206" package="Zend_Loader\Autoloader">
        <name>registerNamespace</name>
        <full_name>\Zend_Loader_Autoloader::registerNamespace()</full_name>
        <docblock line="206">
          <description>Register a namespace to autoload</description>
          <long-description></long-description>
          <tag name="param" line="206" description="" type="string|array" variable="$namespace">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="206" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="228" package="Zend_Loader\Autoloader">
        <name>unregisterNamespace</name>
        <full_name>\Zend_Loader_Autoloader::unregisterNamespace()</full_name>
        <docblock line="228">
          <description>Unload a registered autoload namespace</description>
          <long-description></long-description>
          <tag name="param" line="228" description="" type="string|array" variable="$namespace">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="228" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="249" package="Zend_Loader\Autoloader">
        <name>getRegisteredNamespaces</name>
        <full_name>\Zend_Loader_Autoloader::getRegisteredNamespaces()</full_name>
        <docblock line="249">
          <description>Get a list of registered autoload namespaces</description>
          <long-description></long-description>
          <tag name="return" line="249" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="254" package="Zend_Loader\Autoloader">
        <name>setZfPath</name>
        <full_name>\Zend_Loader_Autoloader::setZfPath()</full_name>
        <docblock line="254">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$spec</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default>'latest'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="275" package="Zend_Loader\Autoloader">
        <name>getZfPath</name>
        <full_name>\Zend_Loader_Autoloader::getZfPath()</full_name>
        <docblock line="275">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="286" package="Zend_Loader\Autoloader">
        <name>suppressNotFoundWarnings</name>
        <full_name>\Zend_Loader_Autoloader::suppressNotFoundWarnings()</full_name>
        <docblock line="286">
          <description>Get or set the value of the "suppress not found warnings" flag</description>
          <long-description></long-description>
          <tag name="param" line="286" description="" type="null|boolean" variable="$flag">
            <type>null</type>
            <type>boolean</type>
          </tag>
          <tag name="return" line="286" description="Returns boolean if no argument is passed, object instance otherwise" type="boolean|\Zend_Loader_Autoloader">
            <type>boolean</type>
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flag</name>
          <default>null</default>
          <type>null|boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="301" package="Zend_Loader\Autoloader">
        <name>setFallbackAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::setFallbackAutoloader()</full_name>
        <docblock line="301">
          <description>Indicate whether or not this autoloader should be a fallback autoloader</description>
          <long-description></long-description>
          <tag name="param" line="301" description="" type="boolean" variable="$flag">
            <type>boolean</type>
          </tag>
          <tag name="return" line="301" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flag</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="312" package="Zend_Loader\Autoloader">
        <name>isFallbackAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::isFallbackAutoloader()</full_name>
        <docblock line="312">
          <description>Is this instance acting as a fallback autoloader?</description>
          <long-description></long-description>
          <tag name="return" line="312" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="327" package="Zend_Loader\Autoloader">
        <name>getClassAutoloaders</name>
        <full_name>\Zend_Loader_Autoloader::getClassAutoloaders()</full_name>
        <docblock line="327">
          <description>Get autoloaders to use when matching class</description>
          <long-description>Determines if the class matches a registered namespace, and, if so,
returns only the autoloaders for that namespace. Otherwise, it returns
all non-namespaced autoloaders.</long-description>
          <tag name="param" line="327" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="327" description="Array of autoloaders to use" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="378" package="Zend_Loader\Autoloader">
        <name>unshiftAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::unshiftAutoloader()</full_name>
        <docblock line="378">
          <description>Add an autoloader to the beginning of the stack</description>
          <long-description></long-description>
          <tag name="param" line="378" description="&lt;p&gt;PHP callback or Zend_Loader_Autoloader_Interface implementation&lt;/p&gt;" type="object|array|string" variable="$callback">
            <type>object</type>
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="param" line="378" description="&lt;p&gt;Specific namespace(s) under which to register callback&lt;/p&gt;" type="string|array" variable="$namespace">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="378" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>object|array|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="401" package="Zend_Loader\Autoloader">
        <name>pushAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::pushAutoloader()</full_name>
        <docblock line="401">
          <description>Append an autoloader to the autoloader stack</description>
          <long-description></long-description>
          <tag name="param" line="401" description="&lt;p&gt;PHP callback or Zend_Loader_Autoloader_Interface implementation&lt;/p&gt;" type="object|array|string" variable="$callback">
            <type>object</type>
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="param" line="401" description="&lt;p&gt;Specific namespace(s) under which to register callback&lt;/p&gt;" type="string|array" variable="$namespace">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="401" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>object|array|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="424" package="Zend_Loader\Autoloader">
        <name>removeAutoloader</name>
        <full_name>\Zend_Loader_Autoloader::removeAutoloader()</full_name>
        <docblock line="424">
          <description>Remove an autoloader from the autoloader stack</description>
          <long-description></long-description>
          <tag name="param" line="424" description="&lt;p&gt;PHP callback or Zend_Loader_Autoloader_Interface implementation&lt;/p&gt;" type="object|array|string" variable="$callback">
            <type>object</type>
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="param" line="424" description="&lt;p&gt;Specific namespace(s) from which to remove autoloader&lt;/p&gt;" type="null|string|array" variable="$namespace">
            <type>null</type>
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="424" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>object|array|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>null</default>
          <type>null|string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="460" package="Zend_Loader\Autoloader">
        <name>__construct</name>
        <full_name>\Zend_Loader_Autoloader::__construct()</full_name>
        <docblock line="460">
          <description>Constructor</description>
          <long-description>Registers instance with spl_autoload stack</long-description>
          <tag name="return" line="460" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="472" package="Zend_Loader\Autoloader">
        <name>_autoload</name>
        <full_name>\Zend_Loader_Autoloader::_autoload()</full_name>
        <docblock line="472">
          <description>Internal autoloader implementation</description>
          <long-description></long-description>
          <tag name="param" line="472" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="472" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="494" package="Zend_Loader\Autoloader">
        <name>_setNamespaceAutoloaders</name>
        <full_name>\Zend_Loader_Autoloader::_setNamespaceAutoloaders()</full_name>
        <docblock line="494">
          <description>Set autoloaders for a specific namespace</description>
          <long-description></long-description>
          <tag name="param" line="494" description="" type="array" variable="$autoloaders">
            <type>array</type>
          </tag>
          <tag name="param" line="494" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="494" description="" type="\Zend_Loader_Autoloader">
            <type>\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$autoloaders</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="508" package="Zend_Loader\Autoloader">
        <name>_getVersionPath</name>
        <full_name>\Zend_Loader_Autoloader::_getVersionPath()</full_name>
        <docblock line="508">
          <description>Retrieve the filesystem path for the requested ZF version</description>
          <long-description></long-description>
          <tag name="param" line="508" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="508" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="508" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="532" package="Zend_Loader\Autoloader">
        <name>_getVersionType</name>
        <full_name>\Zend_Loader_Autoloader::_getVersionType()</full_name>
        <docblock line="532">
          <description>Retrieve the ZF version type</description>
          <long-description></long-description>
          <tag name="param" line="532" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="532" description="&quot;latest&quot;, &quot;major&quot;, &quot;minor&quot;, or &quot;specific&quot;" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="532" description="if version string contains too many dots" type="\Zend_Loader_Exception">
            <type>\Zend_Loader_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="559" package="Zend_Loader\Autoloader">
        <name>_getAvailableVersions</name>
        <full_name>\Zend_Loader_Autoloader::_getAvailableVersions()</full_name>
        <docblock line="559">
          <description>Get available versions for the version type requested</description>
          <long-description></long-description>
          <tag name="param" line="559" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="559" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="559" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="254" code="PPC:ERR-50015">Argument $spec is missing from the Docblock of setZfPath</error>
      <error line="254" code="PPC:ERR-50015">Argument $version is missing from the Docblock of setZfPath</error>
      <error line="254" code="PPC:ERR-50008">No summary for method setZfPath()</error>
      <error line="275" code="PPC:ERR-50008">No summary for method getZfPath()</error>
      <error line="83" code="PPC:ERR-50007">No summary for property $_zfPath</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Loader/Autoloader/Interface.php" generated-path="Loader.Autoloader.Interface.html" hash="5a8847bbf702beb3c5d03d9b6620291a" package="Zend_Loader\Autoloader">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Loader"/>
      <tag name="subpackage" line="0" description="Autoloader"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <interface namespace="" line="31" package="Zend_Loader\Autoloader">
      <name>Zend_Loader_Autoloader_Interface</name>
      <full_name>\Zend_Loader_Autoloader_Interface</full_name>
      <docblock line="31">
        <description>Autoloader interface</description>
        <long-description></long-description>
        <tag name="package" line="31" description="Zend_Loader"/>
        <tag name="subpackage" line="31" description="Autoloader"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="Zend_Loader\Autoloader">
        <name>autoload</name>
        <full_name>\Zend_Loader_Autoloader_Interface::autoload()</full_name>
        <docblock line="42">
          <description>Autoload a class</description>
          <long-description></long-description>
          <tag name="abstract" line="42" description=""/>
          <tag name="param" line="42" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="42" description="False [if unable to load $class]&#10;         get_class($class) [if $class is successfully loaded]" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <source>eJzNVLFu2zAQ3fUVN2SwjVpyA2RJC9RpmgACjAx1urQoDIo6SWwoUiApK27Rf++RouQABYoOHcrF4ru7x3ePR7991zVdkq1WCazgM6oS7g1rcdDmiRAP7vLbu4f9Xdw9NsKC1b3hCJWQCH7bF9+QO3AaXIOgcID3+w8gBUdlkTDmfFrRq1Ji6VkG4RrCCewYf2I10ahQGyjjial7dqnPzkM5k1YDOzIhWSE9q9F93YQqUivL9SBKXA9YAB0XuD993F37+sa57jrLqqmx9Dv1mXLdZlFiRpLXhQ3S8gpOuodSlKC0A4McxRGBAdfdCXQVDpxaY+QXMwi9GjVpz6ALx6gd4f6g8RV0EhkxWG85U4AtNearycTIvp1kkt8wIHBKC+leX9Qj2hZLwRzKUxpvaMtpW2tzAggXGrDJ5ogddpqVaEKIbm+K3vROy3PEn2BE3TiA2/lzwZdwudlcrS83r6/GiXlE3igqrAWS6fsbyBVPYRFtH4ZhNnwZeI9orNDKi7nIy4uATY7S+uvr8snwEKdtN8aILEumeT73Q/Pl0FSM4+TSf+XIP+1+bvVlY4dzJ4d89uJH4kmCW36dHfPzJZm1EZ/CW1ZYZxh3M9AxEkqfBAtVw8XLKtgadL2hi27Fs3/4Izqve3rSCF9EdX4/EA4fWb7+VlCjO4TQYsxYhuLxe/wj4hytrXopT4EJy4kkC79dX5CLUPWKOz+BLLY78b1Jfia/AJnkmck=</source>
  </file>
  <file path="Exception.php" generated-path="Exception.html" hash="fdca55eece8acc76af7ec98eca620311" package="Zend">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="28" package="Zend">
      <extends>\Exception</extends>
      <name>Zend_Exception</name>
      <full_name>\Zend_Exception</full_name>
      <docblock line="28">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="28" description="Zend"/>
        <tag name="package" line="28" description="Zend"/>
        <tag name="copyright" line="28" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="28" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="28" code="PPC:ERR-50005">No summary for class \Zend_Exception</error>
      <error line="33" code="PPC:ERR-50007">No summary for property $_previous</error>
    </parse_markers>
    <source>eJy1Vt9v2zYQftdfcSsEWA5s2euQlzTZumUpZiBIg7jdw1DAoKmzxJUiBYqy4q3+33ukJP9QnGUYOj0k1vHuu+++O559+VORFcHk7CyAM/gDVQLvDMux1uYzWZzxdnZ9cze/ad8+ZKKEUleGI6yERHCv1fJP5BasBpshKKzhl/mvIAVHVSLZmHVuy0olEhOHUgubkZ2MBeOfWUowysd6yDZjbB9t7LxnPpzJUgNbMyHZUjpUo6s081HEVibjWiQ4rnEJlM5jf3y4vXDxmbXFxWSy6gqL/6I6Y67zSUtxQpTHy9JTm61goytIRAJKWzDIUawRGHBdbECvfMKuNEZ6MYNQqYaTdgh6aRmVI+w/cBxBIZERQukkZwowp8JcNInYor/taJLeUCNwcvPujl/LR+Q5JoJZlJu47dBbTq+pNhsA31Bv62Q+tDkAI9LMAlzvPkZ8CK+n0/Px6+n3581AfECeKS11KpA0nf8MM8VjiFpV67re6Tn0uJ049Pxr5Z0z3LWDc9ucebA1mlJo5Y7DWRKSbRL4cT1R6Ik6/6cyv2WVVBCXrCw9i8XNI8fCuorx0ZKhhJ0l+Dtw8f6uusepwwyoSsove6fmaOL/F0asSSMIF4XBtdBVCVfe/03Qh7rWqrSmcreYhhV7cLuEBaMiAchVqBTCvEz7R0JZCLlOsH+wryzs2OxcDNrKKFhrkRwXUC1JQlhVivvIxYJ3PCOXnMoZDEZNPvo8HZ3K0tY89IiNhu4RK4ja6SLUnFhidP/b/eL3m4f57P3dCAbn8Q/xlOAHl4Ph8CDSMyN3ZS8u+oxGEJECw4bS8M1RTOi20vjHw2bsSO49t4CS5uo/pBvt4Q4yb4Pmb7/j76l4qVlCjex1+Z02QErAJXgFaFcZvabFRTuYc6RJbRd9iva+zRcNIUeb6SR+aWK8V/+UGcM2EDKTPpmJXDzii0PBpIxa6NEh2KmeD4h2J9MArq4cNUv3vkbTYTzpdsula+BR4X2lD/ybq3Za/nkjiEHiQlvdMl9L+/3y7P1rgRs1X1DF6iZH9G0n30W7wuA70i4K3b1rdTmS5UncoY5IIvb5nXhiePVJfVJ3tArh1fNO+8uxhzy+edvne/R88NOePfgQ+tHSXeD+2u33aXf+xSnW283a0o8mTA5adiRgr2m9ETzeG9tgG3wFGqDcBQ==</source>
  </file>
  <file path="Amf/Request/Http.php" generated-path="Amf.Request.Http.html" hash="ce148edaca6381269ced8f26eefd6294" package="Zend_Amf\Request">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Request"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="38" package="Zend_Amf\Request">
      <extends>\Zend_Amf_Request</extends>
      <name>Zend_Amf_Request_Http</name>
      <full_name>\Zend_Amf_Request_Http</full_name>
      <docblock line="38">
        <description>AMF Request object -- Request via HTTP</description>
        <long-description>Extends [Zend_Amf_Request](/classes/Zend_Amf_Request.html) to accept a request via HTTP. Request is
built at construction time using a raw POST; if no data is available, the
request is declared a fault.</long-description>
        <tag name="package" line="38" description="Zend_Amf"/>
        <tag name="subpackage" line="38" description="Request"/>
        <tag name="copyright" line="38" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="38" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Request" refers="\Zend_Amf_Request" link="/classes/Zend_Amf_Request.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="44" package="Zend_Amf\Request">
        <name>$_rawRequest</name>
        <full_name>\Zend_Amf_Request_Http::_rawRequest</full_name>
        <default></default>
        <docblock line="44">
          <description>Raw AMF request</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Amf">
        <name>$_clientType</name>
        <full_name>\Zend_Amf_Request::_clientType</full_name>
        <default>0</default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;AMF client type (AMF0, AMF3)&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="Zend_Amf">
        <name>$_bodies</name>
        <full_name>\Zend_Amf_Request::_bodies</full_name>
        <default>array()</default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;Message bodies&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="61" package="Zend_Amf">
        <name>$_headers</name>
        <full_name>\Zend_Amf_Request::_headers</full_name>
        <default>array()</default>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="61" description="&lt;p&gt;Message headers&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="66" package="Zend_Amf">
        <name>$_objectEncoding</name>
        <full_name>\Zend_Amf_Request::_objectEncoding</full_name>
        <default>0</default>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="66" description="&lt;p&gt;Message encoding to use for objects in response&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="71" package="Zend_Amf">
        <name>$_inputStream</name>
        <full_name>\Zend_Amf_Request::_inputStream</full_name>
        <default></default>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="\Zend_Amf_Parse_InputStream" variable="">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="76" package="Zend_Amf">
        <name>$_deserializer</name>
        <full_name>\Zend_Amf_Request::_deserializer</full_name>
        <default></default>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="76" description="" type="\Zend_Amf_Parse_AMF0_Deserializer" variable="">
            <type>\Zend_Amf_Parse_AMF0_Deserializer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="82" package="Zend_Amf">
        <name>$_time</name>
        <full_name>\Zend_Amf_Request::_time</full_name>
        <default></default>
        <docblock line="82">
          <description>Time of the request</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="Zend_Amf\Request">
        <name>__construct</name>
        <full_name>\Zend_Amf_Request_Http::__construct()</full_name>
        <docblock line="55">
          <description>Constructor</description>
          <long-description>Attempts to read from php://input to get raw POST request; if an error
occurs in doing so, or if the AMF body is invalid, the request is declared a
fault.</long-description>
          <tag name="return" line="55" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="Zend_Amf\Request">
        <name>getRawRequest</name>
        <full_name>\Zend_Amf_Request_Http::getRawRequest()</full_name>
        <docblock line="76">
          <description>Retrieve raw AMF Request</description>
          <long-description></long-description>
          <tag name="return" line="76" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="90" package="Zend_Amf">
        <name>initialize</name>
        <full_name>\Zend_Amf_Request::initialize()</full_name>
        <docblock line="90">
          <description>Prepare the AMF InputStream for parsing.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="" type="string" variable="$request">
            <type>string</type>
          </tag>
          <tag name="return" line="90" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="Zend_Amf">
        <name>readMessage</name>
        <full_name>\Zend_Amf_Request::readMessage()</full_name>
        <docblock line="104">
          <description>Takes the raw AMF input stream and converts it into valid PHP objects</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="\Zend_Amf_Parse_InputStream" variable="">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
          <tag name="return" line="104" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_InputStream</type>
        </argument>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="144" package="Zend_Amf">
        <name>readHeader</name>
        <full_name>\Zend_Amf_Request::readHeader()</full_name>
        <docblock line="144">
          <description>Deserialize a message header from the input stream.</description>
          <long-description>A message header is structured as:
- NAME String
- MUST UNDERSTAND Boolean
- LENGTH Int
- DATA Object</long-description>
          <tag name="return" line="144" description="" type="\Zend_Amf_Value_MessageHeader">
            <type>\Zend_Amf_Value_MessageHeader</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="Zend_Amf">
        <name>readBody</name>
        <full_name>\Zend_Amf_Request::readBody()</full_name>
        <docblock line="166">
          <description>Deserialize a message body from the input stream</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="\Zend_Amf_Value_MessageBody">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="203" package="Zend_Amf">
        <name>getAmfBodies</name>
        <full_name>\Zend_Amf_Request::getAmfBodies()</full_name>
        <docblock line="203">
          <description>Return an array of the body objects that were found in the amf request.</description>
          <long-description></long-description>
          <tag name="return" line="203" description="{target, response, length, content}" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="214" package="Zend_Amf">
        <name>addAmfBody</name>
        <full_name>\Zend_Amf_Request::addAmfBody()</full_name>
        <docblock line="214">
          <description>Accessor to private array of message bodies.</description>
          <long-description></long-description>
          <tag name="param" line="214" description="" type="\Zend_Amf_Value_MessageBody" variable="$message">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
          <tag name="return" line="214" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\Zend_Amf_Value_MessageBody</type>
        </argument>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="225" package="Zend_Amf">
        <name>getAmfHeaders</name>
        <full_name>\Zend_Amf_Request::getAmfHeaders()</full_name>
        <docblock line="225">
          <description>Return an array of headers that were found in the amf request.</description>
          <long-description></long-description>
          <tag name="return" line="225" description="{operation, mustUnderstand, length, param}" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="235" package="Zend_Amf">
        <name>getObjectEncoding</name>
        <full_name>\Zend_Amf_Request::getObjectEncoding()</full_name>
        <docblock line="235">
          <description>Return the either 0 or 3 for respect AMF version</description>
          <long-description></long-description>
          <tag name="return" line="235" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="Zend_Amf">
        <name>setObjectEncoding</name>
        <full_name>\Zend_Amf_Request::setObjectEncoding()</full_name>
        <docblock line="246">
          <description>Set the object response encoding</description>
          <long-description></long-description>
          <tag name="param" line="246" description="" type="mixed" variable="$int">
            <type>mixed</type>
          </tag>
          <tag name="return" line="246" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$int</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Zend_Amf_Request</inherited_from>
      </method>
    </class>
    <source>eJzdVd9v2zYQfvdfcQMM2A5iKSvQlybN4qUpGiDrCsfDgL0INHW2OUukRlJW3SL/++4oSvOPYNjz9GBLx+PHu+++O978VG2qQXpxMYAL+AN1Dh+tKLExdksWNj493j98fn6IX4uNcuBMbSXCShUI/Fkv/0TpwRvwGwSNDfz8/AEKJVE7JJvw7LasdV5gziiN8huyk7EScivWBKPD3gAZT0z8V5+w92PYLgpnQOyEKsSyYFRr6vUm7KJoi3zaqBynDS6BjgvYv82f3vH+jffVuzRddYkl3yjPRJoyjSGmFPJ06UJojyvYmxpylYM2HixKVDsEAdJUezCrcGCXmiC+hEWodRuTYQSz9ILSUf5fYryEqkBBCI4pFxqwpMR4N5EY0e+6MIlvaBAkuQV3ji/Go8oScyU8FvskVuhO0ufa2D1AKGiwdTRHWzYrV8FOpeuW5vhXjc63EIRt1XrjAe7717GcwJurq7fTN1c/vm21skC50aYwa4VE9/MMHrVMYBwJb5qmp3oScDve6PnPRWFn+Bw19dSuBbAdWqeM5uXhYz4kWzpgJVNWiH2aWcyLVy29KouZ0aTeEXuk5JFGj4Q6YXQ96Jph9svHjhMqaRD4dNpbdkrAp8XiSyT94asnNAffKUW9PTv8hcsqpMTKU+XsCUbSoyrHYMtaFZ5VLI123tbSc5pelSQ0p/SaIUQDX359XlyDWpFOIRdehCbp+uOSRcdgtoeGHGVBaiW9wUrUhe8V8/9TRzqgVJ07K0T2iYABY7VOVwffBwwXBMDPBcyJZxaC7dJvzXc7YYFKQ8WIpjT8V9Z4EgpRPMyoRBGWNHUCe98V1tho6lZm3mNZeceCsShyWFkaAKRMYkPpqg5Tdo2+V0AXWlACDxJre1AwUtbW8XDNDQvHmUswlj15JHFiS5PvWRtK70Sh8iCb1zXTYXbSOQr7zqKvrYadUfkxI/WSKgarWrcqzrJe1ONJ8Gg5DwSlR4mKojCNC9OuI6NPmvWedBcDFEilLrGkoXcIpjSV2YXpXXi0Wnh+J6whd102n/2eMVj2YbaYhVGeGxIqT32NnLE+QnMVSiUKDjFRWtENQXcDI7reayjKVdfK78NdllGpOGMKxLvx6CC90STKIsLfb1BuObhSbOlaqG28OGnwbwSFHTrctLdkyw+xiKJMehCq6vgwgh/ew2g0OeA3hMg34/T2QJ0U6cGu69e8KV1PqatveHjA5B/fF8CCGvf4KOp+A6Ob6jYMA2ozeNB5RTr0N2l1O4KD7YP296z7kFoMKXkb23B+1Ian4nutIU/kR+WY95mfCTDinHN0HQN8GfwN86/X7g==</source>
  </file>
  <file path="Amf/Response.php" generated-path="Amf.Response.html" hash="05f24030d46ff9b74f50878af898cfd2" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="38" package="Zend_Amf">
      <extends/>
      <name>Zend_Amf_Response</name>
      <full_name>\Zend_Amf_Response</full_name>
      <docblock line="38">
        <description>Handles converting the PHP object ready for response back into AMF</description>
        <long-description></long-description>
        <tag name="package" line="38" description="Zend_Amf"/>
        <tag name="copyright" line="38" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="38" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Amf">
        <name>$_objectEncoding</name>
        <full_name>\Zend_Amf_Response::_objectEncoding</full_name>
        <default>0</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="43" description="&lt;p&gt;Object encoding for response&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="Zend_Amf">
        <name>$_bodies</name>
        <full_name>\Zend_Amf_Response::_bodies</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Array of Zend_Amf_Value_MessageBody objects</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="55" package="Zend_Amf">
        <name>$_headers</name>
        <full_name>\Zend_Amf_Response::_headers</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Array of Zend_Amf_Value_MessageHeader objects</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="60" package="Zend_Amf">
        <name>$_outputStream</name>
        <full_name>\Zend_Amf_Response::_outputStream</full_name>
        <default></default>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="\Zend_Amf_Parse_OutputStream" variable="">
            <type>\Zend_Amf_Parse_OutputStream</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="Zend_Amf">
        <name>finalize</name>
        <full_name>\Zend_Amf_Response::finalize()</full_name>
        <docblock line="67">
          <description>Instantiate new output stream and start serialization</description>
          <long-description></long-description>
          <tag name="return" line="67" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="Zend_Amf">
        <name>writeMessage</name>
        <full_name>\Zend_Amf_Response::writeMessage()</full_name>
        <docblock line="81">
          <description>Serialize the PHP data types back into Actionscript and
create and AMF stream.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="\Zend_Amf_Parse_OutputStream" variable="$stream">
            <type>\Zend_Amf_Parse_OutputStream</type>
          </tag>
          <tag name="return" line="81" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_OutputStream</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="135" package="Zend_Amf">
        <name>getResponse</name>
        <full_name>\Zend_Amf_Response::getResponse()</full_name>
        <docblock line="135">
          <description>Return the output stream content</description>
          <long-description></long-description>
          <tag name="return" line="135" description="The contents of the output stream" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="145" package="Zend_Amf">
        <name>__toString</name>
        <full_name>\Zend_Amf_Response::__toString()</full_name>
        <docblock line="145">
          <description>Return the output stream content</description>
          <long-description></long-description>
          <tag name="return" line="145" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="156" package="Zend_Amf">
        <name>addAmfBody</name>
        <full_name>\Zend_Amf_Response::addAmfBody()</full_name>
        <docblock line="156">
          <description>Add an AMF body to be sent to the Flash Player</description>
          <long-description></long-description>
          <tag name="param" line="156" description="" type="\Zend_Amf_Value_MessageBody" variable="$body">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
          <tag name="return" line="156" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$body</name>
          <default></default>
          <type>\Zend_Amf_Value_MessageBody</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="167" package="Zend_Amf">
        <name>getAmfBodies</name>
        <full_name>\Zend_Amf_Response::getAmfBodies()</full_name>
        <docblock line="167">
          <description>Return an array of AMF bodies to be serialized</description>
          <long-description></long-description>
          <tag name="return" line="167" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="178" package="Zend_Amf">
        <name>addAmfHeader</name>
        <full_name>\Zend_Amf_Response::addAmfHeader()</full_name>
        <docblock line="178">
          <description>Add an AMF Header to be sent back to the flash player</description>
          <long-description></long-description>
          <tag name="param" line="178" description="" type="\Zend_Amf_Value_MessageHeader" variable="$header">
            <type>\Zend_Amf_Value_MessageHeader</type>
          </tag>
          <tag name="return" line="178" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$header</name>
          <default></default>
          <type>\Zend_Amf_Value_MessageHeader</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="189" package="Zend_Amf">
        <name>getAmfHeaders</name>
        <full_name>\Zend_Amf_Response::getAmfHeaders()</full_name>
        <docblock line="189">
          <description>Retrieve attached AMF message headers</description>
          <long-description></long-description>
          <tag name="return" line="189" description="Array of Zend_Amf_Value_MessageHeader objects" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="200" package="Zend_Amf">
        <name>setObjectEncoding</name>
        <full_name>\Zend_Amf_Response::setObjectEncoding()</full_name>
        <docblock line="200">
          <description>Set the AMF encoding that will be used for serialization</description>
          <long-description></long-description>
          <tag name="param" line="200" description="" type="integer" variable="$encoding">
            <type>integer</type>
          </tag>
          <tag name="return" line="200" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$encoding</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="60" code="PPC:ERR-50007">No summary for property $_outputStream</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Amf/Parse/Deserializer.php" generated-path="Amf.Parse.Deserializer.html" hash="6bf0ed466d51a8ed7d47842ae56b0c2e" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="36" package="Zend_Amf\Parse">
      <extends/>
      <name>Zend_Amf_Parse_Deserializer</name>
      <full_name>\Zend_Amf_Parse_Deserializer</full_name>
      <docblock line="36">
        <description>Abstract cass that all deserializer must implement.</description>
        <long-description>Logic for deserialization of the AMF envelop is based on resources supplied
by Adobe Blaze DS. For and example of deserialization please review the BlazeDS
source tree.</long-description>
        <tag name="see" line="36" description="" link="http://opensource.adobe.com/svn/opensource/blazeds/trunk/modules/core/src/java/flex/messaging/io/amf/"/>
        <tag name="package" line="36" description="Zend_Amf"/>
        <tag name="subpackage" line="36" description="Parse"/>
        <tag name="copyright" line="36" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="36" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Amf\Parse">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Parse_Deserializer::_stream</full_name>
        <default></default>
        <docblock line="43">
          <description>The raw string that represents the AMF request.</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\Zend_Amf_Parse_InputStream" variable="">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Zend_Amf\Parse">
        <name>__construct</name>
        <full_name>\Zend_Amf_Parse_Deserializer::__construct()</full_name>
        <docblock line="51">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="\Zend_Amf_Parse_InputStream" variable="$stream">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_InputStream</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="64" package="Zend_Amf\Parse">
        <name>readTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Deserializer::readTypeMarker()</full_name>
        <docblock line="64">
          <description>Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. Markers are the data type of
the following value.</description>
          <long-description></long-description>
          <tag name="param" line="64" description="" type="integer" variable="$typeMarker">
            <type>integer</type>
          </tag>
          <tag name="return" line="64" description="Whatever the data type is of the marker in php" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <source>eJzdVU1v4zYQvftXzMGHJKjFdIG9bPoRb7IBDGQXRZ2iQC8GRY4trilSJSkpTrH/vTOUZDjeYttzdbE1nHkz8+YN9cPPTdXMxNXVDK7gD3QaHoKssfdhTxY2Pq7uPnxafxjfnioTIfo2KIStsQj82pafUSVIHlKF4LCH9+t7sEahi0g2mditbJ22qBmlN6kiOxkbqfZyRzAux2bIMWORnlPB3qscLm30IDtprCwtowbf7qocRdVaveiNxkWPJVC6jP3br4/vOL5KqXknxHZqrHihPgvlazGWKKjkRRlzaastHHwL2mhwPkFAhaZDkKB8cwC/zQmn1iTxJQNC64aaPCP4Mklqx6Rv1PgdNBYlIUSmXDrAmhrjaCJxRL+dyiS+oUdQ5Jbdub6xHlPXqI1MaA/FOKFbRa87Hw4AeaDZNtE82jbLepvtNLrp6BcZIg4AhBzMrkoAd8e/F+oS3lxfv128uf7+7aCUJ1SV89bvDBLZ6yWsnCrgYqS77/sj0ZcZd2KNnv88EnaGT6OiHoezDNZhiMY7Pp6v9JxsYjbpeFnGFCQpUskYB/1Ja0FjxGCkNS8YoG4jyaqmMdTo0kTeIzWjYOvDibNMnGec/PLjA6Dr0Poma5pmqIGOAw5LwdvQNNYMOi8PsNS+RHhv5QvC/bqAB8Jm2eCz5OSMe55qlEbAzlDjnDWH368Zcty9FBCPE4+YST0h1jdEVPYsJBeQqY2dOzkQJYPqKFJo3V7UXrcWo1A+oIhBic+0a2Jr8VnUGKPcGbcTxgtZb8X/UlJiJo+ysaybqatNbmNzf6Ke2V8zBsly44fvRRqY7IEQiKhBcwEbkgWpKx6lE/DPFiPLLYdN0bedDOf5Vq5p05rmLOvRTeTfJvhEty3Jbr6J+fhmdl7NnXd01Krkw3mmRhJB8I1kMI+nSeE2YGqDg84b/bqQtrS8LK1TWbabjZrSXvw7/GXGGHjMS8xX9uKnsSX4cfK7yR5fvm6xQrWPeVWZ2FqGPW11OjQkHN4vRRs/8C4boqwJfEtCjanyOk4grxd9GJwnOZ2iFfAxv8V80zOglknmM1reCSl/vLy1vmeUTtoWvxrySL1xibql8AH3nOfaPNNsfycBYcc1vEpIV854EY0l0oeGP+D/MJejmo8DIjr10zHvxXyAYAvR7VprL29mX2Z/AxUamRY=</source>
  </file>
  <file path="Amf/Parse/Amf3/Deserializer.php" generated-path="Amf.Parse.Amf3.Deserializer.html" hash="fda836d116ca3989981639ec8c0acf82" package="Zend_Amf\Parse_Amf3">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse_Amf3"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="43" package="Zend_Amf\Parse_Amf3">
      <extends>\Zend_Amf_Parse_Deserializer</extends>
      <name>Zend_Amf_Parse_Amf3_Deserializer</name>
      <full_name>\Zend_Amf_Parse_Amf3_Deserializer</full_name>
      <docblock line="43">
        <description>Read an AMF3 input stream and convert it into PHP data types.</description>
        <long-description>Logic for deserialization of the AMF envelop is based on resources supplied
by Adobe Blaze DS. For and example of deserialization please review the BlazeDS
source tree.</long-description>
        <tag name="todo" line="43" description="readObject to handle Typed Objects"/>
        <tag name="todo" line="43" description="readXMLStrimg to be implemented."/>
        <tag name="todo" line="43" description="Class could be implemented as Factory Class with each data type it's own class."/>
        <tag name="package" line="43" description="Zend_Amf"/>
        <tag name="subpackage" line="43" description="Parse_Amf3"/>
        <tag name="copyright" line="43" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="43" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Parse_Deserializer" refers="\Zend_Amf_Parse_Deserializer" link="/classes/Zend_Amf_Parse_Deserializer.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="49" package="Zend_Amf\Parse_Amf3">
        <name>$_objectCount</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::_objectCount</full_name>
        <default></default>
        <docblock line="49">
          <description>Total number of objects in the referenceObject array</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="55" package="Zend_Amf\Parse_Amf3">
        <name>$_referenceObjects</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::_referenceObjects</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>An array of reference objects per amf body</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="61" package="Zend_Amf\Parse_Amf3">
        <name>$_referenceStrings</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::_referenceStrings</full_name>
        <default>array()</default>
        <docblock line="61">
          <description>An array of reference strings per amf body</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="67" package="Zend_Amf\Parse_Amf3">
        <name>$_referenceDefinitions</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::_referenceDefinitions</full_name>
        <default>array()</default>
        <docblock line="67">
          <description>An array of reference class definitions per body</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Amf\Parse">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Parse_Deserializer::_stream</full_name>
        <default></default>
        <docblock line="43">
          <description>The raw string that represents the AMF request.</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\Zend_Amf_Parse_InputStream" variable="">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="Zend_Amf\Parse_Amf3">
        <name>readTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::readTypeMarker()</full_name>
        <docblock line="80">
          <description>Read AMF markers and dispatch for deserialization</description>
          <long-description>Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. markers are the data type of
the following value.</long-description>
          <tag name="param" line="80" description="" type="integer" variable="$typeMarker">
            <type>integer</type>
          </tag>
          <tag name="return" line="80" description="Whatever the corresponding PHP data type is" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="80" description="for unidentified marker type" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Amf_Parse_Deserializer::readTypeMarker()" refers="\Zend_Amf_Parse_Deserializer::readTypeMarker()" link="/classes/Zend_Amf_Parse_Deserializer.html#method_readTypeMarker"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$typeMarker</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="Zend_Amf\Parse_Amf3">
        <name>readInteger</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::readInteger()</full_name>
        <docblock line="137">
          <description>Read and deserialize an integer</description>
          <long-description>AMF 3 represents smaller integers with fewer bytes using the most
significant bit of each byte. The worst case uses 32-bits
to represent a 29-bit number, which is what we would have
done with no compression.
- 0x00000000 - 0x0000007F : 0xxxxxxx
- 0x00000080 - 0x00003FFF : 1xxxxxxx 0xxxxxxx
- 0x00004000 - 0x001FFFFF : 1xxxxxxx 1xxxxxxx 0xxxxxxx
- 0x00200000 - 0x3FFFFFFF : 1xxxxxxx 1xxxxxxx 1xxxxxxx xxxxxxxx
- 0x40000000 - 0xFFFFFFFF : throw range exception

0x04 -&gt; integer type code, followed by up to 4 bytes of data.

Parsing integers on OSFlash for the AMF3 integer data format:</long-description>
          <tag name="link" line="137" description="http://osflash.org/amf3/parsing_integers" link="http://osflash.org/amf3/parsing_integers"/>
          <tag name="return" line="137" description="" type="integer|float">
            <type>integer</type>
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="179" package="Zend_Amf\Parse_Amf3">
        <name>readString</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::readString()</full_name>
        <docblock line="179">
          <description>Read and deserialize a string</description>
          <long-description>Strings can be sent as a reference to a previously
occurring String by using an index to the implicit string reference table.
Strings are encoding using UTF-8 - however the header may either
describe a string literal or a string reference.

- string = 0x06 string-data
- string-data = integer-data [ modified-utf-8 ]
- modified-utf-8 = *OCTET</long-description>
          <tag name="return" line="179" description="" type="String">
            <type>String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="216" package="Zend_Amf\Parse_Amf3">
        <name>readDate</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::readDate()</full_name>
        <docblock line="216">
          <description>Read and deserialize a date</description>
          <long-description>Data is the number of milliseconds elapsed since the epoch
of midnight, 1st Jan 1970 in the UTC time zone.
Local time zone information is not sent to flash.

- date = 0x08 integer-data [ number-data ]</long-description>
          <tag name="return" line="216" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="243" package="Zend_Amf\Parse_Amf3">
        <name>readArray</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::readArray()</full_name>
        <docblock line="243">
          <description>Read amf array to PHP array</description>
          <long-description>- array = 0x09 integer-data ( [ 1OCTET *amf3-data ] | [OCTET *amf3-data 1] | [ OCTET *amf-data ] )</long-description>
          <tag name="return" line="243" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="282" package="Zend_Amf\Parse_Amf3">
        <name>readObject</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::readObject()</full_name>
        <docblock line="282">
          <description>Read an object from the AMF stream and convert it into a PHP object</description>
          <long-description></long-description>
          <tag name="todo" line="282" description="Rather than using an array of traitsInfo create Zend_Amf_Value_TraitsInfo"/>
          <tag name="return" line="282" description="" type="object|array">
            <type>object</type>
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="418" package="Zend_Amf\Parse_Amf3">
        <name>readXmlString</name>
        <full_name>\Zend_Amf_Parse_Amf3_Deserializer::readXmlString()</full_name>
        <docblock line="418">
          <description>Convert XML to SimpleXml
If user wants DomDocument they can use dom_import_simplexml</description>
          <long-description></long-description>
          <tag name="return" line="418" description="Object" type="\SimpleXml">
            <type>\SimpleXml</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Zend_Amf\Parse">
        <name>__construct</name>
        <full_name>\Zend_Amf_Parse_Deserializer::__construct()</full_name>
        <docblock line="51">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="\Zend_Amf_Parse_InputStream" variable="$stream">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_InputStream</type>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Deserializer</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="64" package="Zend_Amf\Parse">
        <name>readTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Deserializer::readTypeMarker()</full_name>
        <docblock line="64">
          <description>Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. Markers are the data type of
the following value.</description>
          <long-description></long-description>
          <tag name="param" line="64" description="" type="integer" variable="$typeMarker">
            <type>integer</type>
          </tag>
          <tag name="return" line="64" description="Whatever the data type is of the marker in php" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Deserializer</inherited_from>
      </method>
    </class>
    <markers>
      <todo line="43">readObject to handle Typed Objects</todo>
      <todo line="43">readXMLStrimg to be implemented.</todo>
      <todo line="43">Class could be implemented as Factory Class with each data type it's own class.</todo>
      <todo line="282">Rather than using an array of traitsInfo create Zend_Amf_Value_TraitsInfo</todo>
    </markers>
    <source>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</source>
  </file>
  <file path="Amf/Parse/Amf3/Serializer.php" generated-path="Amf.Parse.Amf3.Serializer.html" hash="6bfbcc4a37994ba24102ad15a87bfc6a" package="Zend_Amf\Parse_Amf3">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse_Amf3"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="41" package="Zend_Amf\Parse_Amf3">
      <extends>\Zend_Amf_Parse_Serializer</extends>
      <name>Zend_Amf_Parse_Amf3_Serializer</name>
      <full_name>\Zend_Amf_Parse_Amf3_Serializer</full_name>
      <docblock line="41">
        <description>Detect PHP object type and convert it to a corresponding AMF3 object type</description>
        <long-description></long-description>
        <tag name="package" line="41" description="Zend_Amf"/>
        <tag name="subpackage" line="41" description="Parse_Amf3"/>
        <tag name="copyright" line="41" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="41" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Parse_Serializer" refers="\Zend_Amf_Parse_Serializer" link="/classes/Zend_Amf_Parse_Serializer.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="47" package="Zend_Amf\Parse_Amf3">
        <name>$_strEmpty</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::_strEmpty</full_name>
        <default>''</default>
        <docblock line="47">
          <description>A constant empty string</description>
          <long-description></long-description>
          <tag name="var" line="47" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="53" package="Zend_Amf\Parse_Amf3">
        <name>$_referenceObjects</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::_referenceObjects</full_name>
        <default>array()</default>
        <docblock line="53">
          <description>An array of reference objects per amf body</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="59" package="Zend_Amf\Parse_Amf3">
        <name>$_referenceStrings</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::_referenceStrings</full_name>
        <default>array()</default>
        <docblock line="59">
          <description>An array of reference strings per amf body</description>
          <long-description></long-description>
          <tag name="var" line="59" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="65" package="Zend_Amf\Parse_Amf3">
        <name>$_referenceDefinitions</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::_referenceDefinitions</full_name>
        <default>array()</default>
        <docblock line="65">
          <description>An array of reference class definitions, indexed by classname</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="Zend_Amf\Parse">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Parse_Serializer::_stream</full_name>
        <default></default>
        <docblock line="38">
          <description>Reference to the current output stream being constructed</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="Zend_Amf\Parse">
        <name>$mbStringFunctionsOverloaded</name>
        <full_name>\Zend_Amf_Parse_Serializer::mbStringFunctionsOverloaded</full_name>
        <default></default>
        <docblock line="45">
          <description>str* functions overloaded using mbstring.func_overload</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="Zend_Amf\Parse_Amf3">
        <name>writeTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeTypeMarker()</full_name>
        <docblock line="79">
          <description>Serialize PHP types to AMF3 and write to stream</description>
          <long-description>Checks to see if the type was declared and then either
auto negotiates the type or use the user defined markerType to
serialize the data from php back to AMF3</long-description>
          <tag name="param" line="79" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="param" line="79" description="" type="integer" variable="$markerType">
            <type>integer</type>
          </tag>
          <tag name="param" line="79" description="" type="mixed" variable="$dataByVal">
            <type>mixed</type>
          </tag>
          <tag name="return" line="79" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Amf_Parse_Serializer::writeTypeMarker()" refers="\Zend_Amf_Parse_Serializer::writeTypeMarker()" link="/classes/Zend_Amf_Parse_Serializer.html#method_writeTypeMarker"/>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataByVal</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="183" package="Zend_Amf\Parse_Amf3">
        <name>writeInteger</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeInteger()</full_name>
        <docblock line="183">
          <description>Write an AMF3 integer</description>
          <long-description></long-description>
          <tag name="param" line="183" description="" type="integer|float" variable="$data">
            <type>integer</type>
            <type>float</type>
          </tag>
          <tag name="return" line="183" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$int</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="217" package="Zend_Amf\Parse_Amf3">
        <name>writeBinaryString</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeBinaryString()</full_name>
        <docblock line="217">
          <description>Send string to output stream, without trying to reference it.</description>
          <long-description>The string is prepended with strlen($string) &lt;&lt; 1 | 0x01</long-description>
          <tag name="param" line="217" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="217" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="231" package="Zend_Amf\Parse_Amf3">
        <name>writeString</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeString()</full_name>
        <docblock line="231">
          <description>Send string to output stream</description>
          <long-description></long-description>
          <tag name="param" line="231" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="231" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="259" package="Zend_Amf\Parse_Amf3">
        <name>writeByteArray</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeByteArray()</full_name>
        <docblock line="259">
          <description>Send ByteArray to output stream</description>
          <long-description></long-description>
          <tag name="param" line="259" description="" type="string|\Zend_Amf_Value_ByteArray" variable="$data">
            <type>string</type>
            <type>\Zend_Amf_Value_ByteArray</type>
          </tag>
          <tag name="return" line="259" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type>string|\Zend_Amf_Value_ByteArray</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="285" package="Zend_Amf\Parse_Amf3">
        <name>writeXml</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeXml()</full_name>
        <docblock line="285">
          <description>Send xml to output stream</description>
          <long-description></long-description>
          <tag name="param" line="285" description="" type="\DOMDocument|\SimpleXMLElement" variable="$xml">
            <type>\DOMDocument</type>
            <type>\SimpleXMLElement</type>
          </tag>
          <tag name="return" line="285" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>\DOMDocument|\SimpleXMLElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="313" package="Zend_Amf\Parse_Amf3">
        <name>writeDate</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeDate()</full_name>
        <docblock line="313">
          <description>Convert DateTime/Zend_Date to AMF date</description>
          <long-description></long-description>
          <tag name="param" line="313" description="" type="\DateTime|\Zend_Date" variable="$date">
            <type>\DateTime</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="313" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>\DateTime|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="340" package="Zend_Amf\Parse_Amf3">
        <name>writeArray</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeArray()</full_name>
        <docblock line="340">
          <description>Write a PHP array back to the amf output stream</description>
          <long-description></long-description>
          <tag name="param" line="340" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="340" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="383" package="Zend_Amf\Parse_Amf3">
        <name>writeObjectReference</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeObjectReference()</full_name>
        <docblock line="383">
          <description>Check if the given object is in the reference table, write the reference if it exists,
otherwise add the object to the reference table</description>
          <long-description></long-description>
          <tag name="param" line="383" description="&lt;p&gt;object reference to check for reference&lt;/p&gt;" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="param" line="383" description="&lt;p&gt;object to check for reference&lt;/p&gt;" type="mixed" variable="$objectByVal">
            <type>mixed</type>
          </tag>
          <tag name="return" line="383" description="true, if the reference was written, false otherwise" type="Boolean">
            <type>Boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectByVal</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="412" package="Zend_Amf\Parse_Amf3">
        <name>writeObject</name>
        <full_name>\Zend_Amf_Parse_Amf3_Serializer::writeObject()</full_name>
        <docblock line="412">
          <description>Write object to ouput stream</description>
          <long-description></long-description>
          <tag name="param" line="412" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="412" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type>\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="Zend_Amf\Parse">
        <name>__construct</name>
        <full_name>\Zend_Amf_Parse_Serializer::__construct()</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\Zend_Amf_Parse_OutputStream" variable="$stream">
            <type>\Zend_Amf_Parse_OutputStream</type>
          </tag>
          <tag name="return" line="53" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_OutputStream</type>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Serializer</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Parse">
        <name>writeTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Serializer::writeTypeMarker()</full_name>
        <docblock line="67">
          <description>Find the PHP object type and convert it into an AMF object type</description>
          <long-description></long-description>
          <tag name="param" line="67" description="" type="mixed" variable="$content">
            <type>mixed</type>
          </tag>
          <tag name="param" line="67" description="" type="integer" variable="$markerType">
            <type>integer</type>
          </tag>
          <tag name="param" line="67" description="" type="mixed" variable="$contentByVal">
            <type>mixed</type>
          </tag>
          <tag name="return" line="67" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$content</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contentByVal</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Serializer</inherited_from>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Amf/Parse/OutputStream.php" generated-path="Amf.Parse.OutputStream.html" hash="a4ca4c904260aaaf605e74be96b33787" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="38" package="Zend_Amf\Parse">
      <extends>\Zend_Amf_Util_BinaryStream</extends>
      <name>Zend_Amf_Parse_OutputStream</name>
      <full_name>\Zend_Amf_Parse_OutputStream</full_name>
      <docblock line="38">
        <description>Iterate at a binary level through the AMF response</description>
        <long-description>OutputStream extends BinaryStream as eventually BinaryStream could be placed
outside of Zend_Amf in order to allow other packages to use the class.</long-description>
        <tag name="uses" line="38" description="" link="Zend_Amf_Util_BinaryStream"/>
        <tag name="package" line="38" description="Zend_Amf"/>
        <tag name="subpackage" line="38" description="Parse"/>
        <tag name="copyright" line="38" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="38" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Util_BinaryStream" refers="\Zend_Amf_Util_BinaryStream" link="/classes/Zend_Amf_Util_BinaryStream.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Amf\Util">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_stream</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="&lt;p&gt;Byte stream&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="41" package="Zend_Amf\Util">
        <name>$_streamLength</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_streamLength</full_name>
        <default></default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="&lt;p&gt;Length of stream&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="46" package="Zend_Amf\Util">
        <name>$_bigEndian</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_bigEndian</full_name>
        <default></default>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="46" description="&lt;p&gt;BigEndian encoding?&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Amf\Util">
        <name>$_needle</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_needle</full_name>
        <default></default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;Current position in stream&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="Zend_Amf\Util">
        <name>$_mbStringFunctionsOverloaded</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_mbStringFunctionsOverloaded</full_name>
        <default></default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;str* functions overloaded using mbstring.func_overload?&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="Zend_Amf\Parse">
        <name>__construct</name>
        <full_name>\Zend_Amf_Parse_OutputStream::__construct()</full_name>
        <docblock line="45">
          <description>Constructor</description>
          <long-description>Create a reference to a byte stream that is going to be parsed or created
by the methods in the class. Detect if the class should use big or
little Endian encoding.</long-description>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Amf_Util_BinaryStream::__construct()" refers="\Zend_Amf_Util_BinaryStream::__construct()" link="/classes/Zend_Amf_Util_BinaryStream.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Zend_Amf\Util">
        <name>__construct</name>
        <full_name>\Zend_Amf_Util_BinaryStream::__construct()</full_name>
        <docblock line="68">
          <description>Constructor</description>
          <long-description>Create a reference to a byte stream that is going to be parsed or created
by the methods in the class. Detect if the class should use big or
little Endian encoding.</long-description>
          <tag name="param" line="68" description="&lt;p&gt;use '' if creating a new stream or pass a string if reading.&lt;/p&gt;" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="87" package="Zend_Amf\Util">
        <name>getStream</name>
        <full_name>\Zend_Amf_Util_BinaryStream::getStream()</full_name>
        <docblock line="87">
          <description>Returns the current stream</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="Zend_Amf\Util">
        <name>readBytes</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readBytes()</full_name>
        <docblock line="100">
          <description>Read the number of bytes in a row for the length supplied.</description>
          <long-description></long-description>
          <tag name="todo" line="100" description="Should check that there are enough bytes left in the stream we are about to read."/>
          <tag name="param" line="100" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
          <tag name="return" line="100" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="100" description="for buffer underrun" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="Zend_Amf\Util">
        <name>writeBytes</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeBytes()</full_name>
        <docblock line="119">
          <description>Write any length of bytes to the stream</description>
          <long-description>Usually a string.</long-description>
          <tag name="param" line="119" description="" type="string" variable="$bytes">
            <type>string</type>
          </tag>
          <tag name="return" line="119" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bytes</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Zend_Amf\Util">
        <name>readByte</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readByte()</full_name>
        <docblock line="131">
          <description>Reads a signed byte</description>
          <long-description></long-description>
          <tag name="return" line="131" description="Value is in the range of -128 to 127." type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="131" description="" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="152" package="Zend_Amf\Util">
        <name>writeByte</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeByte()</full_name>
        <docblock line="152">
          <description>Writes the passed string into a signed byte on the stream.</description>
          <long-description></long-description>
          <tag name="param" line="152" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="152" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Zend_Amf\Util">
        <name>readInt</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readInt()</full_name>
        <docblock line="163">
          <description>Reads a signed 32-bit integer from the data stream.</description>
          <long-description></long-description>
          <tag name="return" line="163" description="Value is in the range of -2147483648 to 2147483647" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="Zend_Amf\Util">
        <name>writeInt</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeInt()</full_name>
        <docblock line="174">
          <description>Write an the integer to the output stream as a 32 bit signed integer</description>
          <long-description></long-description>
          <tag name="param" line="174" description="" type="integer" variable="$stream">
            <type>integer</type>
          </tag>
          <tag name="return" line="174" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="Zend_Amf\Util">
        <name>readUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readUtf()</full_name>
        <docblock line="185">
          <description>Reads a UTF-8 string from the data stream</description>
          <long-description></long-description>
          <tag name="return" line="185" description="A UTF-8 string produced by the byte representation of characters" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="197" package="Zend_Amf\Util">
        <name>writeUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeUtf()</full_name>
        <docblock line="197">
          <description>Wite a UTF-8 string to the outputstream</description>
          <long-description></long-description>
          <tag name="param" line="197" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="197" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="Zend_Amf\Util">
        <name>readLongUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readLongUtf()</full_name>
        <docblock line="210">
          <description>Read a long UTF string</description>
          <long-description></long-description>
          <tag name="return" line="210" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="222" package="Zend_Amf\Util">
        <name>writeLongUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeLongUtf()</full_name>
        <docblock line="222">
          <description>Write a long UTF string to the buffer</description>
          <long-description></long-description>
          <tag name="param" line="222" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="222" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="Zend_Amf\Util">
        <name>readLong</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readLong()</full_name>
        <docblock line="233">
          <description>Read a long numeric value</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="double">
            <type>double</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="244" package="Zend_Amf\Util">
        <name>writeLong</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeLong()</full_name>
        <docblock line="244">
          <description>Write long numeric value to output stream</description>
          <long-description></long-description>
          <tag name="param" line="244" description="" type="integer|string" variable="$stream">
            <type>integer</type>
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>integer|string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="Zend_Amf\Util">
        <name>readUnsignedShort</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readUnsignedShort()</full_name>
        <docblock line="256">
          <description>Read a 16 bit unsigned short.</description>
          <long-description></long-description>
          <tag name="todo" line="256" description="This could use the unpack() w/ S,n, or v"/>
          <tag name="return" line="256" description="" type="double">
            <type>double</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="268" package="Zend_Amf\Util">
        <name>readDouble</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readDouble()</full_name>
        <docblock line="268">
          <description>Reads an IEEE 754 double-precision floating point number from the data stream.</description>
          <long-description></long-description>
          <tag name="return" line="268" description="Floating point number" type="double">
            <type>double</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="287" package="Zend_Amf\Util">
        <name>writeDouble</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeDouble()</full_name>
        <docblock line="287">
          <description>Writes an IEEE 754 double-precision floating point number from the data stream.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string|double" variable="$stream">
            <type>string</type>
            <type>double</type>
          </tag>
          <tag name="return" line="287" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string|double</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
    </class>
    <source>eJzdVMtu2zAQvOsr9hDAsVFbaYBcnALNowlgIE2LOrn0IlDU2mJDkyq5tOIW+fcuKclNgDboubzYXA6Hs8Oh3r1v6ibLJ5MMJvAVTQXXTmywte6BK7F4s7i8ul1e9bO7WnnwNjiJsFIaIU5D+Q0lAVmgGsFgCxfLD6CVROORa4IirAym0lhFllZRzXUuNkI+iDXTmLQ3UfYnzuiRZhG9SNuF9hbEVigtSh1ZnQ3rOu1itbqatqrCaYsl8HGJ+/7LzTzur4maeZ6vhsZmP7jPmbSbvJeYs+Rp6ZO0xQp2NkClKjCWwKFEtUUQIG2zA7tKBw6tCfZLOIRgOk02MtiSBLej6BWNb6DRKJjBR8uFAdxwY3E3m9iznw0y2W9oESTDEjzq6/WozQYrJQj1btbf0Jnk6dq6HUC60FQbbO5rxflmlep8dcPSZ+E8dgTM7NS6JoDL/d9DOYbjo6OT6fHR25MuKXcoa2O1XStks5fnsDByBoe93W3b7o0eJ97BNR7/fCURDLd9om66tUS2ReeVNXH5YFEdcC3PYo73/RX3pHRxoYxwuyU5FJsIcfg9KIeFNRzgUcTmjM0jNn+OnfGzGJ1mw8tYEDq2NUZLQJlwoHGL+sUdn3+85sD4xnYi48ZPgZpA/fn4SHyghxeihAcmMhSE1ruXS9IGXUGJHBYhu5djA3nOUAzi0Gh8O9ZV6GJ2mMS2YFmNG96Wj/WQHiKHSAvv91Hhqodu/N22/zJAeZac+N12Ul/88bpeseZnFulTSOKYcL/GkwuSrOtLw8qZQwrOwNaqqq/l6bcJJWuGVTCSYqKLQg4kh+OE6E5JWP7aGJrPn2NGo/FpAjxlT9kvMgfhjw==</source>
  </file>
  <file path="Amf/Parse/InputStream.php" generated-path="Amf.Parse.InputStream.html" hash="dd9ac55d1ef3d8a9a204aa595a108533" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Amf\Parse">
      <extends>\Zend_Amf_Util_BinaryStream</extends>
      <name>Zend_Amf_Parse_InputStream</name>
      <full_name>\Zend_Amf_Parse_InputStream</full_name>
      <docblock line="37">
        <description>InputStream is used to iterate at a binary level through the AMF request.</description>
        <long-description>InputStream extends BinaryStream as eventually BinaryStream could be placed
outside of Zend_Amf in order to allow other packages to use the class.</long-description>
        <tag name="package" line="37" description="Zend_Amf"/>
        <tag name="subpackage" line="37" description="Parse"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Util_BinaryStream" refers="\Zend_Amf_Util_BinaryStream" link="/classes/Zend_Amf_Util_BinaryStream.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Amf\Util">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_stream</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="&lt;p&gt;Byte stream&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="41" package="Zend_Amf\Util">
        <name>$_streamLength</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_streamLength</full_name>
        <default></default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="&lt;p&gt;Length of stream&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="46" package="Zend_Amf\Util">
        <name>$_bigEndian</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_bigEndian</full_name>
        <default></default>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="46" description="&lt;p&gt;BigEndian encoding?&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Amf\Util">
        <name>$_needle</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_needle</full_name>
        <default></default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;Current position in stream&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="Zend_Amf\Util">
        <name>$_mbStringFunctionsOverloaded</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_mbStringFunctionsOverloaded</full_name>
        <default></default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;str* functions overloaded using mbstring.func_overload?&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Zend_Amf\Util">
        <name>__construct</name>
        <full_name>\Zend_Amf_Util_BinaryStream::__construct()</full_name>
        <docblock line="68">
          <description>Constructor</description>
          <long-description>Create a reference to a byte stream that is going to be parsed or created
by the methods in the class. Detect if the class should use big or
little Endian encoding.</long-description>
          <tag name="param" line="68" description="&lt;p&gt;use '' if creating a new stream or pass a string if reading.&lt;/p&gt;" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="87" package="Zend_Amf\Util">
        <name>getStream</name>
        <full_name>\Zend_Amf_Util_BinaryStream::getStream()</full_name>
        <docblock line="87">
          <description>Returns the current stream</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="Zend_Amf\Util">
        <name>readBytes</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readBytes()</full_name>
        <docblock line="100">
          <description>Read the number of bytes in a row for the length supplied.</description>
          <long-description></long-description>
          <tag name="todo" line="100" description="Should check that there are enough bytes left in the stream we are about to read."/>
          <tag name="param" line="100" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
          <tag name="return" line="100" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="100" description="for buffer underrun" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="Zend_Amf\Util">
        <name>writeBytes</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeBytes()</full_name>
        <docblock line="119">
          <description>Write any length of bytes to the stream</description>
          <long-description>Usually a string.</long-description>
          <tag name="param" line="119" description="" type="string" variable="$bytes">
            <type>string</type>
          </tag>
          <tag name="return" line="119" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bytes</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Zend_Amf\Util">
        <name>readByte</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readByte()</full_name>
        <docblock line="131">
          <description>Reads a signed byte</description>
          <long-description></long-description>
          <tag name="return" line="131" description="Value is in the range of -128 to 127." type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="131" description="" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="152" package="Zend_Amf\Util">
        <name>writeByte</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeByte()</full_name>
        <docblock line="152">
          <description>Writes the passed string into a signed byte on the stream.</description>
          <long-description></long-description>
          <tag name="param" line="152" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="152" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Zend_Amf\Util">
        <name>readInt</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readInt()</full_name>
        <docblock line="163">
          <description>Reads a signed 32-bit integer from the data stream.</description>
          <long-description></long-description>
          <tag name="return" line="163" description="Value is in the range of -2147483648 to 2147483647" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="Zend_Amf\Util">
        <name>writeInt</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeInt()</full_name>
        <docblock line="174">
          <description>Write an the integer to the output stream as a 32 bit signed integer</description>
          <long-description></long-description>
          <tag name="param" line="174" description="" type="integer" variable="$stream">
            <type>integer</type>
          </tag>
          <tag name="return" line="174" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="Zend_Amf\Util">
        <name>readUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readUtf()</full_name>
        <docblock line="185">
          <description>Reads a UTF-8 string from the data stream</description>
          <long-description></long-description>
          <tag name="return" line="185" description="A UTF-8 string produced by the byte representation of characters" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="197" package="Zend_Amf\Util">
        <name>writeUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeUtf()</full_name>
        <docblock line="197">
          <description>Wite a UTF-8 string to the outputstream</description>
          <long-description></long-description>
          <tag name="param" line="197" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="197" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="Zend_Amf\Util">
        <name>readLongUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readLongUtf()</full_name>
        <docblock line="210">
          <description>Read a long UTF string</description>
          <long-description></long-description>
          <tag name="return" line="210" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="222" package="Zend_Amf\Util">
        <name>writeLongUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeLongUtf()</full_name>
        <docblock line="222">
          <description>Write a long UTF string to the buffer</description>
          <long-description></long-description>
          <tag name="param" line="222" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="222" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="Zend_Amf\Util">
        <name>readLong</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readLong()</full_name>
        <docblock line="233">
          <description>Read a long numeric value</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="double">
            <type>double</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="244" package="Zend_Amf\Util">
        <name>writeLong</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeLong()</full_name>
        <docblock line="244">
          <description>Write long numeric value to output stream</description>
          <long-description></long-description>
          <tag name="param" line="244" description="" type="integer|string" variable="$stream">
            <type>integer</type>
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>integer|string</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="Zend_Amf\Util">
        <name>readUnsignedShort</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readUnsignedShort()</full_name>
        <docblock line="256">
          <description>Read a 16 bit unsigned short.</description>
          <long-description></long-description>
          <tag name="todo" line="256" description="This could use the unpack() w/ S,n, or v"/>
          <tag name="return" line="256" description="" type="double">
            <type>double</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="268" package="Zend_Amf\Util">
        <name>readDouble</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readDouble()</full_name>
        <docblock line="268">
          <description>Reads an IEEE 754 double-precision floating point number from the data stream.</description>
          <long-description></long-description>
          <tag name="return" line="268" description="Floating point number" type="double">
            <type>double</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="287" package="Zend_Amf\Util">
        <name>writeDouble</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeDouble()</full_name>
        <docblock line="287">
          <description>Writes an IEEE 754 double-precision floating point number from the data stream.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string|double" variable="$stream">
            <type>string</type>
            <type>double</type>
          </tag>
          <tag name="return" line="287" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string|double</type>
        </argument>
        <inherited_from>\Zend_Amf_Util_BinaryStream</inherited_from>
      </method>
    </class>
    <source>eJzdU01v00AQvftXzKFSP0TsUKmXgkTT0kqWQoVIe+ESrdeTeOl61+xH3ID478xs7NBIgDjjk/ftzNs3M2/evuuaLivOzjI4g89oarhzosXeuidCGJyXN7f3i9vh9NAoD95GJxFWSiPwMVZfUAYIFkKDYLCH68V70Eqi8UiYCBxWRVNrrJmlV6EhnMBOyCexJhqTchPl8GIenkPO0WVKF9pbEBuhtKg0szob103KIrW6nvSqxkmPFdBzifvx0/yS85sQusuiWI2F5d+ozlzathgkFiR5UvkkrVzB1kaoVQ3GBnAoUW0QBEjbbcGu0oNjaYL6JRxCNDtNlhlsFQSVo8JfNL6CTqMgBs8tFwawpcI4m5o4sF+NMqnf0CNICkvhrG/Qo9oWayUC6m0+TOhK0nFt3RYgDTRhY5sHbDlrVwmn0Y1XH4XzuCMgZqfWTQC42f+eyFM4n04vJufT1xc7pzygbIzVdq2Qmr2YQWlkDidDu/u+3zf6NPGOXaPvn0fCwXA/OGq+u0tkG3ReWcPXR2V9RFiRsY/39S0fg9LLa2WE2y6CQ9FyiMOvUTlcWkMGPubYgmILji1exua0FsdvsnEzStPFMLCQs6LHmielAjrqNjtOQJXSQeMG9cHoZx/ugN9FH8YhveTD50AyPBxIFR6Ix4QotN4eXkkbdQ0VkoWE3O2TjcGTs9ieY/m8UdbV6FgnkdgeLIlx48Z5xmNaT7KWFt7vDfS/maXIUn2/nJHUL383gz+bJ/ue/ch+AsiTtgQ=</source>
  </file>
  <file path="Amf/Parse/Resource/MysqlResult.php" generated-path="Amf.Parse.Resource.MysqlResult.html" hash="f93006c3cf636f4426559266c7254301" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Amf\Parse">
      <extends/>
      <name>Zend_Amf_Parse_Resource_MysqlResult</name>
      <full_name>\Zend_Amf_Parse_Resource_MysqlResult</full_name>
      <docblock line="32">
        <description>This class will convert mysql result resource to array suitable for passing
to the external entities.</description>
        <long-description></long-description>
        <tag name="package" line="32" description="Zend_Amf"/>
        <tag name="subpackage" line="32" description="Parse"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="39" package="Zend_Amf\Parse">
        <name>$fieldTypes</name>
        <full_name>\Zend_Amf_Parse_Resource_MysqlResult::fieldTypes</full_name>
        <default>array("int" =&gt; "int", "timestamp" =&gt; "int", "year" =&gt; "int", "real" =&gt; "float")</default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="39" description="&lt;p&gt;List of Mysql types with PHP counterparts&lt;/p&gt;&#10;&lt;p&gt;Key =&gt; Value is Mysql type (exact string) =&gt; PHP type&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Zend_Amf\Parse">
        <name>parse</name>
        <full_name>\Zend_Amf_Parse_Resource_MysqlResult::parse()</full_name>
        <docblock line="51">
          <description>Parse resource into array</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="resource" variable="$resource">
            <type>resource</type>
          </tag>
          <tag name="return" line="51" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>resource</type>
        </argument>
      </method>
    </class>
    <source>eJzdVd9v2zYQftdfcSj8IKexnRXoS9J07boOM5YVQZLtYUFh0NTJ4kqRGklF0Yr877ujKNt13WHP04vF+/Hdd98d5VffN1WTLU5OMjiBP9AU8JMTNXbWfSILG6+W795/uH2fTneV8uBt6yRCqTQCH9v1nygDBAuhQjDYwQ+3P4JWEo1HsonAYevWFBoLRulUqMhOxkbIT2JDMCbmRshUcR4ew5yjlzFdaG9BPAilxVozqrPtpopZxFYXs04VOOtwDVQuYv92c3XO+VUIzfliUY6Nzf+mPufS1otEcUGUZ2sfqS1L6G0LhSrA2AAOJaoHBAHSNj3YMhYcWxOkl3AIrRk4WUaw6yCoHRX+heMpNBoFIXiWXBjAmhrjbBIxob8ZaZLe0CFICovhzC/xUXWNhRIBdT9PE3oj6bixrgeIA422UeZkW72ty2in0Y2ua+E8DgCE7NSmCgDvtq+5nMKLs7OXsxdn370cNuUOZWWsthuFJPbtW1gaOYc8yd113VboacQdVaPnP4+Eg+FD2qirwRfBHtB5ZQ27J8tiQrZFNu5xXFKphfe0aVqTVIbCA9S9/0vTSH2rebJpjUlx4ZzoaY9ViHMsraPF9F6ZTRoJTxAfAzojNKAJKlDPW8X/b+ouskG8sZlVZL+6SYqtfmUdb6KM2eeMMaLw/PBkhEuCXikf+MrEeAh9g364+tc/X9NQWkOCNsIFn3JHiF+wh8vX8LvQbfzA7PIhx0dBnxofHA1nylGMxa6UvIi/PoigJDTtmjqGSalQF3ex/uXALR/C6XmmTHjGQPHldGcPqkbCqZuj3h6FO+pwKPTgKLUVo2t6cahT1HS3hYSS9vBADNoumuMucDK+bQMchtaZL5IHFVL7ZWtk4LvScMl8CzCFz1vak3QrRnkS3+iK6knDzniDVqatV9Ho98AOE/wqOGE83aX6GCrZ84m6PLuYqFfbCnR4/nyfVoSLgx9rx9AVm3a1T2Gi9qD5UWWuvMeQe9Tl+fneBtxHvI/TwzJHmd/vFzV0nQ6KfiRe36rwJaGnbPe2fe0q+r8jSNvt+sMgq5WN/6h76h6yJXIoZJV/rbXwqQ2my3s4nJjSkZZJoqSl7Wavd4mn+2nf6mRvce5ZCQa5yL6OSwuaQoeIp+wp+wfKEpU/</source>
  </file>
  <file path="Amf/Parse/Resource/MysqliResult.php" generated-path="Amf.Parse.Resource.MysqliResult.html" hash="3ff39905a315dc50438612cdfd044003" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Amf\Parse">
      <extends/>
      <name>Zend_Amf_Parse_Resource_MysqliResult</name>
      <full_name>\Zend_Amf_Parse_Resource_MysqliResult</full_name>
      <docblock line="32">
        <description>This class will convert mysql result resource to array suitable for passing
to the external entities.</description>
        <long-description></long-description>
        <tag name="package" line="32" description="Zend_Amf"/>
        <tag name="subpackage" line="32" description="Parse"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="38" package="Zend_Amf\Parse">
        <name>$mysqli_type</name>
        <full_name>\Zend_Amf_Parse_Resource_MysqliResult::mysqli_type</full_name>
        <default>array(0 =&gt; "MYSQLI_TYPE_DECIMAL", 1 =&gt; "MYSQLI_TYPE_TINYINT", 2 =&gt; "MYSQLI_TYPE_SMALLINT", 3 =&gt; "MYSQLI_TYPE_INTEGER", 4 =&gt; "MYSQLI_TYPE_FLOAT", 5 =&gt; "MYSQLI_TYPE_DOUBLE", 7 =&gt; "MYSQLI_TYPE_TIMESTAMP", 8 =&gt; "MYSQLI_TYPE_BIGINT", 9 =&gt; "MYSQLI_TYPE_MEDIUMINT", 10 =&gt; "MYSQLI_TYPE_DATE", 11 =&gt; "MYSQLI_TYPE_TIME", 12 =&gt; "MYSQLI_TYPE_DATETIME", 13 =&gt; "MYSQLI_TYPE_YEAR", 14 =&gt; "MYSQLI_TYPE_DATE", 16 =&gt; "MYSQLI_TYPE_BIT", 246 =&gt; "MYSQLI_TYPE_DECIMAL", 247 =&gt; "MYSQLI_TYPE_ENUM", 248 =&gt; "MYSQLI_TYPE_SET", 249 =&gt; "MYSQLI_TYPE_TINYBLOB", 250 =&gt; "MYSQLI_TYPE_MEDIUMBLOB", 251 =&gt; "MYSQLI_TYPE_LONGBLOB", 252 =&gt; "MYSQLI_TYPE_BLOB", 253 =&gt; "MYSQLI_TYPE_VARCHAR", 254 =&gt; "MYSQLI_TYPE_CHAR", 255 =&gt; "MYSQLI_TYPE_GEOMETRY")</default>
        <docblock line="38">
          <description>mapping taken from http://forums.mysql.com/read.php?52,255868,255895#msg-255895</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="" line="67" package="Zend_Amf\Parse">
        <name>$mysqli_to_php</name>
        <full_name>\Zend_Amf_Parse_Resource_MysqliResult::mysqli_to_php</full_name>
        <default>array("MYSQLI_TYPE_DECIMAL" =&gt; 'float', "MYSQLI_TYPE_NEWDECIMAL" =&gt; 'float', "MYSQLI_TYPE_BIT" =&gt; 'integer', "MYSQLI_TYPE_TINYINT" =&gt; 'integer', "MYSQLI_TYPE_SMALLINT" =&gt; 'integer', "MYSQLI_TYPE_MEDIUMINT" =&gt; 'integer', "MYSQLI_TYPE_BIGINT" =&gt; 'integer', "MYSQLI_TYPE_INTEGER" =&gt; 'integer', "MYSQLI_TYPE_FLOAT" =&gt; 'float', "MYSQLI_TYPE_DOUBLE" =&gt; 'float', "MYSQLI_TYPE_NULL" =&gt; 'null', "MYSQLI_TYPE_TIMESTAMP" =&gt; 'string', "MYSQLI_TYPE_INT24" =&gt; 'integer', "MYSQLI_TYPE_DATE" =&gt; 'string', "MYSQLI_TYPE_TIME" =&gt; 'string', "MYSQLI_TYPE_DATETIME" =&gt; 'string', "MYSQLI_TYPE_YEAR" =&gt; 'string', "MYSQLI_TYPE_NEWDATE" =&gt; 'string', "MYSQLI_TYPE_ENUM" =&gt; 'string', "MYSQLI_TYPE_SET" =&gt; 'string', "MYSQLI_TYPE_TINYBLOB" =&gt; 'object', "MYSQLI_TYPE_MEDIUMBLOB" =&gt; 'object', "MYSQLI_TYPE_LONGBLOB" =&gt; 'object', "MYSQLI_TYPE_BLOB" =&gt; 'object', "MYSQLI_TYPE_CHAR" =&gt; 'string', "MYSQLI_TYPE_VARCHAR" =&gt; 'string', "MYSQLI_TYPE_GEOMETRY" =&gt; 'object', "MYSQLI_TYPE_BIT" =&gt; 'integer')</default>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="Zend_Amf\Parse">
        <name>parse</name>
        <full_name>\Zend_Amf_Parse_Resource_MysqliResult::parse()</full_name>
        <docblock line="104">
          <description>Parse resource into array</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="resource" variable="$resource">
            <type>resource</type>
          </tag>
          <tag name="return" line="104" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>resource</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="67" code="PPC:ERR-50007">No summary for property $mysqli_to_php</error>
    </parse_markers>
    <source>eJzdV1Fz4jYQfudX7FyZOZJLIKHhmksudweJL2UGSBpIO2kmwwgjgxojUUsORzv5713JsjGIJH6uX7CkT6tvv12vls9f59N5qba7W4Jd+JPyMXyPyIwuRPSIM3qy0z73en3PjgZTJkGKOPIpBCykoIfx6C/qK1AC1JQCpwto9S8gZD7lkuIcURo2ivk4pGNtZcHUFOdxck78RzJBM9zsNSbtiVX1Q1U1um22k1AKIE+EhWQUaquRiCdTswvZhuP9BRvT/QUdAR5nbN/edE70/qlS85NaLUgdq/6DflZ9MatZijWkvD+Shlo7gKWIYczGwIWCiPqUPVEg4Iv5EkRgDkxdI6gXiSjEPOEktAUxUgTdYeoVjnswDylBC1JLTjjQGTqmd6OI1vq3lCbqDQsKPsIMXPOzfNhsRseMKBouqzZC33wcTkS0BDABNXOpzHZu2JwFZh5Dly5dk0jSxABajthkqgDOs9eKvwP1g4PGfv3gsJFkyoD6Uy5CMWEUxe43oc39KlSs3IvFIhN6x9hNVcOncEg0GHo2ozrJmjH2RCPJBNfL5fa4jHO1UprHJkn9kEiJmRaGKBVHuILZUv4dYkhlHOrI2jRGxUkUkSXmMVMmjoGIMDGlZHxiQ6IjSH8oGnESAuWKKfQ5U/z/pm6tlIiXOjM07Ic3VrFhV+vIboyOpX9LJW3FSK+fXZiR+RylA0UeKYcgwgxOGYkonsmqiYPhE1EyrmIF+tqo79UbjeOPx+bnU+OnmZzsJ6/WbM38SkUU82Eej9AVKBtLbKiWcwpnSRgrCR6fAzj7Au+6d/3fOu3h4O7aG1545+1us/NuL8McOphBu3fX7g1ymLqD6aORzjroZweE696ld5PDHDmY752rZt5Kw6V8ddvqeDnIL1sYd73+oNm9zqGOHVSrfbnO+JMD6XoX7dvuOupwi4rNQZ7Q4TYNu2sIV0FtYxPlSnjnNfP6HboCbnL5uMXvtVgeuQg3K+pHrspe77a7BnEl7nvrR7kK6+Rqda5aeVjDVTgJhAN0he5c9S4dmKu2A3Gl/r15c/7rmtr1hiu3A3ET9tK76nqDmzsL2zm19aEGrZiF5rLD2iJ8vLXMxWpKr664BMxnHArxCPE8/7Vnn7kYYq1wP/St0TQrSO59EAqi3u9tR/e8P1Yb3kTrXEoXDJpxvGtp9BI+rSVF8VldKYhffbDF8LYGFOaflrCi+KSc5fR5VU1b2gqie7edTia+RvM4DF8WPi2JFixVhFfSK37Wj/K83/DTVJ08l9fNm0JXHJ7VxmJwUySLW9cZn9F/G27KXnHrugRCcXhWD1O4MH8lXs93u+FteFYdi1nPoMXgphYWdzUtsAXhWRktyP31ypRV4VWXZnq6VReMeNsHW0CKw+4W+8gVsJy+ZYCIqjjia5uTZs12aUHMfaV79bk+spIZ2AHbO+qnbNvytLgj42wpYDQc+1wv2puAx7OhmZU5c+jjxh45VBHhEm+XWd5whsKFSpmdHZyW2efsFBx8+KC5Qe7BVR6IFYGAKn+aUBiOGf5LVCsie1Bm+VP0w4IKk5KqiqRhcHKSb1zvE9v7X/TgYWfz5K3eZHs4tvgPSGvDrLko79866+F07aTn0uote11M8S85+iYWm86bWzwn/yZx5EmJP624oSDSeqTZ62xNRprTFu9RNb1iONyv9j3s5be95Ekute61TtrIacnF2Ry20ATxXHou/QfeqKhy</source>
  </file>
  <file path="Amf/Parse/Resource/Stream.php" generated-path="Amf.Parse.Resource.Stream.html" hash="9fac77c33d3b8a5932618b7140eb480e" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="31" package="Zend_Amf\Parse">
      <extends/>
      <name>Zend_Amf_Parse_Resource_Stream</name>
      <full_name>\Zend_Amf_Parse_Resource_Stream</full_name>
      <docblock line="31">
        <description>This class will convert stream resource to string by just reading it</description>
        <long-description></long-description>
        <tag name="package" line="31" description="Zend_Amf"/>
        <tag name="subpackage" line="31" description="Parse"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="Zend_Amf\Parse">
        <name>parse</name>
        <full_name>\Zend_Amf_Parse_Resource_Stream::parse()</full_name>
        <docblock line="39">
          <description>Parse resource into string</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;Stream resource&lt;/p&gt;" type="resource" variable="$resource">
            <type>resource</type>
          </tag>
          <tag name="return" line="39" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>resource</type>
        </argument>
      </method>
    </class>
    <source>eJzdk7Fu2zAQhnc9xQ0ebKOW3ABZ0gJNmqaAASMo4nTpIlDUSWJCkQJJWVWLvHuPFKWmS9G5XCwe737+9x39/kPXdEm23SawhW+oSvhsWIuDNs8U8cHj4fbu/nQXd4+NsGB1bzhCJSSC3/bFE3IHToNrEBQO8PH0CaTgqCxSjDmfVvSqlFh6lUG4huIU7Bh/ZjXJqFAbJOONqfvuUp99COVMWg3szIRkhfSqRvd1E6rIrSx3gyhxN2ABdF3Q/vpwvPL1jXPdVZZVc2PpD+oz5brNosWMLO8KG6wdKhh1D6UoQWkHBjmKMwIDrrsRdBUunFtjxIsZhF5NnrRX0IVj1I5wf/H4BjqJjBSsR84UYEuN+WqCGNWvZ5vEGwYETmkh3fuLfkTbYimYQzmmcULXnLa1NiNAGGiIzZhjLL9pqxCn0c1HX5ixOAmQshF14wBul88138DFfn+5u9i/vZxeyiPyRmmpa4EE+3QDB8VTWEfcwzAsoDdBd6ZG659H4pPhPr6o43QWxM5orNDKH68O5YpiWTK/4/BIuWTW0kuTklApSndgnUHW0kzjAybWFBKqhmKEp976cbPS74Wbaf5v5LJkAjM3kwf3+UNkkp8Co+Rn4ssDT7+2U5O/0Qm1wIsZcyIRM68hr5av05/4lwKDrjeK/kiGjTGYhd+uL6gpqHrFnZ915z2sF8ENTC79ihrThPMaXU5Dd6icfZX/LqS/JC/JLy6umKs=</source>
  </file>
  <file path="Amf/Parse/TypeLoader.php" generated-path="Amf.Parse.TypeLoader.html" hash="698317fb2ca5d002f751b51f433e60ab" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="true" abstract="false" namespace="" line="53" package="Zend_Amf\Parse">
      <extends/>
      <name>Zend_Amf_Parse_TypeLoader</name>
      <full_name>\Zend_Amf_Parse_TypeLoader</full_name>
      <docblock line="53">
        <description>Loads a local class and executes the instantiation of that class.</description>
        <long-description></long-description>
        <tag name="todo" line="53" description="PHP 5.3 can drastically change this class w/ namespace and the new call_user_func w/ namespace"/>
        <tag name="package" line="53" description="Zend_Amf"/>
        <tag name="subpackage" line="53" description="Parse"/>
        <tag name="copyright" line="53" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="53" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="58" package="Zend_Amf\Parse">
        <name>$callbackClass</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::callbackClass</full_name>
        <default></default>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="58" description="&lt;p&gt;callback class&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="" line="63" package="Zend_Amf\Parse">
        <name>$classMap</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::classMap</full_name>
        <default>array('flex.messaging.messages.AcknowledgeMessage' =&gt; 'Zend_Amf_Value_Messaging_AcknowledgeMessage', 'flex.messaging.messages.ErrorMessage' =&gt; 'Zend_Amf_Value_Messaging_AsyncMessage', 'flex.messaging.messages.CommandMessage' =&gt; 'Zend_Amf_Value_Messaging_CommandMessage', 'flex.messaging.messages.ErrorMessage' =&gt; 'Zend_Amf_Value_Messaging_ErrorMessage', 'flex.messaging.messages.RemotingMessage' =&gt; 'Zend_Amf_Value_Messaging_RemotingMessage', 'flex.messaging.io.ArrayCollection' =&gt; 'Zend_Amf_Value_Messaging_ArrayCollection')</default>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="63" description="&lt;p&gt;AMF class map&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="75" package="Zend_Amf\Parse">
        <name>$_defaultClassMap</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::_defaultClassMap</full_name>
        <default>array('flex.messaging.messages.AcknowledgeMessage' =&gt; 'Zend_Amf_Value_Messaging_AcknowledgeMessage', 'flex.messaging.messages.ErrorMessage' =&gt; 'Zend_Amf_Value_Messaging_AsyncMessage', 'flex.messaging.messages.CommandMessage' =&gt; 'Zend_Amf_Value_Messaging_CommandMessage', 'flex.messaging.messages.ErrorMessage' =&gt; 'Zend_Amf_Value_Messaging_ErrorMessage', 'flex.messaging.messages.RemotingMessage' =&gt; 'Zend_Amf_Value_Messaging_RemotingMessage', 'flex.messaging.io.ArrayCollection' =&gt; 'Zend_Amf_Value_Messaging_ArrayCollection')</default>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="75" description="&lt;p&gt;Default class map&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="87" package="Zend_Amf\Parse">
        <name>$_resourceLoader</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::_resourceLoader</full_name>
        <default>null</default>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="\Zend_Loader_PluginLoader_Interface" variable="">
            <type>\Zend_Loader_PluginLoader_Interface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="96" package="Zend_Amf\Parse">
        <name>loadType</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::loadType()</full_name>
        <docblock line="96">
          <description>Load the mapped class type into a callback.</description>
          <long-description></long-description>
          <tag name="param" line="96" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="96" description="" type="object|false">
            <type>object</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="114" package="Zend_Amf\Parse">
        <name>getMappedClassName</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::getMappedClassName()</full_name>
        <docblock line="114">
          <description>Looks up the supplied call name to its mapped class name</description>
          <long-description></long-description>
          <tag name="param" line="114" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="114" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="142" package="Zend_Amf\Parse">
        <name>setMapping</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::setMapping()</full_name>
        <docblock line="142">
          <description>Map PHP class names to ActionScript class names</description>
          <long-description>Allows users to map the class names of there action script classes
to the equivelent php class name. Used in deserialization to load a class
and serialiation to set the class name of the returned object.</long-description>
          <tag name="param" line="142" description="" type="string" variable="$asClassName">
            <type>string</type>
          </tag>
          <tag name="param" line="142" description="" type="string" variable="$phpClassName">
            <type>string</type>
          </tag>
          <tag name="return" line="142" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asClassName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$phpClassName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="152" package="Zend_Amf\Parse">
        <name>resetMap</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::resetMap()</full_name>
        <docblock line="152">
          <description>Reset type map</description>
          <long-description></long-description>
          <tag name="return" line="152" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="162" package="Zend_Amf\Parse">
        <name>setResourceLoader</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::setResourceLoader()</full_name>
        <docblock line="162">
          <description>Set loader for resource type handlers</description>
          <long-description></long-description>
          <tag name="param" line="162" description="" type="\Zend_Loader_PluginLoader_Interface" variable="$loader">
            <type>\Zend_Loader_PluginLoader_Interface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$loader</name>
          <default></default>
          <type>\Zend_Loader_PluginLoader_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="173" package="Zend_Amf\Parse">
        <name>addResourceDirectory</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::addResourceDirectory()</full_name>
        <docblock line="173">
          <description>Add directory to the list of places where to look for resource handlers</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="string" variable="$dir">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dir</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="186" package="Zend_Amf\Parse">
        <name>getResourceParser</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::getResourceParser()</full_name>
        <docblock line="186">
          <description>Get plugin class that handles this resource</description>
          <long-description></long-description>
          <tag name="param" line="186" description="&lt;p&gt;Resource type&lt;/p&gt;" type="resource" variable="$resource">
            <type>resource</type>
          </tag>
          <tag name="return" line="186" description="Class name" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>resource</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="202" package="Zend_Amf\Parse">
        <name>handleResource</name>
        <full_name>\Zend_Amf_Parse_TypeLoader::handleResource()</full_name>
        <docblock line="202">
          <description>Convert resource to a serializable object</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="resource" variable="$resource">
            <type>resource</type>
          </tag>
          <tag name="return" line="202" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resource</name>
          <default></default>
          <type>resource</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="53">PHP 5.3 can drastically change this class w/ namespace and the new call_user_func w/ namespace</todo>
    </markers>
    <parse_markers>
      <error line="87" code="PPC:ERR-50007">No summary for property $_resourceLoader</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Amf/Parse/Amf0/Deserializer.php" generated-path="Amf.Parse.Amf0.Deserializer.html" hash="163ca4240ad3544b8c04a0671bb8a5e4" package="Zend_Amf\Parse_Amf0">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse_Amf0"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="42" package="Zend_Amf\Parse_Amf0">
      <extends>\Zend_Amf_Parse_Deserializer</extends>
      <name>Zend_Amf_Parse_Amf0_Deserializer</name>
      <full_name>\Zend_Amf_Parse_Amf0_Deserializer</full_name>
      <docblock line="42">
        <description>Read an AMF0 input stream and convert it into PHP data types</description>
        <long-description>Logic for deserialization of the AMF envelop is based on resources supplied
by Adobe Blaze DS. For and example of deserialization please review the BlazeDS
source tree.</long-description>
        <tag name="todo" line="42" description="Implement Typed Object Class Mapping"/>
        <tag name="todo" line="42" description="Class could be implemented as Factory Class with each data type it's own class"/>
        <tag name="package" line="42" description="Zend_Amf"/>
        <tag name="subpackage" line="42" description="Parse_Amf0"/>
        <tag name="copyright" line="42" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="42" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Parse_Deserializer" refers="\Zend_Amf_Parse_Deserializer" link="/classes/Zend_Amf_Parse_Deserializer.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="48" package="Zend_Amf\Parse_Amf0">
        <name>$_reference</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::_reference</full_name>
        <default>array()</default>
        <docblock line="48">
          <description>An array of objects used for recursively deserializing an object.</description>
          <long-description></long-description>
          <tag name="var" line="48" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="55" package="Zend_Amf\Parse_Amf0">
        <name>$_objectEncoding</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::_objectEncoding</full_name>
        <default>\Zend_Amf_Constants::AMF0_OBJECT_ENCODING</default>
        <docblock line="55">
          <description>If AMF3 serialization occurs, update to AMF0 0x03</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Amf\Parse">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Parse_Deserializer::_stream</full_name>
        <default></default>
        <docblock line="43">
          <description>The raw string that represents the AMF request.</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\Zend_Amf_Parse_InputStream" variable="">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Zend_Amf\Parse_Amf0">
        <name>readTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readTypeMarker()</full_name>
        <docblock line="68">
          <description>Read AMF markers and dispatch for deserialization</description>
          <long-description>Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. Markers are the data type of
the following value.</long-description>
          <tag name="param" line="68" description="" type="integer" variable="$typeMarker">
            <type>integer</type>
          </tag>
          <tag name="return" line="68" description="whatever the data type is of the marker in php" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="68" description="for invalid type" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Amf_Parse_Deserializer::readTypeMarker()" refers="\Zend_Amf_Parse_Deserializer::readTypeMarker()" link="/classes/Zend_Amf_Parse_Deserializer.html#method_readTypeMarker"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$typeMarker</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="152" package="Zend_Amf\Parse_Amf0">
        <name>readObject</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readObject()</full_name>
        <docblock line="152">
          <description>Read AMF objects and convert to PHP objects</description>
          <long-description>Read the name value pair objects form the php message and convert them to
a php object class.

Called when the marker type is 3.</long-description>
          <tag name="param" line="152" description="" type="array|null" variable="$object">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="152" description="" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default>null</default>
          <type>array|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="182" package="Zend_Amf\Parse_Amf0">
        <name>readReference</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readReference()</full_name>
        <docblock line="182">
          <description>Read reference objects</description>
          <long-description>Used to gain access to the private array of reference objects.
Called when marker type is 7.</long-description>
          <tag name="return" line="182" description="" type="object">
            <type>object</type>
          </tag>
          <tag name="throws" line="182" description="for invalid reference keys" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="202" package="Zend_Amf\Parse_Amf0">
        <name>readMixedArray</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readMixedArray()</full_name>
        <docblock line="202">
          <description>Reads an array with numeric and string indexes.</description>
          <long-description>Called when marker type is 8</long-description>
          <tag name="todo" line="202" description="As of Flash Player 9 there is not support for mixed typed arrays&#10;        so we handle this as an object. With the introduction of vectors&#10;        in Flash Player 10 this may need to be reconsidered."/>
          <tag name="return" line="202" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="215" package="Zend_Amf\Parse_Amf0">
        <name>readArray</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readArray()</full_name>
        <docblock line="215">
          <description>Converts numerically indexed actiosncript arrays into php arrays.</description>
          <long-description>Called when marker type is 10</long-description>
          <tag name="return" line="215" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="230" package="Zend_Amf\Parse_Amf0">
        <name>readDate</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readDate()</full_name>
        <docblock line="230">
          <description>Convert AS Date to Zend_Date</description>
          <long-description></long-description>
          <tag name="return" line="230" description="" type="\Zend_Date">
            <type>\Zend_Date</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="251" package="Zend_Amf\Parse_Amf0">
        <name>readXmlString</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readXmlString()</full_name>
        <docblock line="251">
          <description>Convert XML to SimpleXml
If user wants DomDocument they can use dom_import_simplexml</description>
          <long-description></long-description>
          <tag name="return" line="251" description="Object" type="\SimpleXml">
            <type>\SimpleXml</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="266" package="Zend_Amf\Parse_Amf0">
        <name>readTypedObject</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readTypedObject()</full_name>
        <docblock line="266">
          <description>Read Class that is to be mapped to a server class.</description>
          <long-description>Commonly used for Value Objects on the server</long-description>
          <tag name="todo" line="266" description="implement Typed Class mapping"/>
          <tag name="return" line="266" description="" type="object|array">
            <type>object</type>
            <type>array</type>
          </tag>
          <tag name="throws" line="266" description="if unable to load type" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="291" package="Zend_Amf\Parse_Amf0">
        <name>readAmf3TypeMarker</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::readAmf3TypeMarker()</full_name>
        <docblock line="291">
          <description>AMF3 data type encountered load AMF3 Deserializer to handle
type markers.</description>
          <long-description></long-description>
          <tag name="return" line="291" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="305" package="Zend_Amf\Parse_Amf0">
        <name>getObjectEncoding</name>
        <full_name>\Zend_Amf_Parse_Amf0_Deserializer::getObjectEncoding()</full_name>
        <docblock line="305">
          <description>Return the object encoding to check if an AMF3 object
is going to be return.</description>
          <long-description></long-description>
          <tag name="return" line="305" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Zend_Amf\Parse">
        <name>__construct</name>
        <full_name>\Zend_Amf_Parse_Deserializer::__construct()</full_name>
        <docblock line="51">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="\Zend_Amf_Parse_InputStream" variable="$stream">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_InputStream</type>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Deserializer</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="64" package="Zend_Amf\Parse">
        <name>readTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Deserializer::readTypeMarker()</full_name>
        <docblock line="64">
          <description>Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. Markers are the data type of
the following value.</description>
          <long-description></long-description>
          <tag name="param" line="64" description="" type="integer" variable="$typeMarker">
            <type>integer</type>
          </tag>
          <tag name="return" line="64" description="Whatever the data type is of the marker in php" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Deserializer</inherited_from>
      </method>
    </class>
    <markers>
      <todo line="42">Implement Typed Object Class Mapping</todo>
      <todo line="42">Class could be implemented as Factory Class with each data type it's own class</todo>
      <todo line="202">As of Flash Player 9 there is not support for mixed typed arrays
        so we handle this as an object. With the introduction of vectors
        in Flash Player 10 this may need to be reconsidered.</todo>
      <todo line="266">implement Typed Class mapping</todo>
    </markers>
    <source>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</source>
  </file>
  <file path="Amf/Parse/Amf0/Serializer.php" generated-path="Amf.Parse.Amf0.Serializer.html" hash="3bbc7fd5a3794ae42c81cd281b33c3d6" package="Zend_Amf\Parse_Amf0">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse_Amf0"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="38" package="Zend_Amf\Parse_Amf0">
      <extends>\Zend_Amf_Parse_Serializer</extends>
      <name>Zend_Amf_Parse_Amf0_Serializer</name>
      <full_name>\Zend_Amf_Parse_Amf0_Serializer</full_name>
      <docblock line="38">
        <description>Serializer PHP misc types back to there corresponding AMF0 Type Marker.</description>
        <long-description></long-description>
        <tag name="uses" line="38" description="" link="Zend_Amf_Parse_Serializer"/>
        <tag name="package" line="38" description="Zend_Amf"/>
        <tag name="subpackage" line="38" description="Parse_Amf0"/>
        <tag name="copyright" line="38" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="38" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Parse_Serializer" refers="\Zend_Amf_Parse_Serializer" link="/classes/Zend_Amf_Parse_Serializer.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Amf\Parse_Amf0">
        <name>$_className</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::_className</full_name>
        <default>''</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="43" description="&lt;p&gt;Name of the class to be returned&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="Zend_Amf\Parse_Amf0">
        <name>$_referenceObjects</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::_referenceObjects</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>An array of reference objects</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="Zend_Amf\Parse">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Parse_Serializer::_stream</full_name>
        <default></default>
        <docblock line="38">
          <description>Reference to the current output stream being constructed</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="Zend_Amf\Parse">
        <name>$mbStringFunctionsOverloaded</name>
        <full_name>\Zend_Amf_Parse_Serializer::mbStringFunctionsOverloaded</full_name>
        <default></default>
        <docblock line="45">
          <description>str* functions overloaded using mbstring.func_overload</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="Zend_Amf\Parse_Amf0">
        <name>writeTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::writeTypeMarker()</full_name>
        <docblock line="64">
          <description>Determine type and serialize accordingly</description>
          <long-description>Checks to see if the type was declared and then either
auto negotiates the type or relies on the user defined markerType to
serialize the data into amf</long-description>
          <tag name="param" line="64" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="param" line="64" description="" type="mixed" variable="$markerType">
            <type>mixed</type>
          </tag>
          <tag name="param" line="64" description="" type="mixed" variable="$dataByVal">
            <type>mixed</type>
          </tag>
          <tag name="return" line="64" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type>\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
          <tag name="throws" line="64" description="for unrecognized types or data" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Amf_Parse_Serializer::writeTypeMarker()" refers="\Zend_Amf_Parse_Serializer::writeTypeMarker()" link="/classes/Zend_Amf_Parse_Serializer.html#method_writeTypeMarker"/>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataByVal</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="195" package="Zend_Amf\Parse_Amf0">
        <name>writeObjectReference</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::writeObjectReference()</full_name>
        <docblock line="195">
          <description>Check if the given object is in the reference table, write the reference if it exists,
otherwise add the object to the reference table</description>
          <long-description></long-description>
          <tag name="param" line="195" description="&lt;p&gt;object reference to check for reference&lt;/p&gt;" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="param" line="195" description="&lt;p&gt;AMF type of the object to write&lt;/p&gt;" type="string" variable="$markerType">
            <type>string</type>
          </tag>
          <tag name="param" line="195" description="&lt;p&gt;object to check for reference&lt;/p&gt;" type="mixed" variable="$objectByVal">
            <type>mixed</type>
          </tag>
          <tag name="return" line="195" description="true, if the reference was written, false otherwise" type="Boolean">
            <type>Boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectByVal</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="227" package="Zend_Amf\Parse_Amf0">
        <name>writeObject</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::writeObject()</full_name>
        <docblock line="227">
          <description>Write a PHP array with string or mixed keys.</description>
          <long-description></long-description>
          <tag name="param" line="227" description="" type="object" variable="$data">
            <type>object</type>
          </tag>
          <tag name="return" line="227" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type>\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="250" package="Zend_Amf\Parse_Amf0">
        <name>writeArray</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::writeArray()</full_name>
        <docblock line="250">
          <description>Write a standard numeric array to the output stream. If a mixed array
is encountered call writeTypeMarker with mixed array.</description>
          <long-description></long-description>
          <tag name="param" line="250" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="250" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type>\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="273" package="Zend_Amf\Parse_Amf0">
        <name>writeDate</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::writeDate()</full_name>
        <docblock line="273">
          <description>Convert the DateTime into an AMF Date</description>
          <long-description></long-description>
          <tag name="param" line="273" description="" type="\DateTime|\Zend_Date" variable="$data">
            <type>\DateTime</type>
            <type>\Zend_Date</type>
          </tag>
          <tag name="return" line="273" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type>\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>\DateTime|\Zend_Date</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="300" package="Zend_Amf\Parse_Amf0">
        <name>writeTypedObject</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::writeTypedObject()</full_name>
        <docblock line="300">
          <description>Write a class mapped object to the output stream.</description>
          <long-description></long-description>
          <tag name="param" line="300" description="" type="object" variable="$data">
            <type>object</type>
          </tag>
          <tag name="return" line="300" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type>\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="314" package="Zend_Amf\Parse_Amf0">
        <name>writeAmf3TypeMarker</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::writeAmf3TypeMarker()</full_name>
        <docblock line="314">
          <description>Encountered and AMF3 Type Marker use AMF3 serializer. Once AMF3 is
encountered it will not return to AMf0.</description>
          <long-description></long-description>
          <tag name="param" line="314" description="" type="string" variable="$data">
            <type>string</type>
          </tag>
          <tag name="return" line="314" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type>\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="329" package="Zend_Amf\Parse_Amf0">
        <name>getClassName</name>
        <full_name>\Zend_Amf_Parse_Amf0_Serializer::getClassName()</full_name>
        <docblock line="329">
          <description>Find if the class name is a class mapped name and return the
respective classname if it is.</description>
          <long-description></long-description>
          <tag name="param" line="329" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="329" description="$className" type="false|string">
            <type>false</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="Zend_Amf\Parse">
        <name>__construct</name>
        <full_name>\Zend_Amf_Parse_Serializer::__construct()</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\Zend_Amf_Parse_OutputStream" variable="$stream">
            <type>\Zend_Amf_Parse_OutputStream</type>
          </tag>
          <tag name="return" line="53" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_OutputStream</type>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Serializer</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Parse">
        <name>writeTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Serializer::writeTypeMarker()</full_name>
        <docblock line="67">
          <description>Find the PHP object type and convert it into an AMF object type</description>
          <long-description></long-description>
          <tag name="param" line="67" description="" type="mixed" variable="$content">
            <type>mixed</type>
          </tag>
          <tag name="param" line="67" description="" type="integer" variable="$markerType">
            <type>integer</type>
          </tag>
          <tag name="param" line="67" description="" type="mixed" variable="$contentByVal">
            <type>mixed</type>
          </tag>
          <tag name="return" line="67" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$content</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contentByVal</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Zend_Amf_Parse_Serializer</inherited_from>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Amf/Parse/Serializer.php" generated-path="Amf.Parse.Serializer.html" hash="89f6dade3493238bcebd57f7aec7c441" package="Zend_Amf\Parse">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Parse"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="31" package="Zend_Amf\Parse">
      <extends/>
      <name>Zend_Amf_Parse_Serializer</name>
      <full_name>\Zend_Amf_Parse_Serializer</full_name>
      <docblock line="31">
        <description>Base abstract class for all AMF serializers.</description>
        <long-description></long-description>
        <tag name="package" line="31" description="Zend_Amf"/>
        <tag name="subpackage" line="31" description="Parse"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="38" package="Zend_Amf\Parse">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Parse_Serializer::_stream</full_name>
        <default></default>
        <docblock line="38">
          <description>Reference to the current output stream being constructed</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="Zend_Amf\Parse">
        <name>$mbStringFunctionsOverloaded</name>
        <full_name>\Zend_Amf_Parse_Serializer::mbStringFunctionsOverloaded</full_name>
        <default></default>
        <docblock line="45">
          <description>str* functions overloaded using mbstring.func_overload</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="Zend_Amf\Parse">
        <name>__construct</name>
        <full_name>\Zend_Amf_Parse_Serializer::__construct()</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\Zend_Amf_Parse_OutputStream" variable="$stream">
            <type>\Zend_Amf_Parse_OutputStream</type>
          </tag>
          <tag name="return" line="53" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_OutputStream</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Parse">
        <name>writeTypeMarker</name>
        <full_name>\Zend_Amf_Parse_Serializer::writeTypeMarker()</full_name>
        <docblock line="67">
          <description>Find the PHP object type and convert it into an AMF object type</description>
          <long-description></long-description>
          <tag name="param" line="67" description="" type="mixed" variable="$content">
            <type>mixed</type>
          </tag>
          <tag name="param" line="67" description="" type="integer" variable="$markerType">
            <type>integer</type>
          </tag>
          <tag name="param" line="67" description="" type="mixed" variable="$contentByVal">
            <type>mixed</type>
          </tag>
          <tag name="return" line="67" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$content</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$markerType</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contentByVal</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <source>eJzdVUtv2zAMvudXcECQJkETdwV6adetj7VYgL7QdDvsYsgyHWuVJUOW46ZD//so+bE2fazn+WKLIj+S30fJn77kad4LxuMejOEnqhhODcuw0uaWLM54Njs+uZifNKubVBRQ6NJwhERIBLcso1/ILVgNNkVQWMHR/CtIwVEVSDZmnVtUqlhi7FAqYVOykzFn/JYtCEb5WA/ZZJzaOzt13jMfzmShgS2ZkCySDtXocpH6KKpWxpNKxDipMAJK57G/X5/tuvjU2nw3CJK2sek99TnlOguaEgMqeRIVvrRZAitdQixiUNqCQY5iicCA63wFOvEJ29YY8cUMQqnqmrRD0JFl1I6wb9S4CblERgiFo5wpwIwac9FEYoN+0JZJfEOFwMnNu7v6mnpElmEsmEW5mjYKHXBaLrRZAXhBva2lubGFh1ni7SRdu3XFTIE1ACEbsUgtwHH3OeQj2N7a2plsb33cqSflBnmqtNQLgUT2/BBmik9h2NBdVVVH9MjjtqzR825JnDNcNBN1Vu95sCWaQmjltvuzuE+2oNfO8ZFjlkWFNYzGkktWFJBoQyMk4fD8lFg0gklxTxAda/8bQ0FvjYC2q9C3Ec47Dnq/ew7Cc+eeMVxjggYVx/ZI89LQ2oIubV5aIFxkGUQo1ILmUNG65NYdbR/fwhwsmXG+5NWYAv/Ojbbo/KEf1lB7vfUSyD6GpFTcksgFaJJbahZTTFm4rFlUA0+dT9huv1RApLV8LX0WzT3KaZvossvzvKTjtlFt1vPkjGSCdYovPVvzmqx+3WkXYtCWRsFSi/hpdWVEAnetQxh2BA/fgT/yILWi/my4m3DyueEZ9lu/vWceb3BBYW09Id6JwhbDjSxymBLVxggGAxgKJcIFWrfxkjLk9WF/HzYab3K3o3+HDGB7VFf68EyOU0EHzA3n1bcrunPrP9Aqry9l4oxQrLuEKZN2N6w7+I/cXpEwE3duMCje0sCv7xIWDQ0zt2hu/mK8Eny0+sHke/XuDmsnfGWERZfl3OcbDlrczcclkDSqlHLzaVYnGP0vkch76P0BTx98uA==</source>
  </file>
  <file path="Amf/Constants.php" generated-path="Amf.Constants.html" hash="27f591080a8aa87a7603079496b03f31" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="true" abstract="false" namespace="" line="30" package="Zend_Amf">
      <extends/>
      <name>Zend_Amf_Constants</name>
      <full_name>\Zend_Amf_Constants</full_name>
      <docblock line="30">
        <description>The following constants are used throughout serialization and
deserialization to detect the AMF marker and encoding types.</description>
        <long-description></long-description>
        <tag name="package" line="30" description="Zend_Amf"/>
        <tag name="copyright" line="30" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="30" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <constant namespace="" line="32" package="Zend_Amf">
        <name>AMF0_NUMBER</name>
        <full_name>\Zend_Amf_Constants::AMF0_NUMBER</full_name>
        <value>0</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="33" package="Zend_Amf">
        <name>AMF0_BOOLEAN</name>
        <full_name>\Zend_Amf_Constants::AMF0_BOOLEAN</full_name>
        <value>1</value>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="34" package="Zend_Amf">
        <name>AMF0_STRING</name>
        <full_name>\Zend_Amf_Constants::AMF0_STRING</full_name>
        <value>2</value>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="35" package="Zend_Amf">
        <name>AMF0_OBJECT</name>
        <full_name>\Zend_Amf_Constants::AMF0_OBJECT</full_name>
        <value>3</value>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="36" package="Zend_Amf">
        <name>AMF0_MOVIECLIP</name>
        <full_name>\Zend_Amf_Constants::AMF0_MOVIECLIP</full_name>
        <value>4</value>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="37" package="Zend_Amf">
        <name>AMF0_NULL</name>
        <full_name>\Zend_Amf_Constants::AMF0_NULL</full_name>
        <value>5</value>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="38" package="Zend_Amf">
        <name>AMF0_UNDEFINED</name>
        <full_name>\Zend_Amf_Constants::AMF0_UNDEFINED</full_name>
        <value>6</value>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="39" package="Zend_Amf">
        <name>AMF0_REFERENCE</name>
        <full_name>\Zend_Amf_Constants::AMF0_REFERENCE</full_name>
        <value>7</value>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="40" package="Zend_Amf">
        <name>AMF0_MIXEDARRAY</name>
        <full_name>\Zend_Amf_Constants::AMF0_MIXEDARRAY</full_name>
        <value>8</value>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="41" package="Zend_Amf">
        <name>AMF0_OBJECTTERM</name>
        <full_name>\Zend_Amf_Constants::AMF0_OBJECTTERM</full_name>
        <value>9</value>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="42" package="Zend_Amf">
        <name>AMF0_ARRAY</name>
        <full_name>\Zend_Amf_Constants::AMF0_ARRAY</full_name>
        <value>10</value>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="43" package="Zend_Amf">
        <name>AMF0_DATE</name>
        <full_name>\Zend_Amf_Constants::AMF0_DATE</full_name>
        <value>11</value>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="44" package="Zend_Amf">
        <name>AMF0_LONGSTRING</name>
        <full_name>\Zend_Amf_Constants::AMF0_LONGSTRING</full_name>
        <value>12</value>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="45" package="Zend_Amf">
        <name>AMF0_UNSUPPORTED</name>
        <full_name>\Zend_Amf_Constants::AMF0_UNSUPPORTED</full_name>
        <value>14</value>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="46" package="Zend_Amf">
        <name>AMF0_XML</name>
        <full_name>\Zend_Amf_Constants::AMF0_XML</full_name>
        <value>15</value>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="47" package="Zend_Amf">
        <name>AMF0_TYPEDOBJECT</name>
        <full_name>\Zend_Amf_Constants::AMF0_TYPEDOBJECT</full_name>
        <value>16</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="48" package="Zend_Amf">
        <name>AMF0_AMF3</name>
        <full_name>\Zend_Amf_Constants::AMF0_AMF3</full_name>
        <value>17</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="49" package="Zend_Amf">
        <name>AMF0_OBJECT_ENCODING</name>
        <full_name>\Zend_Amf_Constants::AMF0_OBJECT_ENCODING</full_name>
        <value>0</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="51" package="Zend_Amf">
        <name>AMF3_UNDEFINED</name>
        <full_name>\Zend_Amf_Constants::AMF3_UNDEFINED</full_name>
        <value>0</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="52" package="Zend_Amf">
        <name>AMF3_NULL</name>
        <full_name>\Zend_Amf_Constants::AMF3_NULL</full_name>
        <value>1</value>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="53" package="Zend_Amf">
        <name>AMF3_BOOLEAN_FALSE</name>
        <full_name>\Zend_Amf_Constants::AMF3_BOOLEAN_FALSE</full_name>
        <value>2</value>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="54" package="Zend_Amf">
        <name>AMF3_BOOLEAN_TRUE</name>
        <full_name>\Zend_Amf_Constants::AMF3_BOOLEAN_TRUE</full_name>
        <value>3</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="55" package="Zend_Amf">
        <name>AMF3_INTEGER</name>
        <full_name>\Zend_Amf_Constants::AMF3_INTEGER</full_name>
        <value>4</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="56" package="Zend_Amf">
        <name>AMF3_NUMBER</name>
        <full_name>\Zend_Amf_Constants::AMF3_NUMBER</full_name>
        <value>5</value>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="57" package="Zend_Amf">
        <name>AMF3_STRING</name>
        <full_name>\Zend_Amf_Constants::AMF3_STRING</full_name>
        <value>6</value>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="58" package="Zend_Amf">
        <name>AMF3_XML</name>
        <full_name>\Zend_Amf_Constants::AMF3_XML</full_name>
        <value>7</value>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="59" package="Zend_Amf">
        <name>AMF3_DATE</name>
        <full_name>\Zend_Amf_Constants::AMF3_DATE</full_name>
        <value>8</value>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="60" package="Zend_Amf">
        <name>AMF3_ARRAY</name>
        <full_name>\Zend_Amf_Constants::AMF3_ARRAY</full_name>
        <value>9</value>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="61" package="Zend_Amf">
        <name>AMF3_OBJECT</name>
        <full_name>\Zend_Amf_Constants::AMF3_OBJECT</full_name>
        <value>10</value>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="62" package="Zend_Amf">
        <name>AMF3_XMLSTRING</name>
        <full_name>\Zend_Amf_Constants::AMF3_XMLSTRING</full_name>
        <value>11</value>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="63" package="Zend_Amf">
        <name>AMF3_BYTEARRAY</name>
        <full_name>\Zend_Amf_Constants::AMF3_BYTEARRAY</full_name>
        <value>12</value>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="64" package="Zend_Amf">
        <name>AMF3_OBJECT_ENCODING</name>
        <full_name>\Zend_Amf_Constants::AMF3_OBJECT_ENCODING</full_name>
        <value>3</value>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="67" package="Zend_Amf">
        <name>ET_PROPLIST</name>
        <full_name>\Zend_Amf_Constants::ET_PROPLIST</full_name>
        <value>0</value>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="68" package="Zend_Amf">
        <name>ET_EXTERNAL</name>
        <full_name>\Zend_Amf_Constants::ET_EXTERNAL</full_name>
        <value>1</value>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="69" package="Zend_Amf">
        <name>ET_DYNAMIC</name>
        <full_name>\Zend_Amf_Constants::ET_DYNAMIC</full_name>
        <value>2</value>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="70" package="Zend_Amf">
        <name>ET_PROXY</name>
        <full_name>\Zend_Amf_Constants::ET_PROXY</full_name>
        <value>3</value>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="72" package="Zend_Amf">
        <name>FMS_OBJECT_ENCODING</name>
        <full_name>\Zend_Amf_Constants::FMS_OBJECT_ENCODING</full_name>
        <value>1</value>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="78" package="Zend_Amf">
        <name>UNKNOWN_CONTENT_LENGTH</name>
        <full_name>\Zend_Amf_Constants::UNKNOWN_CONTENT_LENGTH</full_name>
        <value>-1</value>
        <docblock line="78">
          <description>Special content length value that indicates "unknown" content length
per AMF Specification</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="79" package="Zend_Amf">
        <name>URL_APPEND_HEADER</name>
        <full_name>\Zend_Amf_Constants::URL_APPEND_HEADER</full_name>
        <value>'AppendToGatewayUrl'</value>
        <docblock line="79">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="80" package="Zend_Amf">
        <name>RESULT_METHOD</name>
        <full_name>\Zend_Amf_Constants::RESULT_METHOD</full_name>
        <value>'/onResult'</value>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="81" package="Zend_Amf">
        <name>STATUS_METHOD</name>
        <full_name>\Zend_Amf_Constants::STATUS_METHOD</full_name>
        <value>'/onStatus'</value>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="82" package="Zend_Amf">
        <name>CREDENTIALS_HEADER</name>
        <full_name>\Zend_Amf_Constants::CREDENTIALS_HEADER</full_name>
        <value>'Credentials'</value>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="83" package="Zend_Amf">
        <name>PERSISTENT_HEADER</name>
        <full_name>\Zend_Amf_Constants::PERSISTENT_HEADER</full_name>
        <value>'RequestPersistentHeader'</value>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="84" package="Zend_Amf">
        <name>DESCRIBE_HEADER</name>
        <full_name>\Zend_Amf_Constants::DESCRIBE_HEADER</full_name>
        <value>'DescribeService'</value>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="86" package="Zend_Amf">
        <name>GUEST_ROLE</name>
        <full_name>\Zend_Amf_Constants::GUEST_ROLE</full_name>
        <value>'anonymous'</value>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
    </class>
    <source>eJzVll1zozYUhu/9KzQ7O5PdTGM7oduP3e50McgOLQYP4DbpDSODbLPBkgsirLfT/94jYRKD4k5v64tMEM85OufVK6Sfft5v94PR5eUAXaI/KEvRtCA7WvPiAUbkoOtY2Avx8SnaZiUqeVUkFK2znCL5WK0+00QgwZHYUsRojSahjfIsoaykMEaExFYVS3Oayix1JrYwDoN7kjyQDaRhKlalPM44FF/EUNKOCid5yRF5JFlOVrnMWvBqs1VRUG2eXtVZSq9qukIwncq9DNz3Mn4rxP79aLRuGxt+hT6HCd+NjiWOoOSrValKc9bowCuUZiliXKCCJjR7pIighO8PiK/VhG1rBPQiBUUVa2riMgNfCQLtZOJfavwG7XNKIEMpJScM0R00JqNBxGP2T22ZoDeqKUoAU7is71hPttvRNCOC5ofhcYU+JfC44cUBIbWgaqyV+TgWm7t1w0KSIttsBULW079vkrfoZjx+d3Uzvn7XmCKiyZbxnG8yCrqGJnJYMkRvjsrWdf2k6VuVtxUIfv9ZfQkj72get3mnkj3Sosw4k69fO+lrGBsNWstG0jQ8z3mdsQ1owkpBmCibVSlp2q4BrwSIV2Qkz74SIbORRpqUdodB/5QKZWdIbc6naEeKB1qotaYs4amcSBz2tHxS/H+s7miwzhjJUZKTsnyqPrZaIQd/DWSgElaqMY695XyCA3Ty+4jGX8bjD31w4vsuNr0+eK2BYRQ43kzLeKOB/uQXbEUaaGjg3P/NwZbrLLrgtxroLV0XIS3jOw1cejaeOh62u+B3GhjgKQ6wZ+Eu+L1eo3OHbTMIzPsO+MOZriMczDvgjxrYSfYMEg20zQgjHVxpoOt7s+7qKDB5QZ5wuVj4QfQkkAKpBt7Ne3o34FoDo/sFtjsLLsFr3Wbwx9AzXus2a5LFsDa+3XTUGrdLGucWuz+3cc4+/bmNdi/EU9MN8TPYt/gzGAVLfJKxb3EjdrwIzzr78EWLG+f2a9/ixrlt2Le4cW4N+xY3zvmsb3HjnHP7FjfOfQHMl2rs9aPAiS74fYS70yvQOjO1Zh/jaJ/RCPnNNag9JEo4mAoVC1eC5oIkT42TvDiKF4G/cJ1Qb6ljNgDxHXwBPNPVwOseaN975tyxdDVvPmhT33VF77XUkNN5+ELvT3M3zcvDWP4uUbinSSYPFM4EZQLllG3gsvdI8qq9CrI0k3eUEr2q2APjNXvVo9tce6r0a3KuZRCc0MeXo5MSl96vnv+7F1s+bAovil3szaJbKPGqIw7cB2NzscCeHd9i0243xUd0Ye73cPJFfAZl1eSwLPKL08AAh0s3iuc4uvWfvwkycMRZQMsqFx0+jMxoGZ7hQ0FEVXZ4K8A21O3Ax+G0MuCtgqagCwjajVjgIATXyGZ7rQT0z4qWYiHvTKXU9JaSlBadaBuHVuBMcCdWRdu0TIpsRUNaPMId4aLjhNkSh1EcwAeq55kLwjg77Lhq6+/BPw3+XJo=</source>
  </file>
  <file path="Amf/Exception.php" generated-path="Amf.Exception.html" hash="0542c6620ce76321253f4aec371b143f" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Amf">
      <extends>\Zend_Exception</extends>
      <name>Zend_Amf_Exception</name>
      <full_name>\Zend_Amf_Exception</full_name>
      <docblock line="32">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="32" description="Zend_Amf"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Exception" refers="\Zend_Exception" link="/classes/Zend_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="32" code="PPC:ERR-50005">No summary for class \Zend_Amf_Exception</error>
    </parse_markers>
    <source>eJzVUrFu2zAQ3fUVNwRIYtSSGyBLGqBOUxcQYGSo06VLQJEniQ1FqiRl2S367zlSlAN0KLpGk/j47t27x7v92Ld9ViwWGSzgO2oBXyzrcDT2mZAAbsv7zcNuk06PrXTgzGA5Qi0VQjgO1Q/kHrwB3yJoHOHT7jMoyVE7JIz5QKsGLRSKoDJK3xJOYM/4M2tIRsfaKJk65v7g88AuYzlTzgDbM6lYpYKqNUPTxipyq8RylAKXI1ZA7aL2t6/bm1Dfet/fFEU9D5b/ojlzbroiWSzI8rJy0VpZw9EMIKQAbTxY5Cj3CAy46Y9g6thwHo1RXswiDHryZIKCqTyjcaT/h8d30CtkpOBC5EwDdjRYqKYQk/p6tkl5w4jAiRbpwV/yI7sOhWQe1TFPL7TmdGyMPQLEB43YHHPCnu66euKSiJVN6wHuT78X/BKuVqvr5dXq/fW0FI/IW22UaSRSrrs7KDXP4SIlO47jKdPLqDsHRN9/px/I8JCWZzvdRbE9WieNDtdnpTgjrMjmlV07xGmkzYFj74kX7y3+HKTFJ6NpUc8DoTgRclr58w+vEm84nCLjijl38v2aAuDBE+j+Dud39id7Afy2R1w=</source>
  </file>
  <file path="Amf/Server/Exception.php" generated-path="Amf.Server.Exception.html" hash="28f6f430f4b0dcc4656c62499a5c5cca" package="Zend_Amf\Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="35" package="Zend_Amf\Server">
      <extends>\Zend_Amf_Exception</extends>
      <name>Zend_Amf_Server_Exception</name>
      <full_name>\Zend_Amf_Server_Exception</full_name>
      <docblock line="35">
        <description>Zend_Amf_Server_Exception</description>
        <long-description></long-description>
        <tag name="category" line="35" description="Zend"/>
        <tag name="package" line="35" description="Zend_Amf"/>
        <tag name="subpackage" line="35" description="Server"/>
        <tag name="copyright" line="35" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="35" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Exception" refers="\Zend_Amf_Exception" link="/classes/Zend_Amf_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <source>eJzlU8Fu1DAQvecr5lCp7aqbLJV6KUi0lEWKtOqBLRcuK8eeJKaOHWxnswvi3xk7ztIDIO7kFL958/zm2X7ztm/7rFgsMljAZ9QCPljW4WjsMyEB3JQP68ftOq2eWunAmcFyhFoqhLAcqi/IPXgDvkXQOMK77XtQkqN2SBjzgVYNWigUQWWUviWcwJ7xZ9aQjI69UTLtmPuDzwO7jO1MOQNsz6RilQqq1gxNG7vIrRLLUQpcjlgBbRe1P33c3Ib+1vv+tijqebD8G82Zc9MVyWJBlpeVi9bKGo5mACEFaOPBIke5R2DATX8EU8cN59EY5cUswqAnTyYomMozGkf6v3i8gl4hIwUXImcasKPBQjeFmNTvZpuUN4wInGiRHvwlP7LrUEjmUR3zdEJ3nJaNsUeAeKARm2NO2O6+qyNORzeXtmj3aCcFkrayaT3Aw+n3gl/C9Wp1s7xevbqZrsoT8lYbZRqJlPb2HkrNc7hIeY/jeEr6MurOsdH3z2cSyPCYrtRmqkUxMuuk0aF8VoozwoosXOTTgLv1gWPvA4dKFr8O0uLOaLq554FTEKc4cXJ6B+evs5dPIYpMsfzS+q9SLjKumHN/TgPw4KnmfhN69j37kf0EOcZr1Q==</source>
  </file>
  <file path="Amf/Value/MessageBody.php" generated-path="Amf.Value.MessageBody.html" hash="8b61f8ee1c39105e5c19ee0c3df1eedf" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="39" package="Zend_Amf\Value">
      <extends/>
      <name>Zend_Amf_Value_MessageBody</name>
      <full_name>\Zend_Amf_Value_MessageBody</full_name>
      <docblock line="39">
        <description>An AMF Message contains information about the actual individual
transaction that is to be performed. It specifies the remote
operation that is to be performed; a local (client) operation
to be invoked upon success; and, the data to be used in the
operation.</description>
        <long-description>&lt;p/&gt;
This Message structure defines how a local client would
invoke a method/operation on a remote server. Additionally,
the response from the Server is structured identically.</long-description>
        <tag name="package" line="39" description="Zend_Amf"/>
        <tag name="subpackage" line="39" description="Value"/>
        <tag name="copyright" line="39" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="39" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="46" package="Zend_Amf\Value">
        <name>$_targetUri</name>
        <full_name>\Zend_Amf_Value_MessageBody::_targetUri</full_name>
        <default>""</default>
        <docblock line="46">
          <description>A string describing which operation, function, or method
is to be remotley invoked.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Amf\Value">
        <name>$_responseUri</name>
        <full_name>\Zend_Amf_Value_MessageBody::_responseUri</full_name>
        <default>""</default>
        <docblock line="64">
          <description>Universal Resource Identifier that uniquely targets the originator's
Object that should receive the server's response. The server will
use this path specification to target the "OnResult()" or "onStatus()"
handlers within the client. For Flash, it specifies an ActionScript
Object path only. The NetResponse object pointed to by the Response Uri
contains the connection state information. Passing/specifying this
provides a convenient mechanism for the client/server to share access
to an object that is managing the state of the shared connection.</description>
          <long-description>Since the server will use this field in the event of an error,
this field is required even if a successful server request would
not be expected to return a value to the client.</long-description>
          <tag name="var" line="64" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="79" package="Zend_Amf\Value">
        <name>$_data</name>
        <full_name>\Zend_Amf_Value_MessageBody::_data</full_name>
        <default></default>
        <docblock line="79">
          <description>Contains the actual data associated with the operation. It contains
the client's parameter data that is passed to the server's operation/method.</description>
          <long-description>When serializing a root level data type or a parameter list array, no
name field is included. That is, the data is anonomously represented
as "Type Marker"/"Value" pairs. When serializing member data, the data is
represented as a series of "Name"/"Type"/"Value" combinations.

For server generated responses, it may contain any ActionScript
data/objects that the server was expected to provide.</long-description>
          <tag name="var" line="79" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="89" package="Zend_Amf\Value">
        <name>__construct</name>
        <full_name>\Zend_Amf_Value_MessageBody::__construct()</full_name>
        <docblock line="89">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="89" description="" type="string" variable="$targetUri">
            <type>string</type>
          </tag>
          <tag name="param" line="89" description="" type="string" variable="$responseUri">
            <type>string</type>
          </tag>
          <tag name="param" line="89" description="" type="string" variable="$data">
            <type>string</type>
          </tag>
          <tag name="return" line="89" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targetUri</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$responseUri</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="Zend_Amf\Value">
        <name>getTargetUri</name>
        <full_name>\Zend_Amf_Value_MessageBody::getTargetUri()</full_name>
        <docblock line="101">
          <description>Retrieve target Uri</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="112" package="Zend_Amf\Value">
        <name>setTargetUri</name>
        <full_name>\Zend_Amf_Value_MessageBody::setTargetUri()</full_name>
        <docblock line="112">
          <description>Set target Uri</description>
          <long-description></long-description>
          <tag name="param" line="112" description="" type="string" variable="$targetUri">
            <type>string</type>
          </tag>
          <tag name="return" line="112" description="" type="\Zend_Amf_Value_MessageBody">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targetUri</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="126" package="Zend_Amf\Value">
        <name>getResponseUri</name>
        <full_name>\Zend_Amf_Value_MessageBody::getResponseUri()</full_name>
        <docblock line="126">
          <description>Get target Uri</description>
          <long-description></long-description>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="Zend_Amf\Value">
        <name>setResponseUri</name>
        <full_name>\Zend_Amf_Value_MessageBody::setResponseUri()</full_name>
        <docblock line="137">
          <description>Set response Uri</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$responseUri">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="\Zend_Amf_Value_MessageBody">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$responseUri</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="Zend_Amf\Value">
        <name>getData</name>
        <full_name>\Zend_Amf_Value_MessageBody::getData()</full_name>
        <docblock line="151">
          <description>Retrieve response data</description>
          <long-description></long-description>
          <tag name="return" line="151" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="162" package="Zend_Amf\Value">
        <name>setData</name>
        <full_name>\Zend_Amf_Value_MessageBody::setData()</full_name>
        <docblock line="162">
          <description>Set response data</description>
          <long-description></long-description>
          <tag name="param" line="162" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="162" description="" type="\Zend_Amf_Value_MessageBody">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="Zend_Amf\Value">
        <name>setReplyMethod</name>
        <full_name>\Zend_Amf_Value_MessageBody::setReplyMethod()</full_name>
        <docblock line="174">
          <description>Set reply method</description>
          <long-description></long-description>
          <tag name="param" line="174" description="" type="string" variable="$methodName">
            <type>string</type>
          </tag>
          <tag name="return" line="174" description="" type="\Zend_Amf_Value_MessageBody">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$methodName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzdV9tuGzcQfddXsIoBSYG8mwbISxwncS4uDMROYTkt0KI1KC6lZb1LbkiuFKXIv3eGl93VNU7ap+rFEi8zZ+acmaGfvajyqpc+fNgjD8lvXGbkXNOSL5W+gxVcfHfx+u3V5G34dZMLQ4yqNeNkJgpO8Gc9/YszS6wiNudE8iV5NXlDCsG4NBzWqMVj01pmBc/QylLYHNZhsaLsjs7BjHR3ncngMbGfbIKnL9x1WhhF6IKKgk4LtKpVPc/dLUBbZMdLkfHjJZ8ScOdsf7h+9xTv59ZWT9N0FgNLPkOcCVNlGiCmAPl4ahy0ixlZqZpkIiNSWaI542LBCSVMVSuiZs5hDI1CvqjmpJYek0ILamophCPsAYxjUhWcggWDKaeS8BICw9uQxGD9ZYQJ+SZLThgcc8cRX8AjypJnglperJLA0EsGP+dKrwhxhLq1mOawdntWztw6UBe3fqFFzb0BsKzFPLeEvG6+DtmIPH706Mnx40c/PvFKueEsl6pQc8Eh2ZMzciFZQoYh3cvlskn0yNmNWYPPvSnBw+QqKOqd33PGFlwboSRuH11kR7CW9qKOzyQ5uzwnl9wYjIwpiYwYENlM6ZJavEenqraOGcpsTQvYzMRCZPDV0aCpNLCDR6OAgZopJxXXaIVnCQrTVJyJGSYATWleKuvwKThGD90+AQoLxcDxkBWCSztq7wQdTLEsFuqOZ6SuwJKpGYOQTlB2Y+cvo5aGk7WBY76K1vy7CnpWpc+b6o1pMVbXEDrIN+MzISGEXC0bVB4UyLYunIQ8Etguuc1VlrYBYjJD5KBPDcQk5CzLBG7SoliNXTguOwbCAAHMNIgaVybuuOshEQwEkYFjwfBqo+n/m37THiuoMU0wtw79baDmlcpWvb97eNUpGj+gakySkHOgyzAtpvh1mQuWt2SPyayWzH9TOlAV7zcadFwVfBXVlcQTLxdUBydhKXV/Kw3cMgvcHN1aqufcftCCnJJ+/6S3ifKDFFiaoKBrHubEhSMUikT7Yqil+FhDxyLeli8dBTQJSa3SAxNtvQ9zBS+ZHJXY9GO84sU2MI2wEhB4XIYZUxTRUO3GkBs3MHhCzbJQnyrgcDb77yXgrgs7HPUxhX0lJ5ba2sDvaC2nOMi0cWMsDC5fLgk5hzvnQG0+xgHQdgfo3WeOmAlQV9mNCB0sJUHwLoIrbq9jrahwQgmJBCCDK+exOQFcRHNNp3OQlJTcdzADIfBu+0vIzyA/4Dn1EFcoJsxQtASUQzNE4GhnwaXrBiVUDJXClAQsdeJOQ84BnclxIFLXqaIxWIb4VYdNoKKkks69Wx4AhunqTGQd/FGg0d5ESNaVgOO6JRkSXsReSPgCgYNlHLJaKz1uUHXOooY+1gLd4gUi4Hzst7O6iH7wEDdNV/R28JkAVcU/Vb5GIFrNoZVhW1xgWceHUdDIRjD3Kboo8P1l97rLfJhobjoAzYrhCyGLry7eGQ44wqJo2rxEqAMsGGxxFmL3syaQV4FZH+paITaGU996ms7ya87x8aIFLcRnJB0mhoK8FZDtANSuKuwCsNP6LAQkm2pNV2NIc5Nw2G2JAy0UdYbj+MaD64xGfDZKJVWpagP9RvMKMsmxkKItakj/Bj1fUn3HdT/tu07cBxBCm2QbeMnLacjGmqNosOMDjVN3GeoIFNi/AuDgAf21jmBoTLHxQdbMpjawmwTpzbnE3PKs6XbGtZiSriKDEOtqZ5dBiKkvP+Mp7NYOoOxqN1T+98gU/eyUpp/uSm/adEyTONeOmtmy70CnDvYdQQzNXqjDhRLZOuh6CnO6GZbk9pZFkMMWxXjN4djbHjkDfjjj5wjbyPFzw+1NvNcxMTrZcfC6NTrseth5+A34HHrPfvvLVoKvOcTOcSj6OdZmZzMRu/jbSMW8G8hmsMFMQNe+BfYhm+BU3Qvqq+wHdwceSYci2UfJRkzQ6oeyhvlxenraATHqHPGMdB4+g0FL1ZdN0taeSEMf3ahz/2RnOvel8KeDKfwmXru6+wqzHVUe4lZvv0G+pXT/Nb97K+kgx92DmyyvT9rDPK+fPdrK2X0pbuq3SWeniX0f1a5rfIVj363vQe4uNIHdUnzCzr+r6X4/q52Wt7vZOuiY8jaE++baB1bBY2Dtn6N9qvWHcG7/l6IF95fO8LDjYJdmf4C3xPwWnuwsHw4e/Pl7+uKPB4NxF9Zou09tNyEN0ZTDrZ0xGaSDEUnwz3372fZa0oVzmIwvvX8Axc9Ptw==</source>
  </file>
  <file path="Amf/Value/Messaging/AbstractMessage.php" generated-path="Amf.Value.Messaging.AbstractMessage.html" hash="3091614466f82c843414c7f780e2713f" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Amf\Value">
      <extends/>
      <name>Zend_Amf_Value_Messaging_AbstractMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_AbstractMessage</full_name>
      <docblock line="32">
        <description>This is the default Implementation of Message, which provides
a convenient base for behavior and association of common endpoints</description>
        <long-description></long-description>
        <tag name="package" line="32" description="Zend_Amf"/>
        <tag name="subpackage" line="32" description="Value"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="37" package="Zend_Amf\Value">
        <name>$clientId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::clientId</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Client identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$destination</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::destination</full_name>
        <default></default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Destination&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="47" package="Zend_Amf\Value">
        <name>$messageId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Message identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="52" package="Zend_Amf\Value">
        <name>$timestamp</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timestamp</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Message timestamp&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Zend_Amf\Value">
        <name>$timeToLive</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timeToLive</full_name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Message TTL&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>$headers</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::headers</full_name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;Message headers&lt;/p&gt;" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Value">
        <name>$body</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::body</full_name>
        <default></default>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="67" description="&lt;p&gt;Message body&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Amf\Value">
        <name>generateId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::generateId()</full_name>
        <docblock line="78">
          <description>generate a unique id</description>
          <long-description>Format is: ########-####-####-####-############
Where # is an uppercase letter or number
example: 6D9DC7EC-A273-83A9-ABE3-00005FD752D6</long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVVFv2zYQftevOKApYgeWLTtVkqYDFtdOAANeHxZ3C/piUNTJ4iqRKkVZ9Yb+9x1pSWtSO83zCFum7o4fv/uOPP/ya5EW3ujszIMz+IQyhjvNcqyV/kwWa1wuZrcf7m+bt1UqSihVpTlCIjIE+1pFfyE3YBSYFEFiDe/v55AJjrJEsjFjw6JKxhnGFqUWJiU7GQvGP7MNwUi31kE2Ow7NVzO00Qu3nGWlArZlImNRZlG1qjapW0Vss9ivRYx+jRHQdg774+/La7s+Naa4Ho2SNrHh35TnkKt81FAcEWU/Kh21RQI7VUEsYpDKgEaOYovAgKtiBypxG7apMdKLaYRK7jkpi6AiwygdYZ7hOIAiQ0YIpZWcScCcErOrScQG/aalSXpDjcApzIVbfg0fkecYC2Yw2w2bCt1wet0ovQNwBXW2VubGtp7mibNT6VrXHyyrcA9AyFpsUgMw66Y93odJEIT+JBiH+5OyQp5KlamNQBL7fgoLyYfQa+Su67oTuu9wW9VovLgkNhg+NCdqufc5sC3qUihp3SeL+IRsI689x+6Q0sfqHmPCqszAIifFc5SGGbuMCvkbliUlPoA6FTyFQqstVae0AFZduUUpKB4iW6dEaYgwZVtBE1f2slRcdGBEPacZZVEoIU3ZFuP/JvzI4xml3iWzduzXey2F3KynUWk046ZR1/vHs0CuMHbYyjENFEPBMMucwiS7NCIRqJugkfstqohIwQl3UYv4nfcc1hxLI6QryEGU+D//80AN85+xyvdhR2nRKeigjKBow/LiIFLnfQHSarU8irFSS2pVR0DUvke3OCmymG7QQazG9zKVIhXvDqJYx48QG5SoqUHRFauk+FJZmRtfG3KndO7+Ma7hVTP8A492tMv+TJE68Sv3VyGhKgrU3N7cDI1Byl+DrPKoKybgV2ZbwjVczN/OZ5e3M386uTz3r86nb/3p+9tzP6AR3s0vw8n84gnFG42m0rLR4lD6SSW56w1twou413cB+wthRwtSEIhJep3djtPXwdWD/zp40z0mD/ZLk/Hk4XTwKDg3a009qdc/bA4GcBGG5+ETdyRkjLxHnYjSWGssMsbxMQs7WnrEaHwRnQ5+hO0P4DQYBwH5xuMBvOk/wnjRrt9tcvVkj0nY7kD2kN77x9O0sUek6az9d276zfvm/QunN5VF</source>
  </file>
  <file path="Amf/Value/Messaging/RemotingMessage.php" generated-path="Amf.Value.Messaging.RemotingMessage.html" hash="2f3187d10981b2914c3d3f3742558744" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Amf\Value">
      <extends>\Zend_Amf_Value_Messaging_AbstractMessage</extends>
      <name>Zend_Amf_Value_Messaging_RemotingMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_RemotingMessage</full_name>
      <docblock line="37">
        <description>This type of message contains information needed to perform
a Remoting invocation.</description>
        <long-description>Corresponds to flex.messaging.messages.RemotingMessage</long-description>
        <tag name="package" line="37" description="Zend_Amf"/>
        <tag name="subpackage" line="37" description="Value"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Value_Messaging_AbstractMessage" refers="\Zend_Amf_Value_Messaging_AbstractMessage" link="/classes/Zend_Amf_Value_Messaging_AbstractMessage.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="44" package="Zend_Amf\Value">
        <name>$source</name>
        <full_name>\Zend_Amf_Value_Messaging_RemotingMessage::source</full_name>
        <default></default>
        <docblock line="44">
          <description>The name of the service to be called including package name</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="String" variable="">
            <type>String</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="Zend_Amf\Value">
        <name>$operation</name>
        <full_name>\Zend_Amf_Value_Messaging_RemotingMessage::operation</full_name>
        <default></default>
        <docblock line="50">
          <description>The name of the method to be called</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="56" package="Zend_Amf\Value">
        <name>$parameters</name>
        <full_name>\Zend_Amf_Value_Messaging_RemotingMessage::parameters</full_name>
        <default></default>
        <docblock line="56">
          <description>The arguments to call the mathod with</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="Zend_Amf\Value">
        <name>$clientId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::clientId</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Client identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$destination</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::destination</full_name>
        <default></default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Destination&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="47" package="Zend_Amf\Value">
        <name>$messageId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Message identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="52" package="Zend_Amf\Value">
        <name>$timestamp</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timestamp</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Message timestamp&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Zend_Amf\Value">
        <name>$timeToLive</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timeToLive</full_name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Message TTL&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>$headers</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::headers</full_name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;Message headers&lt;/p&gt;" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Value">
        <name>$body</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::body</full_name>
        <default></default>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="67" description="&lt;p&gt;Message body&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="Zend_Amf\Value">
        <name>__construct</name>
        <full_name>\Zend_Amf_Value_Messaging_RemotingMessage::__construct()</full_name>
        <docblock line="63">
          <description>Create a new Remoting Message</description>
          <long-description></long-description>
          <tag name="return" line="63" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Amf\Value">
        <name>generateId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::generateId()</full_name>
        <docblock line="78">
          <description>generate a unique id</description>
          <long-description>Format is: ########-####-####-####-############
Where # is an uppercase letter or number
example: 6D9DC7EC-A273-83A9-ABE3-00005FD752D6</long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Value_Messaging_AbstractMessage</inherited_from>
      </method>
    </class>
    <source>eJzdVU1v2zgQvetXzCFA7KCWvAV6adptUrcFDKQ5NGkPezEociyxpUgtSVlxi/73zlCSsUnc3ZxXF1vDee/NJ/XqTVu3WXF2lsEZ/IVWwQcvGuyd/0YWNl6tV++vb96Pb7e1DhBc5yXCVhsEfu3KrygjRAexRrDYw9ubd2C0RBuQbCKyW9lZZVAxS69jTXYytkJ+ExXR2IRNlKNiHu9izt7rBBcmOBA7oY0oDbN611V1QlG0Ri16rXDRYwkkl7g/f7p6yfg6xvZlUWynxPLvlGcuXVOMIRYU8qIMKbT1FvauA6UVWBfBo0S9QxAgXbsHt02CU2qC6iU8QmeHmBwzuDIKSkfHf4nxGbQGBTEELrmwgA0lxmgq4sh+MYVJ9YYeQZJbcuf4xnh006DSIqLZ52OHLiS9Vs7vAVJDk20q82jbXDbbZKfWTUdfhOlwICBmr6s6AqwOf2dyDs+XyxeL58s/XgyTcouyts64SiMV++YS1lbmMBvL3ff9odDzxDtVjZ4nt4Sd4XqcqKvhLJHt0AftLB+frNUJ2YqM5/iQ3yYltPmIIYhK22pzWYbohYyDBRng8e9Oe9w4S+N8ysiCkEVCFgdk8QCZ08qcnmfT1qSViPsWeTqakVw6y1MQaLC3zjcicqwWUaHiFrfo2cxwAZ+wcZF0yHfnZHKdmrly3mNonVWBYVuDd3kzxTX+w5BPDGOA0yT837peZNKIEH7f4gd1ALyLyKV76kxkP7KMpVNn+eHu0o1G8U6rH9DvKCDuRsk7aehKo8ZJ0ylu4VRXhkwUFzvh4SZ6Oh9NRfptu5LyhpPhOj3/T+kGY+3UPeV7EuH3Eo4GLg3WcRXhq65BG9OQMfOgJ5IeX9b3dIT3Yn9UphXc2kir+Vhn5ZEuJhp3/j4cRv4wscnpIOMxdt7Czml1TGjbWZk2arOhRaO8Oxln8+TxY/Dna4E/Aos/pdGU2TrN1OvJWKHlguBazebnDxEKA8U2rOxrsJ0xj1zGzUusTyONmjBRNG1C8Ntsnp8ul6dHPW/dFX91yHP56LxGoajCMCTE1QxRrXgxjsiWTu0n0z9z+Zn9zH4Bgbx8sw==</source>
  </file>
  <file path="Amf/Value/Messaging/AsyncMessage.php" generated-path="Amf.Value.Messaging.AsyncMessage.html" hash="97f7e4e075c6f63fc7f2e171df19ea3a" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="36" package="Zend_Amf\Value">
      <extends>\Zend_Amf_Value_Messaging_AbstractMessage</extends>
      <name>Zend_Amf_Value_Messaging_AsyncMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_AsyncMessage</full_name>
      <docblock line="36">
        <description>This type of message contains information necessary to perform
point-to-point or publish-subscribe messaging.</description>
        <long-description></long-description>
        <tag name="package" line="36" description="Zend_Amf"/>
        <tag name="subpackage" line="36" description="Value"/>
        <tag name="copyright" line="36" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="36" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Value_Messaging_AbstractMessage" refers="\Zend_Amf_Value_Messaging_AbstractMessage" link="/classes/Zend_Amf_Value_Messaging_AbstractMessage.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$correlationId</name>
        <full_name>\Zend_Amf_Value_Messaging_AsyncMessage::correlationId</full_name>
        <default></default>
        <docblock line="42">
          <description>The message id to be responded to.</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="String" variable="">
            <type>String</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="Zend_Amf\Value">
        <name>$clientId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::clientId</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Client identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$destination</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::destination</full_name>
        <default></default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Destination&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="47" package="Zend_Amf\Value">
        <name>$messageId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Message identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="52" package="Zend_Amf\Value">
        <name>$timestamp</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timestamp</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Message timestamp&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Zend_Amf\Value">
        <name>$timeToLive</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timeToLive</full_name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Message TTL&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>$headers</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::headers</full_name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;Message headers&lt;/p&gt;" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Value">
        <name>$body</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::body</full_name>
        <default></default>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="67" description="&lt;p&gt;Message body&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Amf\Value">
        <name>generateId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::generateId()</full_name>
        <docblock line="78">
          <description>generate a unique id</description>
          <long-description>Format is: ########-####-####-####-############
Where # is an uppercase letter or number
example: 6D9DC7EC-A273-83A9-ABE3-00005FD752D6</long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Value_Messaging_AbstractMessage</inherited_from>
      </method>
    </class>
    <source>eJzdU7Fu2zAQ3fUVNxhIYlSSGyBLUqB20xQw4Gao0w5dDIo6S2woUiUpK27Rf+8dLQloB6NzuUh8vHt8d+/45m1bt0k+nycwh69oSvjgRIO9dc+EMLhZ3z88bh+G3VOtPHjbOYmwVxqBt13xDWWAYCHUCAZ7eLd9D1pJNB4JE4HDis6UGktm6VWoCSewFfJZVERjYm6kHG7MwkvIOHod04X2FsRBKC0KzazOdlUds0itLtNelZj2WABdF7k/f9rccn4dQnub5/uxsOwH1ZlJ2+SDxJwkp4WP0tZ7ONoOSlWCsQEcSlQHBAHStkew+3jhWJqgfgmH0JmTJssMtgiCylHhjMZX0GoUxOC55cIANlQYZ1MTB/blKJP6DT2CpLAYzvoGPappsFQioD5mg0NLSdvKuiNANDRiY5sHbLdq9hEn68ajL0J3eCIgZqeqOgDcT7+X8gquF4ub9Hrx+uY0KU8oa2O1rRRSs7crWBuZweXQ7r7vp0ZfRd6xa7T+2RIOhsdhojans0h2QOeVNXw8W5czwvIk4UGeCtzFinYf0XtRKVPtVoUPTshwQpAzHH7vlMOdNTTPF5yZU2YeM/MpM/8rM6M3c3GXjM8mvolwbJHHoxnIpTU8Bp4me29dIwKLNTRNdEzekM0tOj5hhtYqE9Jg0/gD1kHbFVr5OiWDvHSqwIGY1ExG/2+m5onUwvszBvqjkaN7+BIo7lz0n6YlPxO+NnrGi33DyS567mQJtdmhb60pkffZGLk8CAfb4Ih2gPL4jS5JmEnrHOro8bq8S34lvwHSgr/9</source>
  </file>
  <file path="Amf/Value/Messaging/ArrayCollection.php" generated-path="Amf.Value.Messaging.ArrayCollection.html" hash="5070cc263f4b56b4aa6a62110c563ae7" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="33" package="Zend_Amf\Value">
      <extends>\ArrayObject</extends>
      <name>Zend_Amf_Value_Messaging_ArrayCollection</name>
      <full_name>\Zend_Amf_Value_Messaging_ArrayCollection</full_name>
      <docblock line="33">
        <description>Type encapsulating Flex ArrayCollection</description>
        <long-description>Corresponds to flex.messaging.io.ArrayCollection</long-description>
        <tag name="package" line="33" description="Zend_Amf"/>
        <tag name="subpackage" line="33" description="Value"/>
        <tag name="copyright" line="33" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="33" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
    </class>
    <source>eJzdVMGO0zAQvecr5rCH3YomZaW9rJDYUnalSGWRaOHApZo4k8SsY0e20zQg/p2xm/SAEOJMT/HzvOc3b0Z987ZruiRbLBJYwFfSJTxZbGkw9oWRAG7zzePz7nE67RvpwJneCoJKKoJw7ItvJDx4A74h0DTAu917UFKQdsQY+lBW9LpUVAaVQfqGcQY7FC9Ys4yO3Cg5vZj6k09DdR7pqJwBPKJUWKigak1fN5HFblW5HGRJy4EK4Oei9udP2/vAb7zv7rOsmhtLv3OfqTBtNlnM2PKycNFaXsFoeihlCdp4sCRIHgkQhOlGMFV8cG4NOS+0BL0+ezJBwRQeuR3p/+LxFXSKkBVciBw1UMuNBTaHOKk/zDY5bxgIBJfF8uBv8iPblkqJntSYThN6EHysjR0B4kAjNsc8YYd1W0WcRzdffUHV01mAla2sGw+wuXxeixu4Xa3ulrer13fnTdmTaLRRppbEYe/WkGuRwvUU9zAMl6Bvou6cGv/+eSShGJ6njdqe76LYkayTRofrq7y8YixL5j3ejx0BaYGd6xV6qWt4UnSCtbU4boxSvK3MnQLbGGvJdUaXLqRfcWXaknNYMzGVJv0z7b/LNEuEQucuzRyi+8OHOYrDbzkAnTyF0CL+Mf4HJD+Sn8kvZ69qXA==</source>
  </file>
  <file path="Amf/Value/Messaging/ErrorMessage.php" generated-path="Amf.Value.Messaging.ErrorMessage.html" hash="24be788874f8f96105e0ae8acfc38628" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="36" package="Zend_Amf\Value">
      <extends>\Zend_Amf_Value_Messaging_AcknowledgeMessage</extends>
      <name>Zend_Amf_Value_Messaging_ErrorMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_ErrorMessage</full_name>
      <docblock line="36">
        <description>Creates the error message to report to flex the issue with the call</description>
        <long-description>Corresponds to flex.messaging.messages.ErrorMessage</long-description>
        <tag name="package" line="36" description="Zend_Amf"/>
        <tag name="subpackage" line="36" description="Value"/>
        <tag name="copyright" line="36" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="36" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Value_Messaging_AcknowledgeMessage" refers="\Zend_Amf_Value_Messaging_AcknowledgeMessage" link="/classes/Zend_Amf_Value_Messaging_AcknowledgeMessage.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$extendedData</name>
        <full_name>\Zend_Amf_Value_Messaging_ErrorMessage::extendedData</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Additional data with error</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="48" package="Zend_Amf\Value">
        <name>$faultCode</name>
        <full_name>\Zend_Amf_Value_Messaging_ErrorMessage::faultCode</full_name>
        <default></default>
        <docblock line="48">
          <description>Error code number</description>
          <long-description></long-description>
          <tag name="var" line="48" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="54" package="Zend_Amf\Value">
        <name>$faultDetail</name>
        <full_name>\Zend_Amf_Value_Messaging_ErrorMessage::faultDetail</full_name>
        <default></default>
        <docblock line="54">
          <description>Description as to the cause of the error</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="60" package="Zend_Amf\Value">
        <name>$faultString</name>
        <full_name>\Zend_Amf_Value_Messaging_ErrorMessage::faultString</full_name>
        <default>''</default>
        <docblock line="60">
          <description>Short description of error</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="66" package="Zend_Amf\Value">
        <name>$rootCause</name>
        <full_name>\Zend_Amf_Value_Messaging_ErrorMessage::rootCause</full_name>
        <default>null</default>
        <docblock line="66">
          <description>root cause of error</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$correlationId</name>
        <full_name>\Zend_Amf_Value_Messaging_AsyncMessage::correlationId</full_name>
        <default></default>
        <docblock line="42">
          <description>The message id to be responded to.</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="String" variable="">
            <type>String</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="Zend_Amf\Value">
        <name>$clientId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::clientId</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Client identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$destination</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::destination</full_name>
        <default></default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Destination&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="47" package="Zend_Amf\Value">
        <name>$messageId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Message identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="52" package="Zend_Amf\Value">
        <name>$timestamp</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timestamp</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Message timestamp&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Zend_Amf\Value">
        <name>$timeToLive</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timeToLive</full_name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Message TTL&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>$headers</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::headers</full_name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;Message headers&lt;/p&gt;" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Value">
        <name>$body</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::body</full_name>
        <default></default>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="67" description="&lt;p&gt;Message body&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="Zend_Amf\Value">
        <name>__construct</name>
        <full_name>\Zend_Amf_Value_Messaging_AcknowledgeMessage::__construct()</full_name>
        <docblock line="45">
          <description>Create a new Acknowledge Message</description>
          <long-description></long-description>
          <tag name="param" line="45" description="" type="\unknown_type" variable="$message">
            <type>\unknown_type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\unknown_type</type>
        </argument>
        <inherited_from>\Zend_Amf_Value_Messaging_AcknowledgeMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Amf\Value">
        <name>generateId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::generateId()</full_name>
        <docblock line="78">
          <description>generate a unique id</description>
          <long-description>Format is: ########-####-####-####-############
Where # is an uppercase letter or number
example: 6D9DC7EC-A273-83A9-ABE3-00005FD752D6</long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Value_Messaging_AbstractMessage</inherited_from>
      </method>
    </class>
    <source>eJzdVE1z0zAQvftX7KEzaTPELp3ppcDQkJSZzJQeSOHAJSNLG1tUlowkxw0M/52VImcKKR+94ovtld7bt/tWevm6rdusGI8zGMMn1ALeWtZgb+wdRULwejG7ullepb/bWjpwprMcYS0VQvjtys/IPXgDvkbQ2MOb5RyU5KgdUoz5sK3stFAoAksvfU1xCraM37GKaHTERsqUMff3Pg+7FxHOlDPANkwqVqrAak1X1RFFapWY9FLgpMcSKF3k/vD++iLga+/bi6JYD4XlX6nOnJumSBILkjwpXZS2WMPWdCCkAG08WOQoNwgMuGm3YNYx4VAao34xi9DpnSYTGEzpGZUj/R80PoNWISMGF1rONGBDhQU0NTGxXw4yqd/QI3DaFrcHfUmPbBoUknlU2zw5dMnptzJ2CxANjbGhzSm2mjbrGCfrhqWPTHW4IyBmK6vaA8z2n8f8BM5OT88nZ6fPz3eTcou81kaZSiI1ezmFheY5HKd2932/b/RJ5B26Rs8/WxI2w02aqOvdWiTboHXS6LB8tBBHFCuyMMdUE+K+yFWsavUOnWOV1NVqyu+06WkMK9wFMQAtfumkxZXRNNajAC4IXERwsQcXh+CcTs/oRTYcoJlFar6LhqO1xkKTkpCtFltj4ylZK7yPe6RzHQ6nITisVHJxZqxF1xot3IDIm0FI+kKXX4UkScvg///mdZFxxZz7vacPmwB47zE07QkTkH3LQuboYXjGMBVCepoupkAwz3YORUOHHZcbZumkh3svhYr4bruSqoKjnQwU8wB/BbpTisbklzRROB1kQZdm15T4M7vzlvQ+yr5mnfIzwh1yztFxK9ugHpgb7mTOOjIj3V6Hhfwt1RzpSnukgGUdJlo8SEkpnk6/jOvUptHoMIc1dA3v9T/JhACdReTgwPfsByG9MNs=</source>
  </file>
  <file path="Amf/Value/Messaging/CommandMessage.php" generated-path="Amf.Value.Messaging.CommandMessage.html" hash="abb1b70b6a391a6dce0f79060e0caf99" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="42" package="Zend_Amf\Value">
      <extends>\Zend_Amf_Value_Messaging_AsyncMessage</extends>
      <name>Zend_Amf_Value_Messaging_CommandMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_CommandMessage</full_name>
      <docblock line="42">
        <description>A message that represents an infrastructure command passed between
client and server. Subscribe/unsubscribe operations result in
CommandMessage transmissions, as do polling operations.</description>
        <long-description>Corresponds to flex.messaging.messages.CommandMessage

Note: THESE VALUES MUST BE THE SAME ON CLIENT AND SERVER</long-description>
        <tag name="package" line="42" description="Zend_Amf"/>
        <tag name="subpackage" line="42" description="Value"/>
        <tag name="copyright" line="42" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="42" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Value_Messaging_AsyncMessage" refers="\Zend_Amf_Value_Messaging_AsyncMessage" link="/classes/Zend_Amf_Value_Messaging_AsyncMessage.html"/>
      </docblock>
      <constant namespace="" line="47" package="Zend_Amf\Value">
        <name>SUBSCRIBE_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::SUBSCRIBE_OPERATION</full_name>
        <value>0</value>
        <docblock line="47">
          <description>This operation is used to subscribe to a remote destination.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="52" package="Zend_Amf\Value">
        <name>UNSUSBSCRIBE_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::UNSUSBSCRIBE_OPERATION</full_name>
        <value>1</value>
        <docblock line="52">
          <description>This operation is used to unsubscribe from a remote destination.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="58" package="Zend_Amf\Value">
        <name>POLL_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::POLL_OPERATION</full_name>
        <value>2</value>
        <docblock line="58">
          <description>This operation is used to poll a remote destination for pending,
undelivered messages.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="64" package="Zend_Amf\Value">
        <name>CLIENT_SYNC_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::CLIENT_SYNC_OPERATION</full_name>
        <value>4</value>
        <docblock line="64">
          <description>This operation is used by a remote destination to sync missed or cached messages
back to a client as a result of a client issued poll command.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="70" package="Zend_Amf\Value">
        <name>CLIENT_PING_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::CLIENT_PING_OPERATION</full_name>
        <value>5</value>
        <docblock line="70">
          <description>This operation is used to test connectivity over the current channel to
the remote endpoint.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="76" package="Zend_Amf\Value">
        <name>CLUSTER_REQUEST_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::CLUSTER_REQUEST_OPERATION</full_name>
        <value>7</value>
        <docblock line="76">
          <description>This operation is used to request a list of failover endpoint URIs
for the remote destination based on cluster membership.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="84" package="Zend_Amf\Value">
        <name>LOGIN_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::LOGIN_OPERATION</full_name>
        <value>8</value>
        <docblock line="84">
          <description>This operation is used to send credentials to the endpoint so that
the user can be logged in over the current channel.</description>
          <long-description>The credentials need to be Base64 encoded and stored in the &lt;code&gt;body&lt;/code&gt;
of the message.</long-description>
        </docblock>
      </constant>
      <constant namespace="" line="90" package="Zend_Amf\Value">
        <name>LOGOUT_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::LOGOUT_OPERATION</full_name>
        <value>9</value>
        <docblock line="90">
          <description>This operation is used to log the user out of the current channel, and
will invalidate the server session if the channel is HTTP based.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="96" package="Zend_Amf\Value">
        <name>SESSION_INVALIDATE_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::SESSION_INVALIDATE_OPERATION</full_name>
        <value>10</value>
        <docblock line="96">
          <description>This operation is used to indicate that the client's subscription to a
remote destination has been invalidated.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="102" package="Zend_Amf\Value">
        <name>MULTI_SUBSCRIBE_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::MULTI_SUBSCRIBE_OPERATION</full_name>
        <value>11</value>
        <docblock line="102">
          <description>This operation is used by the MultiTopicConsumer to subscribe/unsubscribe
from multiple subtopics/selectors in the same message.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="107" package="Zend_Amf\Value">
        <name>DISCONNECT_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::DISCONNECT_OPERATION</full_name>
        <value>12</value>
        <docblock line="107">
          <description>This operation is used to indicate that a channel has disconnected</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="112" package="Zend_Amf\Value">
        <name>UNKNOWN_OPERATION</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::UNKNOWN_OPERATION</full_name>
        <value>10000</value>
        <docblock line="112">
          <description>This is the default operation for new CommandMessage instances.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="118" package="Zend_Amf\Value">
        <name>$operation</name>
        <full_name>\Zend_Amf_Value_Messaging_CommandMessage::operation</full_name>
        <default>self::UNKNOWN_OPERATION</default>
        <docblock line="118">
          <description>The operation to execute for messages of this type</description>
          <long-description></long-description>
          <tag name="var" line="118" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$correlationId</name>
        <full_name>\Zend_Amf_Value_Messaging_AsyncMessage::correlationId</full_name>
        <default></default>
        <docblock line="42">
          <description>The message id to be responded to.</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="String" variable="">
            <type>String</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="Zend_Amf\Value">
        <name>$clientId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::clientId</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Client identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$destination</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::destination</full_name>
        <default></default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Destination&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="47" package="Zend_Amf\Value">
        <name>$messageId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Message identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="52" package="Zend_Amf\Value">
        <name>$timestamp</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timestamp</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Message timestamp&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Zend_Amf\Value">
        <name>$timeToLive</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timeToLive</full_name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Message TTL&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>$headers</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::headers</full_name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;Message headers&lt;/p&gt;" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Value">
        <name>$body</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::body</full_name>
        <default></default>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="67" description="&lt;p&gt;Message body&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Amf\Value">
        <name>generateId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::generateId()</full_name>
        <docblock line="78">
          <description>generate a unique id</description>
          <long-description>Format is: ########-####-####-####-############
Where # is an uppercase letter or number
example: 6D9DC7EC-A273-83A9-ABE3-00005FD752D6</long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Value_Messaging_AbstractMessage</inherited_from>
      </method>
    </class>
    <source>eJzdV01v20YQvetXzCFAEsMW7SDuh5O0lmU2ISrTrimlaC/CkhxJ25Bclru0rBb97327JGXJlQPrWsGAxOXOmzczb2fW738sF2XPOzjo0QH9zkVKP1Ui56WqvmDFLo6CoR9Gfvs0XkhNWtVVwjSTGZN9rOM/ODFkFJkFU8FLuoguKZMJF5qxJozdFtdFmnFqUZbSLLCOxVIkX8QcMIWzdZCtx765N327O3DmItOKxJ2QmYgzi1qper5wVmCbpUdLmfLRkmOCO4c9uR2dWfuFMeWZ5826wPp/Ic5+onKvpeiB8lGsHbVgRitVUypTKpShihOWd0yCElWuSM2cwy40gXyJiqkuGk7KIqjYCIQjzVc4HlKZsQCCtikXBXGOwKw1ktiin3c0kW9aMiXY5rZbfi0fmeecSmE4W/XbCp0neJyrakXkCurWujS3a9NBPnPrKF336rPIam4AgFzJ+cIQDdc/XyWv6c3x8enRm+OT00YpY04WhcrUXDKSHQ0oKJI+vWrTvVwu14l+7XC7rOHz7JLYzRS2iho17xzYHVdaqsK+fhGkL7Dm9Todn2vmdZxTF9j0irUWc1nMpwO9KpLmkZ1ZxX/WsuKpKiDql9bOg53n7Ly1nbdp18epeflu7XBAebPeiL3ismKUymhbWlkgTG2qOjE1tIIgc6ubUmjNKcVslsyFRUkyCRsnKs0VAuxTVMc6qWTMXl3o7jepkithEL2GK11nOB8OYNhAX3VcKlHoXGqbJ31IQlOqqFRZhmg2MDrhDFUFtFIVqbYqnGV838+76NtfrPvbTlrbUBk+o/EnP/Lp82A08SO6mkRjuvDtIkWDK5+uQxqOAj8c0yC8pMi//ezfdpr9v+nT6yUZ6vu0CB+Viu8N27w/T7R/96xXpz37OaCmLa9LattlbcWFMj6oBg8CeslRKkpZG1m4zf0WxHPfCQRhKJpcRMPb4MKfXt/4t4NxgNp9oGMI/pHjp/1u6nVWoYk91/ckjCbRLvcn+7i3Mt/pkmaqohJpRlYPOxxMJs7Q5isYr4W+g9vN9Wi0xenNsznFq910bIlQWrLnFNtALhHJYoNHhxvjHDQ17PqEdoju/GMurdcBVMPeZaBtNrtiac7iNPotHG6F9HafNBtEYvEKzH95Jw0mJLLoBl5So52ATrIQeJ254djA2bdtJlCHUsnCfIXgTRB+3CJ4ug9B29stR4Gpql2eZhi0jmTnG/eEYJ1lq44NfpuVioUrUIE819oAIOc8xhRayHI3fTRA/3Z66/+CdjjeCuHbfUJwMz+BNJFNiVtQd89a89fKjZ3N9MK2chcGnD40wDmQcCV5qjb9BxK85anghgJQLhD9N2/hNFEpp82QMqpqgC3me/vih1ilq/ee+9mBtnemVs+7UjW6/hiEWwn6bp8EIcCHoFVtOo+Pojy0pDu0pcTpkMWdyGSK+5Lb3wxdfLmJSbJFafULh5/G45tGBk9EcT3ZrvP3+4Qh0ZOShou7wXJ7oF/qromXXccQHdoOmS7QF2LcKDai20k38qMILKdBiIEdXA7Gj7rt87s9Wptle4VGJMeqlMkQDurcam1j/mzeYNanzQ6G3NrhOmy3GmuuPc0ZGoqqdCcujTn8NQVdTUbjYLp7bJ3sNTi2qyDW5bdpTaVuex2nO0hcBtHwOgz94bYITp4aEvizsaU8E66Hr+nYJmT/i3p0SZBwInBH3TmaJuHP4fWv4aMa4rPL+cYV0sbM95zUCNn67cZOc4gsxVW5rtf5nahAw2z5L+sYlyJ68QD5AWcom52d/YfTu94/vX8ByG+KAQ==</source>
  </file>
  <file path="Amf/Value/Messaging/AcknowledgeMessage.php" generated-path="Amf.Value.Messaging.AcknowledgeMessage.html" hash="6ca489880c9e04581db56525268006f5" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="38" package="Zend_Amf\Value">
      <extends>\Zend_Amf_Value_Messaging_AsyncMessage</extends>
      <name>Zend_Amf_Value_Messaging_AcknowledgeMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_AcknowledgeMessage</full_name>
      <docblock line="38">
        <description>This is the type of message returned by the MessageBroker
to endpoints after the broker has routed an endpoint's message
to a service.</description>
        <long-description>flex.messaging.messages.AcknowledgeMessage</long-description>
        <tag name="package" line="38" description="Zend_Amf"/>
        <tag name="subpackage" line="38" description="Value"/>
        <tag name="copyright" line="38" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="38" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Value_Messaging_AsyncMessage" refers="\Zend_Amf_Value_Messaging_AsyncMessage" link="/classes/Zend_Amf_Value_Messaging_AsyncMessage.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$correlationId</name>
        <full_name>\Zend_Amf_Value_Messaging_AsyncMessage::correlationId</full_name>
        <default></default>
        <docblock line="42">
          <description>The message id to be responded to.</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="String" variable="">
            <type>String</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="Zend_Amf\Value">
        <name>$clientId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::clientId</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Client identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Zend_Amf\Value">
        <name>$destination</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::destination</full_name>
        <default></default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Destination&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="47" package="Zend_Amf\Value">
        <name>$messageId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Message identifier&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="52" package="Zend_Amf\Value">
        <name>$timestamp</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timestamp</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Message timestamp&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Zend_Amf\Value">
        <name>$timeToLive</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::timeToLive</full_name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Message TTL&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>$headers</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::headers</full_name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;Message headers&lt;/p&gt;" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="67" package="Zend_Amf\Value">
        <name>$body</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::body</full_name>
        <default></default>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="67" description="&lt;p&gt;Message body&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="Zend_Amf\Value">
        <name>__construct</name>
        <full_name>\Zend_Amf_Value_Messaging_AcknowledgeMessage::__construct()</full_name>
        <docblock line="45">
          <description>Create a new Acknowledge Message</description>
          <long-description></long-description>
          <tag name="param" line="45" description="" type="\unknown_type" variable="$message">
            <type>\unknown_type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\unknown_type</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Amf\Value">
        <name>generateId</name>
        <full_name>\Zend_Amf_Value_Messaging_AbstractMessage::generateId()</full_name>
        <docblock line="78">
          <description>generate a unique id</description>
          <long-description>Format is: ########-####-####-####-############
Where # is an uppercase letter or number
example: 6D9DC7EC-A273-83A9-ABE3-00005FD752D6</long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Value_Messaging_AbstractMessage</inherited_from>
      </method>
    </class>
    <source>eJzdVE1v1DAQvedXzKFidys2WZC4AAVKAWmlwoEWDlxWjjNJTB072E7TBfHfGU8+WGhVcWZVddfjN29m3sz4+cu2bpPs+DiBY/iCpoB3TjTYW3dFlmg83569/XDxdjxd1sqDt52TCKXSCPHY5V9RBggWQo1gsIfXF29AK4nGI9lEiLC8M4XGIrL0KtRkJ2Mr5JWoiMawL1OOEdNwE9KI3rK70N6CuBZKi1xHVme7qmYvylYX614VuO4xBwrH3J8+nj+N/nUI7dMsK6fC0u9UZyptk40pZpTyOvec2raEve2gUAUYG8ChRHWNIEDadg+25IBTaYL0Eg6hM0NONjLYPAgqR4V7cnwIrUZBDD5KLgxgQ4VFbxJxZH81pUl6Q48gCcbwmN+Yj2oaLJQIqPfp2KFXko6VdXsAbijbJplH2+60KdlOrZuuPgvd4UBAzE5VdQA4m38u5QoebzZP1o83j54Mk3KJsjZW20ohiX1xClsjU1iOcvd9Pwu9Yt5JNfr8c0siGD6ME3U+3DHZNTqvrInXR9viiGxZEud4rm/HBe3eo/eiUqbanfq9kcMRI9rht0453FlDs7yIbhm5ZeyWzW7ZoVtKy7J4lkz7wstAf7G/Yd9iHI9mDOAwdM5gAfme70eG185eoRsbTSFbq0yg4S4DOsblDIBaeKDhCThMxwhc+Il/ZBA0Ee6aZJm6X2q8SZsp+fEX+vRUXhnb0/pV+H5m+C9HI0ukFt7fMwe3pAC8CYS+z+dgCJIfSYzMMxA/x3DmkHaOmhGfvgN6mKVm3AQnyak4ejQi0Ox4co6aP6AZf7ddTjVD2RkZ4qzvdtIaH1wnw3JyWDFySImXIT596xdSKzRhyyKdTMYKDTrKdFssV8/+9ijQB2UEBzoB02l9CzKGZNZ/Iw2KfIJoWvaIp+UqXWw2izuRl/Y8vrWE3Ny6r1EUtPIwFBSFvrh8cxY7fUfY3Bb7yTTVMmOyjN5O51Bz03h3ezvtlZ9hqoRZZHjwgPbc42/ZD8RYrQ7kP2wBB2FBSbETuMP1d+I/k+H/z+QXTBlj3g==</source>
  </file>
  <file path="Amf/Value/MessageHeader.php" generated-path="Amf.Value.MessageHeader.html" hash="3719e3197128d0db242a664278740de3" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="34" package="Zend_Amf\Value">
      <extends/>
      <name>Zend_Amf_Value_MessageHeader</name>
      <full_name>\Zend_Amf_Value_MessageHeader</full_name>
      <docblock line="34">
        <description>Message Headers provide context for the processing of the
the AMF Packet and all subsequent Messages.</description>
        <long-description>Multiple Message Headers may be included within an AMF Packet.</long-description>
        <tag name="package" line="34" description="Zend_Amf"/>
        <tag name="subpackage" line="34" description="Value"/>
        <tag name="copyright" line="34" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="34" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="41" package="Zend_Amf\Value">
        <name>$name</name>
        <full_name>\Zend_Amf_Value_MessageHeader::name</full_name>
        <default></default>
        <docblock line="41">
          <description>Name of the header</description>
          <long-description></long-description>
          <tag name="var" line="41" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="48" package="Zend_Amf\Value">
        <name>$mustRead</name>
        <full_name>\Zend_Amf_Value_MessageHeader::mustRead</full_name>
        <default></default>
        <docblock line="48">
          <description>Flag if the data has to be parsed on return</description>
          <long-description></long-description>
          <tag name="var" line="48" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="55" package="Zend_Amf\Value">
        <name>$length</name>
        <full_name>\Zend_Amf_Value_MessageHeader::length</full_name>
        <default></default>
        <docblock line="55">
          <description>Length of the data field</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>$data</name>
        <full_name>\Zend_Amf_Value_MessageHeader::data</full_name>
        <default></default>
        <docblock line="62">
          <description>Data sent with the header name</description>
          <long-description></long-description>
          <tag name="var" line="62" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="72" package="Zend_Amf\Value">
        <name>__construct</name>
        <full_name>\Zend_Amf_Value_MessageHeader::__construct()</full_name>
        <docblock line="72">
          <description>Used to create and store AMF Header data.</description>
          <long-description></long-description>
          <tag name="param" line="72" description="" type="String" variable="$name">
            <type>String</type>
          </tag>
          <tag name="param" line="72" description="" type="Boolean" variable="$mustRead">
            <type>Boolean</type>
          </tag>
          <tag name="param" line="72" description="" type="\misc" variable="$content">
            <type>\misc</type>
          </tag>
          <tag name="param" line="72" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>String</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mustRead</name>
          <default></default>
          <type>Boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <source>eJzdVctu2zAQvOsrtkAOdhDbaYBc0qbNGzWQBEUePfRiUNRaYkORKklZcYv8e5ekaAeOUfRcHWxruZzZnVnSHz83VZNNdncz2IXvqAq4MqzGTpsnivjg9fT88vb+sn97qIQFq1vDEeZCIvjXNv+B3IHT4CoEhR2c3V+AFByVRYox59PyVhUSC4/SCVdRnIIN40+sJBgV9gbInnHsnt3YZ0/DdiatBrZgQrJcelSj27IKu6haWYw6UeCowxyILmA/3l0f+f2Vc83RZDJPjY1/UZ9jrutJX+KESh7lNpQ2ncNSt1CIApR2YJCjWCAw4LpZgp4HwtQaI72YQWhVrEl7BJ07Ru0I95ca96CRyAjBesmZAqypMb+bROzRT1KZpDd0CJzSQrqvr69H1DUWgjmUy3Hv0Amn11KbJUAwNMSSzH1sdlrPQ5ysS0vfmGwxAhCyEWXlAM5XPwd8CAf7+4ejg/33h3FSHpBXSktdCiSx709hqvgYBr3cXdethB4G3KQaPf9siU+G236iruNaAFugsUIrv7wzLXYoNsnSHN+gtb6lL8gKSoPG6AUJT5Iph88O5toETyjOKVWosjc2GEALpzdX8JV0QRctltIPucWfLSqX4G1S/KaVTpCfb3hrtoTczzaXbYFFGHuaDPJxTbCy7X+zaJJxyaxdNTML1c96jaJE2e/Mbw62+WcXboktnbIq5sSVlHCyYAasM2RaH5qE76bNqS7YUQTwIduEvZKsBBFhC+YYVMz6o0buNMxY8oZGyaBrjdrGl2tNx1VtJaxb6+6o0rek16hKuuf0K9q5QFlsYxDKbUWXAeMt9oVHs34a+7s0yQVegG0MtXjGYiuHr+wtw6NXhSTiBulCCefAOm3i4Yj2hZ7Gm2QkKKvhPlgU/dhYOotqrqXbWK+FparCYV2pktZIJyyJuRdmWz/zVnHnr4bZjDBoVFruBqGOvTXlXmx7LwEdq1bKYYCJMxkuFv83Mvrkt4b34zReGwkJlBIGflSGr6diIzeMQQ8WhU8JNJ4DXwW8Oz5OZQ1fVfMKJC56OtJjuJ6SlPaSxc+X7A+6QVrj</source>
  </file>
  <file path="Amf/Value/ByteArray.php" generated-path="Amf.Value.ByteArray.html" hash="3501ce99e15b597c7159a47a166585b3" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="31" package="Zend_Amf\Value">
      <extends/>
      <name>Zend_Amf_Value_ByteArray</name>
      <full_name>\Zend_Amf_Value_ByteArray</full_name>
      <docblock line="31">
        <description>Wrapper class to store an AMF3 flash.utils.ByteArray</description>
        <long-description></long-description>
        <tag name="package" line="31" description="Zend_Amf"/>
        <tag name="subpackage" line="31" description="Value"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Amf\Value">
        <name>$_data</name>
        <full_name>\Zend_Amf_Value_ByteArray::_data</full_name>
        <default>''</default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="&lt;p&gt;ByteString Data&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="Zend_Amf\Value">
        <name>__construct</name>
        <full_name>\Zend_Amf_Value_ByteArray::__construct()</full_name>
        <docblock line="44">
          <description>Create a ByteArray</description>
          <long-description></long-description>
          <tag name="param" line="44" description="" type="string" variable="$data">
            <type>string</type>
          </tag>
          <tag name="return" line="44" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="Zend_Amf\Value">
        <name>getData</name>
        <full_name>\Zend_Amf_Value_ByteArray::getData()</full_name>
        <docblock line="54">
          <description>Return the byte stream</description>
          <long-description></long-description>
          <tag name="return" line="54" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVE1v2zAMvftX8BCgabDYWYde2n0k/QICZD003QbsEsgSbWuVJUOW42ZD//so2U67DCh2ni+xHsnHxyc67z9VRRUlk0kEE/iOWsCNZSW2xj4Q4sHV8vL6dn3dn+4LWUNtGssRMqkQ/LFJfyB34Ay4AkFjCxfrK1CSo66RMOZ8WtpooVB4lla6gnACK8YfWE40OtQGyr5j7B5d7LOXoZyp2gDbMqlYqjyrNU1ehCpSq8S0lQKnLaZA7QL3l7vVma8vnKvOkiQbBot/0pwxN2XSS0xI8jStg7RlBjvTgJACtHFgkaPcIjDgptqByULDYTRGfjGL0OhOk/EMJnWMxpHuFY1voFLIiKH2ljMNWNJgvppM7Nnng0zyG1oETmkh3evr9ciyRCGZQ7WL+xuaczrmxu4AwoUGbLC5xzaLMgs4Xd0Q+spUgx0BMVuZFw7gcv865sdwMpudTk9mb0+7TblHXmijTC6RzF4vYKl5DOPe7rZt90YfB97BNXr++Up8Mtz2G7XqYoFsi7aWRvvwaClGhCXRsMffLKsqtMAVq2vvaO2M9bcFi8837yAjuIgbJ1UdX+wcLqxlu8G9/82pJOpcGIbZBPWb57l/Rb4wOOcfby2z5JiVOgeftu5er5hjfUoSfitrHH32KGC0ERSED3B0dB4d0l1apIWkhX1hdYjs+1WMhoOh5Ug8N4K5RddYDVsjxZ/Nm5Tmh6zR3Pk12Gy40cTQcDcODMchrRsuLIn/S5h+HJSGnPMQffpL8l3X1H+2KYn2ypCVh7J7aZ3sV8Xl6Lx740NNPcNLaYOkp+g3uyu3cA==</source>
  </file>
  <file path="Amf/Value/TraitsInfo.php" generated-path="Amf.Value.TraitsInfo.html" hash="91da9ed050e8e44979a229eadf433bf4" package="Zend_Amf\Value">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Value"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="31" package="Zend_Amf\Value">
      <extends/>
      <name>Zend_Amf_Value_TraitsInfo</name>
      <full_name>\Zend_Amf_Value_TraitsInfo</full_name>
      <docblock line="31">
        <description>Zend_Amf_Value_TraitsInfo</description>
        <long-description></long-description>
        <tag name="package" line="31" description="Zend_Amf"/>
        <tag name="subpackage" line="31" description="Value"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Amf\Value">
        <name>$_className</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::_className</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="&lt;p&gt;Class name&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="41" package="Zend_Amf\Value">
        <name>$_dynamic</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::_dynamic</full_name>
        <default></default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="&lt;p&gt;Whether or not this is a dynamic class&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="46" package="Zend_Amf\Value">
        <name>$_externalizable</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::_externalizable</full_name>
        <default></default>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="46" description="&lt;p&gt;Whether or not the class is externalizable&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Amf\Value">
        <name>$_properties</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::_properties</full_name>
        <default></default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;Class properties&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend_Amf\Value">
        <name>__construct</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::__construct()</full_name>
        <docblock line="62">
          <description>Used to keep track of all class traits of an AMF3 object</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="boolean" variable="$dynamic">
            <type>boolean</type>
          </tag>
          <tag name="param" line="62" description="" type="boolean" variable="$externalizable">
            <type>boolean</type>
          </tag>
          <tag name="param" line="62" description="" type="boolean" variable="$properties">
            <type>boolean</type>
          </tag>
          <tag name="return" line="62" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dynamic</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$externalizable</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend_Amf\Value">
        <name>isDynamic</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::isDynamic()</full_name>
        <docblock line="75">
          <description>Test if the class is a dynamic class</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="85" package="Zend_Amf\Value">
        <name>isExternalizable</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::isExternalizable()</full_name>
        <docblock line="85">
          <description>Test if class is externalizable</description>
          <long-description></long-description>
          <tag name="return" line="85" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="95" package="Zend_Amf\Value">
        <name>length</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::length()</full_name>
        <docblock line="95">
          <description>Return the number of properties in the class</description>
          <long-description></long-description>
          <tag name="return" line="95" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="105" package="Zend_Amf\Value">
        <name>getClassName</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::getClassName()</full_name>
        <docblock line="105">
          <description>Return the class name</description>
          <long-description></long-description>
          <tag name="return" line="105" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="116" package="Zend_Amf\Value">
        <name>addProperty</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::addProperty()</full_name>
        <docblock line="116">
          <description>Add an additional property</description>
          <long-description></long-description>
          <tag name="param" line="116" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="116" description="" type="\Zend_Amf_Value_TraitsInfo">
            <type>\Zend_Amf_Value_TraitsInfo</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="128" package="Zend_Amf\Value">
        <name>addAllProperties</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::addAllProperties()</full_name>
        <docblock line="128">
          <description>Add all properties of the class.</description>
          <long-description></long-description>
          <tag name="param" line="128" description="" type="array" variable="$props">
            <type>array</type>
          </tag>
          <tag name="return" line="128" description="" type="\Zend_Amf_Value_TraitsInfo">
            <type>\Zend_Amf_Value_TraitsInfo</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$props</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="Zend_Amf\Value">
        <name>getProperty</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::getProperty()</full_name>
        <docblock line="140">
          <description>Get the property at a given index</description>
          <long-description></long-description>
          <tag name="param" line="140" description="" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="140" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="Zend_Amf\Value">
        <name>getAllProperties</name>
        <full_name>\Zend_Amf_Value_TraitsInfo::getAllProperties()</full_name>
        <docblock line="150">
          <description>Return all properties of the class.</description>
          <long-description></long-description>
          <tag name="return" line="150" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVk1v2zgQvftXzMEHO6jtbBe9tM1u3DRdGMgGRZPuArsoDIoaSdzQpEBRUdxF/3uHFGXLciwnPdaXRKPhmzdvPsS3v+dZPpidnAzgBP5BFcMHw1ZYaXNHFme8WlxcXt9chqfbTBRQ6NJwhERIBPdYRv8ht2A12AxBYQXvbt6DFBxVgWRj1rlFpYolxg6lEjYjOxlzxu9YSjDKn/WQIeLUPtip817440wWGtg9E5JF0qEaXaaZP0VsZTypRIyTCiOgcB7786er1+58Zm3+ejZLmsSmXynPKderWaA4I8qTqPDUFgmsdQmxiEFpCwY5insEBlzna9CJD9ikxkgvZhBKVXPSDkFHllE6wvZwfAG5REYIhZOcKcAVJeZOk4gB/byhSXpDhcDJzbs7foGPWK0wFsyiXE9Dhc45PabarAF8Qb2tkTnYlvNV4u1UuubVX0yWWAMQshFpZgEuNv+O+Bhenp6+mrw8/eVV3Sm3yDOlpU4Fktg3c1goPoVRkLuqqo3QY4/bqEa/J5fEOcN16Kir+p0Hu0dTCK3c6+EiHpJtNmj3sUtx6XNa3hombLFQiW4k+tnkmA24ZEXRk/j/A3fS6+N+TkBmoLBGqBQu/GFFwcPbmf+bG21prjGG4dLjX5PHm8GjSJHWEv7OkFrdgDZ+dvwQusmFeE3ggoNHORgjeD0rAtaYLgw+WDSKSfHVDePBKLtuB4IxY9g66EKHczSWqnoQc+uyj/e5IBea6jvEHKyh9nJbhEkZmFtfJG9TMP/zw6+0QNw6Dec3tHJG3QFNyYabgnQdnE5IUMMg58H3j+q177aXPpwbtKVRcK9FvCtJGVG/QlIqbt1sLpdcKyJccjvaEn6xoXaW0FJ3z7tUNuZt6DNVSjn2QepO9nPvGmzy27Y3a/NZS5w3e85NK8LGedN2XdddVs612zvdE1vCDXi7M5zp215/3GJB37dkt5cfH5luAUKNemsgivc10qgrXwDpCHOMZv+4/RjDyx2oY0QfK8I+30/1IX8hKVeR2xlJa5SbC0efvELZXuISVWqzQ3S5LhW1/V5njJ/AmHcXcpdavQV62aVoL5oxOCZpZ172uc1jf0thcSwcOJONlOsja0q1N1SI2vN57smHYn8MMUce9tA62Er97xc3gmpnD7Qz781Wyna76NaATg/kXH80/Mjv7cofznku5ccNjVE7xPH8mwVUPC/9P7D+sjYldhdqBildg91MxPhwIH+aFxi2HZ7ZrtvyepAjPdsq84gij0PoL0fG6zl1DRG96MfI79bpydwbtt8G3wGAFwrD</source>
  </file>
  <file path="Amf/Adobe/DbInspector.php" generated-path="Amf.Adobe.DbInspector.html" hash="c945730a861cc8dfb79affc681d935cd" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="30" package="Zend_Amf\Adobe">
      <extends/>
      <name>Zend_Amf_Adobe_DbInspector</name>
      <full_name>\Zend_Amf_Adobe_DbInspector</full_name>
      <docblock line="30">
        <description>This class implements authentication against XML file with roles for Flex Builder.</description>
        <long-description></long-description>
        <tag name="package" line="30" description="Zend_Amf"/>
        <tag name="subpackage" line="30" description="Adobe"/>
        <tag name="copyright" line="30" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="30" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="41" package="Zend_Amf\Adobe">
        <name>_connect</name>
        <full_name>\Zend_Amf_Adobe_DbInspector::_connect()</full_name>
        <docblock line="41">
          <description>Connect to the database</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Database adapter type for Zend_Db&lt;/p&gt;" type="string" variable="$dbType">
            <type>string</type>
          </tag>
          <tag name="param" line="41" description="&lt;p&gt;Adapter-specific connection settings&lt;/p&gt;" type="array|object" variable="$dbDescription">
            <type>array</type>
            <type>object</type>
          </tag>
          <tag name="return" line="41" description="" type="\Zend_Db_Adapter_Abstract">
            <type>\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag name="see" line="41" description="" link="\Zend_Db::factory()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dbType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dbDescription</name>
          <default></default>
          <type>array|object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="Zend_Amf\Adobe">
        <name>describeTable</name>
        <full_name>\Zend_Amf_Adobe_DbInspector::describeTable()</full_name>
        <docblock line="70">
          <description>Describe database object.</description>
          <long-description>Usage example:
$inspector-&gt;describeTable('Pdo_Mysql',
    array(
        'host'     =&gt; '127.0.0.1',
        'username' =&gt; 'webuser',
        'password' =&gt; 'xxxxxxxx',
        'dbname'   =&gt; 'test'
    ),
    'mytable'
);</long-description>
          <tag name="param" line="70" description="&lt;p&gt;Database adapter type for Zend_Db&lt;/p&gt;" type="string" variable="$dbType">
            <type>string</type>
          </tag>
          <tag name="param" line="70" description="&lt;p&gt;Adapter-specific connection settings&lt;/p&gt;" type="array|object" variable="$dbDescription">
            <type>array</type>
            <type>object</type>
          </tag>
          <tag name="param" line="70" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="70" description="Table description" type="array">
            <type>array</type>
          </tag>
          <tag name="see" line="70" description="" link="\Zend_Db::describeTable()"/>
          <tag name="see" line="70" description="" link="\Zend_Db::factory()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dbType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dbDescription</name>
          <default></default>
          <type>array|object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="Zend_Amf\Adobe">
        <name>connect</name>
        <full_name>\Zend_Amf_Adobe_DbInspector::connect()</full_name>
        <docblock line="84">
          <description>Test database connection</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;Database adapter type for Zend_Db&lt;/p&gt;" type="string" variable="$dbType">
            <type>string</type>
          </tag>
          <tag name="param" line="84" description="&lt;p&gt;Adapter-specific connection settings&lt;/p&gt;" type="array|object" variable="$dbDescription">
            <type>array</type>
            <type>object</type>
          </tag>
          <tag name="return" line="84" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="see" line="84" description="" link="\Zend_Db::factory()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dbType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dbDescription</name>
          <default></default>
          <type>array|object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="98" package="Zend_Amf\Adobe">
        <name>getTables</name>
        <full_name>\Zend_Amf_Adobe_DbInspector::getTables()</full_name>
        <docblock line="98">
          <description>Get the list of database tables</description>
          <long-description></long-description>
          <tag name="param" line="98" description="&lt;p&gt;Database adapter type for Zend_Db&lt;/p&gt;" type="string" variable="$dbType">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;Adapter-specific connection settings&lt;/p&gt;" type="array|object" variable="$dbDescription">
            <type>array</type>
            <type>object</type>
          </tag>
          <tag name="return" line="98" description="List of the tables" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dbType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dbDescription</name>
          <default></default>
          <type>array|object</type>
        </argument>
      </method>
    </class>
    <source>eJzVVttu20YQfddXzIMAUYYl2QaCAGrjRomSQoBiFLUCFH0RltyhuA21y+4uLbOp/72zF+pmqVcUSOgHk7NnbufMUPz2u6qoOqOLiw5cwM8oObzXbI0bpT+RxRnns7fv7u7fxadFIQwYVesMIRclgnus018ws2AV2AJB4gbe3E+hFBlKg2Rj1sHSWvISuYuyEbYgOxkrln1iKwojva8PGTMO7aMdOvTMu7PSKGAPTJQsLV1UrepV4b2o2pIPNoLjYIMpUDof++OP87HzL6ytxqNR3jY2/I36HGZqPYoljqjkQWp8abMcGlUDFxyksqAxQ/GAwCBTVQMq9wnb1hjxxTRCLUNNykVQqWXUjrB/UuMlVCUyimAc5UwCrqkx500kxuiv2zKJb9ggZATzcFdfrEes18gFs1g2w6jQ64weV0o3AF5Qb2tpjrblZJ0HLAXRYlVYgLfb2yTrw83V1YvBzdX1izAUC8wKqUq1Eki83k9gJrMhJJHZzWaz5bTv47YE0fW32XdguIvDMw9nPtgDaiOUdMfdGe+SbdRpR9bPY1YyY4gL4nSN0tKs1ES5tIKocI5sRYIYCz99mIcJ8/OnVUnN5ErD+xIf4U0tSo56S+M5ymja26MJVyl+LTyOOoGmtpmlr345TWfSVLS+Snc+dzrO11PrrgtqRsq91ebMspS5cP64RRFXVBUYq4VcQZeni6ZCmEYwMM4qixqsszq+fQnT9Midac2a31V4l1CQKZpMi8orOAkhBq5SkYuMpt8X5s4MWkt5zTacRltr2WZZRt/lJKUCWWa3OIPYgsbjnDkKmqQfj0f+f6WVpTTIIa9lSLeMqZPY5+VRrSHA5xCGLpEnwixDW8kRtL+H8+N92PUrWKGNrssHps2x/zdb76ft3WH3u8bOlRtiPD2TPmDSnegQChkeif/RuFXAR+bWb9xau6KdqsEtj5EW7iWZ9H7gavmhMb+WvcsW7S4vf7JvcVevUMb2/O2rW+hd37wcXtHf9aGvR9YGtaTl6HkkvWSd4QSuoi2gBeIB9xivE0CehnAhtUUqZB/TP/DorRvr+ttCWnG+1C05rMbXfkftglcJXOfHC+VTx3O+S3t6nw5F758GnVm6OqVX2m7jDkOdmePLvR6OV5CQtEtd91EwuP3L/d0tVeybzo+HeC/Xuf1Z0LzsdmenxJc9FbHlVKnyv0j2D9+R/1Ygr0wpjPWqmOS5dlbXeE6h79HGrzlSir7stmJ5cc1XIVTYyXnswHVzUPxpdehXJRL2P+uzv0DPZXrqPHX+AM7O1eE=</source>
  </file>
  <file path="Amf/Adobe/Introspector.php" generated-path="Amf.Adobe.Introspector.html" hash="d425d4bc1010226b27af6fad280bb78f" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="39" package="Zend_Amf\Adobe">
      <extends/>
      <name>Zend_Amf_Adobe_Introspector</name>
      <full_name>\Zend_Amf_Adobe_Introspector</full_name>
      <docblock line="39">
        <description>This class implements a service for generating AMF service descriptions as XML.</description>
        <long-description></long-description>
        <tag name="package" line="39" description="Zend_Amf"/>
        <tag name="subpackage" line="39" description="Adobe"/>
        <tag name="copyright" line="39" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="39" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="48" package="Zend_Amf\Adobe">
        <name>$_options</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_options</full_name>
        <default></default>
        <docblock line="48">
          <description>Options used:
- server: instance of Zend_Amf_Server to use
- directories: directories where class files may be looked up</description>
          <long-description></long-description>
          <tag name="var" line="48" description="&lt;p&gt;Introspector options&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="53" package="Zend_Amf\Adobe">
        <name>$_types</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_types</full_name>
        <default></default>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="53" description="&lt;p&gt;DOM element to store types&lt;/p&gt;" type="\DOMElement" variable="">
            <type>\DOMElement</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="58" package="Zend_Amf\Adobe">
        <name>$_typesMap</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_typesMap</full_name>
        <default>array()</default>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="58" description="&lt;p&gt;Map of the known types&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="63" package="Zend_Amf\Adobe">
        <name>$_xml</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_xml</full_name>
        <default></default>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="63" description="&lt;p&gt;XML document to store data&lt;/p&gt;" type="\DOMDocument" variable="">
            <type>\DOMDocument</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="Zend_Amf\Adobe">
        <name>__construct</name>
        <full_name>\Zend_Amf_Adobe_Introspector::__construct()</full_name>
        <docblock line="70">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="return" line="70" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Zend_Amf\Adobe">
        <name>introspect</name>
        <full_name>\Zend_Amf_Adobe_Introspector::introspect()</full_name>
        <docblock line="82">
          <description>Create XML definition on an AMF service class</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Service class name&lt;/p&gt;" type="string" variable="$serviceClass">
            <type>string</type>
          </tag>
          <tag name="param" line="82" description="&lt;p&gt;invocation options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="82" description="XML with service class introspection" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$serviceClass</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="121" package="Zend_Amf\Adobe">
        <name>initAcl</name>
        <full_name>\Zend_Amf_Adobe_Introspector::initAcl()</full_name>
        <docblock line="121">
          <description>Authentication handler</description>
          <long-description></long-description>
          <tag name="param" line="121" description="" type="\Zend_Acl" variable="$acl">
            <type>\Zend_Acl</type>
          </tag>
          <tag name="return" line="121" description="" type="\unknown_type">
            <type>\unknown_type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Zend_Acl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="133" package="Zend_Amf\Adobe">
        <name>_addClassAttributes</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_addClassAttributes()</full_name>
        <docblock line="133">
          <description>Generate map of public class attributes</description>
          <long-description></long-description>
          <tag name="param" line="133" description="&lt;p&gt;type name&lt;/p&gt;" type="string" variable="$typename">
            <type>string</type>
          </tag>
          <tag name="param" line="133" description="&lt;p&gt;target XML element&lt;/p&gt;" type="\DOMElement" variable="$typexml">
            <type>\DOMElement</type>
          </tag>
          <tag name="return" line="133" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$typename</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$typexml</name>
          <default></default>
          <type>\DOMElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="164" package="Zend_Amf\Adobe">
        <name>_addService</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_addService()</full_name>
        <docblock line="164">
          <description>Build XML service description from reflection class</description>
          <long-description></long-description>
          <tag name="param" line="164" description="" type="\Zend_Server_Reflection_Class" variable="$refclass">
            <type>\Zend_Server_Reflection_Class</type>
          </tag>
          <tag name="param" line="164" description="&lt;p&gt;target XML element&lt;/p&gt;" type="\DOMElement" variable="$target">
            <type>\DOMElement</type>
          </tag>
          <tag name="return" line="164" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$refclass</name>
          <default></default>
          <type>\Zend_Server_Reflection_Class</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>\DOMElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="211" package="Zend_Amf\Adobe">
        <name>_getPropertyType</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_getPropertyType()</full_name>
        <docblock line="211">
          <description>Extract type of the property from DocBlock</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;reflection property object&lt;/p&gt;" type="\Zend_Reflection_Property" variable="$prop">
            <type>\Zend_Reflection_Property</type>
          </tag>
          <tag name="return" line="211" description="Property type" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prop</name>
          <default></default>
          <type>\Zend_Reflection_Property</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="232" package="Zend_Amf\Adobe">
        <name>_getServicePath</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_getServicePath()</full_name>
        <docblock line="232">
          <description>Get the array of service directories</description>
          <long-description></long-description>
          <tag name="return" line="232" description="Service class directories" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="251" package="Zend_Amf\Adobe">
        <name>_phpTypeToAS</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_phpTypeToAS()</full_name>
        <docblock line="251">
          <description>Map from PHP type name to AS type name</description>
          <long-description></long-description>
          <tag name="param" line="251" description="&lt;p&gt;PHP type name&lt;/p&gt;" type="string" variable="$typename">
            <type>string</type>
          </tag>
          <tag name="return" line="251" description="AS type name" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$typename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="274" package="Zend_Amf\Adobe">
        <name>_registerType</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_registerType()</full_name>
        <docblock line="274">
          <description>Register new type on the system</description>
          <long-description></long-description>
          <tag name="param" line="274" description="&lt;p&gt;type name&lt;/p&gt;" type="string" variable="$typename">
            <type>string</type>
          </tag>
          <tag name="return" line="274" description="New type name" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$typename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="314" package="Zend_Amf\Adobe">
        <name>_returnError</name>
        <full_name>\Zend_Amf_Adobe_Introspector::_returnError()</full_name>
        <docblock line="314">
          <description>Return error with error message</description>
          <long-description></long-description>
          <tag name="param" line="314" description="&lt;p&gt;Error message&lt;/p&gt;" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="return" line="314" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Amf/Adobe/Auth.php" generated-path="Amf.Adobe.Auth.html" hash="fbaeeb2e2af7abe2f699ddf08ad9ca10" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="42" package="Zend_Amf\Adobe">
      <extends>\Zend_Amf_Auth_Abstract</extends>
      <name>Zend_Amf_Adobe_Auth</name>
      <full_name>\Zend_Amf_Adobe_Auth</full_name>
      <docblock line="42">
        <description>This class implements authentication against XML file with roles for Flex Builder.</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Zend_Amf"/>
        <tag name="subpackage" line="42" description="Adobe"/>
        <tag name="copyright" line="42" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="42" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Auth_Abstract" refers="\Zend_Amf_Auth_Abstract" link="/classes/Zend_Amf_Auth_Abstract.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="50" package="Zend_Amf\Adobe">
        <name>$_acl</name>
        <full_name>\Zend_Amf_Adobe_Auth::_acl</full_name>
        <default></default>
        <docblock line="50">
          <description>ACL for authorization</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="\Zend_Acl" variable="">
            <type>\Zend_Acl</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="57" package="Zend_Amf\Adobe">
        <name>$_users</name>
        <full_name>\Zend_Amf_Adobe_Auth::_users</full_name>
        <default>array()</default>
        <docblock line="57">
          <description>Username/password array</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="35" package="Zend_Amf\Auth">
        <name>$_username</name>
        <full_name>\Zend_Amf_Auth_Abstract::_username</full_name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Amf\Auth">
        <name>$_password</name>
        <full_name>\Zend_Amf_Auth_Abstract::_password</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="Zend_Amf\Adobe">
        <name>__construct</name>
        <full_name>\Zend_Amf_Adobe_Auth::__construct()</full_name>
        <docblock line="64">
          <description>Create auth adapter</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;File containing XML with users and roles&lt;/p&gt;" type="string" variable="$rolefile">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rolefile</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="Zend_Amf\Adobe">
        <name>getAcl</name>
        <full_name>\Zend_Amf_Adobe_Auth::getAcl()</full_name>
        <docblock line="93">
          <description>Get ACL with roles from XML file</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="\Zend_Acl">
            <type>\Zend_Acl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="105" package="Zend_Amf\Adobe">
        <name>authenticate</name>
        <full_name>\Zend_Amf_Adobe_Auth::authenticate()</full_name>
        <docblock line="105">
          <description>Perform authentication</description>
          <long-description></long-description>
          <tag name="throws" line="105" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="105" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
          <tag name="see" line="105" description="" link="\Zend_Auth_Adapter_Interface#authenticate()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Zend_Amf\Auth">
        <name>setCredentials</name>
        <full_name>\Zend_Amf_Auth_Abstract::setCredentials()</full_name>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Zend_Amf_Auth_Abstract</inherited_from>
      </method>
    </class>
    <source>eJzVV9tu4zYQffdXzLoBIgexlQ2wL07ixus4hQHXW8RJsW0QCLREW+zKokpRcby7Afoj/bl+SWeoS3Sxuw3Ql+rBksjhmZnDM0P5/PvIj1r20VELjuBXHnpwrdiab6T6hCM0OJ2MxrP5OHu79UUMsUyUy2EpAg70mix+464GLUH7HEK+gffzKwiEy8OY4xjTZLZIQi/gHqFshPZxHAcj5n5iK4QJzVoDmXns6SfdI+uJWc6CWAJ7ZCJgi4BQlUxWvlmF0QZedyM83t3wBaA7g313M+3Tel/rqG/byzyx3mfMs+fKtZ2FaGPI3UVsQpssYSsT8IQHodSguMvFIwcGroy2IJfGYZ4aQ76Y4pCEaUySEORCM0xH6H+I8RiigDNEiIlyFgJfY2K0GknM0C/zMJFv2HBw0cyYU3xZPGK95p5gmgfbXrZDly6+rqTaApgNNWM5zdmYM1wvU1sEUWLla4BR8Wi5HTg9OXnXPT15+y4VxS13/VAGciU48jofwiR0e2BlzG42m4LTjsHNCcLrX7NPxjDLxDNN5wzYI1exkCFNH0y8AxyzWyRZuIw5L/Jxhon2neEi1oqhGNFG8d8TobgjQxTrIdnZaGeTnZ3b9VD+h2cNODfYB+AGe5aQ9xseJ8Fe3+Q3tdgN8XEdOHPuJkro7R4MNLFzkxJIUZluwOIYVYHqWvNQY9WgU3wQKAqikK1QmrGGjz9O01ozlahkgNu6lAquA/4E7xMReFwVgtonHqz7fGroyQX/vyjKbqU0vSiHojc7CPxJ42i8R1WtL60WYRrK6TqC4WhqmCOipRKfDc/ZZG5z+chUIaxs0Db3SEmNrZN7cOAwNzhrwN/FXIWYpx1hxJgs9RvFtrsclCea6AkCxXCRWlmdpqeR4tg4TB7APBZprupeIoaUA1IhwhUckGqMhq7px5UhtT2aIXEZXaU+qUkahVVjSxa4W7BMQtco03EQAaETV1sFdMeYfkkXUvlTX+8OiCpMhQ6anFXKqLB6WtN0o6b6/Rh7KEVb8nCG9dO6SQuA8sC9XDON58a5iXlAqOYRhHfx1x9/Mm8tQrwPCnfnlCbQJtE8vbzFO+QbRoPRxsNfO11zbhNcA9hX30A93YF62oRN7xh4RjRdmBRnrm8RM92BccridAc7JXprFHcHzPOIGqvMtGNGrFQFHYNx3xZe+6FT2oKKUzLpDkw+5JUe6l7Lno1q7gsH9HrfJiLaDw+FgNs5EW24GEDNuJh7OG54edXVptCrHkr5VtN9blWfnhsV9gPXpl2Ue67C4z1vxvVyU1wnKtzTOGrls+LaVEGtYDKI0qae7QnuJ65I+rUDox4SfdFs4tKJN0w7hTN+cnlUWlGL/uVwLOarJ2eOMwnxd8lc/l0pEJ7ltS/5HaYvFIglWHwd6a1VFhjpqQNfv1a2sGqWq6hTF2vBWn7tzabGSmFvV973fStkKHaBkp345bVmQ0qdcKd367B5jMS+TAIPFvQJqg9LWs6kkVJnvRExzlvV2qwT+dCgKNv8alypAKz6QL9/PZxM727GzuRqPLud3P7izD7cOtcf7mZXzfoNkyBojqZNoUjTfLovJf7hOOw0bHfnaloHtpdvZHpWJqfRbuDNC0Ahn/+EmtHN2JAznDqT2c/D6eS11AyrH4JL/LvBX8EO/h1KD9xYeyP6eqocuMLLTpULyDgxjfOhZmK2pkoxDb1YvY6b+d1oNJ7Pjwm8k/e159bfT29xzQ==</source>
  </file>
  <file path="Amf/Util/BinaryStream.php" generated-path="Amf.Util.BinaryStream.html" hash="553de6486e275c5c20278a3a3e120fb8" package="Zend_Amf\Util">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Util"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="31" package="Zend_Amf\Util">
      <extends/>
      <name>Zend_Amf_Util_BinaryStream</name>
      <full_name>\Zend_Amf_Util_BinaryStream</full_name>
      <docblock line="31">
        <description>Utility class to walk through a data stream byte by byte with conventional names</description>
        <long-description></long-description>
        <tag name="package" line="31" description="Zend_Amf"/>
        <tag name="subpackage" line="31" description="Util"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Amf\Util">
        <name>$_stream</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_stream</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="&lt;p&gt;Byte stream&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="41" package="Zend_Amf\Util">
        <name>$_streamLength</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_streamLength</full_name>
        <default></default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="&lt;p&gt;Length of stream&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="46" package="Zend_Amf\Util">
        <name>$_bigEndian</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_bigEndian</full_name>
        <default></default>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="46" description="&lt;p&gt;BigEndian encoding?&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Amf\Util">
        <name>$_needle</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_needle</full_name>
        <default></default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;Current position in stream&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="Zend_Amf\Util">
        <name>$_mbStringFunctionsOverloaded</name>
        <full_name>\Zend_Amf_Util_BinaryStream::_mbStringFunctionsOverloaded</full_name>
        <default></default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;str* functions overloaded using mbstring.func_overload?&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Zend_Amf\Util">
        <name>__construct</name>
        <full_name>\Zend_Amf_Util_BinaryStream::__construct()</full_name>
        <docblock line="68">
          <description>Constructor</description>
          <long-description>Create a reference to a byte stream that is going to be parsed or created
by the methods in the class. Detect if the class should use big or
little Endian encoding.</long-description>
          <tag name="param" line="68" description="&lt;p&gt;use '' if creating a new stream or pass a string if reading.&lt;/p&gt;" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="87" package="Zend_Amf\Util">
        <name>getStream</name>
        <full_name>\Zend_Amf_Util_BinaryStream::getStream()</full_name>
        <docblock line="87">
          <description>Returns the current stream</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="Zend_Amf\Util">
        <name>readBytes</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readBytes()</full_name>
        <docblock line="100">
          <description>Read the number of bytes in a row for the length supplied.</description>
          <long-description></long-description>
          <tag name="todo" line="100" description="Should check that there are enough bytes left in the stream we are about to read."/>
          <tag name="param" line="100" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
          <tag name="return" line="100" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="100" description="for buffer underrun" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="Zend_Amf\Util">
        <name>writeBytes</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeBytes()</full_name>
        <docblock line="119">
          <description>Write any length of bytes to the stream</description>
          <long-description>Usually a string.</long-description>
          <tag name="param" line="119" description="" type="string" variable="$bytes">
            <type>string</type>
          </tag>
          <tag name="return" line="119" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bytes</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Zend_Amf\Util">
        <name>readByte</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readByte()</full_name>
        <docblock line="131">
          <description>Reads a signed byte</description>
          <long-description></long-description>
          <tag name="return" line="131" description="Value is in the range of -128 to 127." type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="131" description="" type="\Zend_Amf_Exception">
            <type>\Zend_Amf_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="152" package="Zend_Amf\Util">
        <name>writeByte</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeByte()</full_name>
        <docblock line="152">
          <description>Writes the passed string into a signed byte on the stream.</description>
          <long-description></long-description>
          <tag name="param" line="152" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="152" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Zend_Amf\Util">
        <name>readInt</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readInt()</full_name>
        <docblock line="163">
          <description>Reads a signed 32-bit integer from the data stream.</description>
          <long-description></long-description>
          <tag name="return" line="163" description="Value is in the range of -2147483648 to 2147483647" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="Zend_Amf\Util">
        <name>writeInt</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeInt()</full_name>
        <docblock line="174">
          <description>Write an the integer to the output stream as a 32 bit signed integer</description>
          <long-description></long-description>
          <tag name="param" line="174" description="" type="integer" variable="$stream">
            <type>integer</type>
          </tag>
          <tag name="return" line="174" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="Zend_Amf\Util">
        <name>readUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readUtf()</full_name>
        <docblock line="185">
          <description>Reads a UTF-8 string from the data stream</description>
          <long-description></long-description>
          <tag name="return" line="185" description="A UTF-8 string produced by the byte representation of characters" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="197" package="Zend_Amf\Util">
        <name>writeUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeUtf()</full_name>
        <docblock line="197">
          <description>Wite a UTF-8 string to the outputstream</description>
          <long-description></long-description>
          <tag name="param" line="197" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="197" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="Zend_Amf\Util">
        <name>readLongUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readLongUtf()</full_name>
        <docblock line="210">
          <description>Read a long UTF string</description>
          <long-description></long-description>
          <tag name="return" line="210" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="222" package="Zend_Amf\Util">
        <name>writeLongUtf</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeLongUtf()</full_name>
        <docblock line="222">
          <description>Write a long UTF string to the buffer</description>
          <long-description></long-description>
          <tag name="param" line="222" description="" type="string" variable="$stream">
            <type>string</type>
          </tag>
          <tag name="return" line="222" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="Zend_Amf\Util">
        <name>readLong</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readLong()</full_name>
        <docblock line="233">
          <description>Read a long numeric value</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="double">
            <type>double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="244" package="Zend_Amf\Util">
        <name>writeLong</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeLong()</full_name>
        <docblock line="244">
          <description>Write long numeric value to output stream</description>
          <long-description></long-description>
          <tag name="param" line="244" description="" type="integer|string" variable="$stream">
            <type>integer</type>
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>integer|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="Zend_Amf\Util">
        <name>readUnsignedShort</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readUnsignedShort()</full_name>
        <docblock line="256">
          <description>Read a 16 bit unsigned short.</description>
          <long-description></long-description>
          <tag name="todo" line="256" description="This could use the unpack() w/ S,n, or v"/>
          <tag name="return" line="256" description="" type="double">
            <type>double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="268" package="Zend_Amf\Util">
        <name>readDouble</name>
        <full_name>\Zend_Amf_Util_BinaryStream::readDouble()</full_name>
        <docblock line="268">
          <description>Reads an IEEE 754 double-precision floating point number from the data stream.</description>
          <long-description></long-description>
          <tag name="return" line="268" description="Floating point number" type="double">
            <type>double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="287" package="Zend_Amf\Util">
        <name>writeDouble</name>
        <full_name>\Zend_Amf_Util_BinaryStream::writeDouble()</full_name>
        <docblock line="287">
          <description>Writes an IEEE 754 double-precision floating point number from the data stream.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string|double" variable="$stream">
            <type>string</type>
            <type>double</type>
          </tag>
          <tag name="return" line="287" description="" type="\Zend_Amf_Util_BinaryStream">
            <type>\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>string|double</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="100">Should check that there are enough bytes left in the stream we are about to read.</todo>
      <todo line="256">This could use the unpack() w/ S,n, or v</todo>
    </markers>
    <source>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</source>
  </file>
  <file path="Amf/Server.php" generated-path="Amf.Server.html" hash="344a456bf1129b2759ff6358fd421f2e" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="58" package="Zend_Amf\Server">
      <extends/>
      <implements>\Zend_Server_Interface</implements>
      <name>Zend_Amf_Server</name>
      <full_name>\Zend_Amf_Server</full_name>
      <docblock line="58">
        <description>An AMF gateway server implementation to allow the connection of the Adobe Flash Player to
Zend Framework</description>
        <long-description></long-description>
        <tag name="todo" line="58" description="Make the reflection methods cache and autoload."/>
        <tag name="package" line="58" description="Zend_Amf"/>
        <tag name="subpackage" line="58" description="Server"/>
        <tag name="copyright" line="58" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="58" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Amf\Server">
        <name>$_methods</name>
        <full_name>\Zend_Amf_Server::_methods</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Array of dispatchables</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="73" package="Zend_Amf\Server">
        <name>$_classAllowed</name>
        <full_name>\Zend_Amf_Server::_classAllowed</full_name>
        <default>array()</default>
        <docblock line="73">
          <description>Array of classes that can be called without being explicitly loaded</description>
          <long-description>Keys are class names.</long-description>
          <tag name="var" line="73" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="79" package="Zend_Amf\Server">
        <name>$_loader</name>
        <full_name>\Zend_Amf_Server::_loader</full_name>
        <default></default>
        <docblock line="79">
          <description>Loader for classes in added directories</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="\Zend_Loader_PluginLoader" variable="">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="84" package="Zend_Amf\Server">
        <name>$_production</name>
        <full_name>\Zend_Amf_Server::_production</full_name>
        <default>true</default>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="84" description="&lt;p&gt;Production flag; whether or not to return exception messages&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="90" package="Zend_Amf\Server">
        <name>$_request</name>
        <full_name>\Zend_Amf_Server::_request</full_name>
        <default>null</default>
        <docblock line="90">
          <description>Request processed</description>
          <long-description></long-description>
          <tag name="var" line="90" description="" type="null|\Zend_Amf_Request" variable="">
            <type>null</type>
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="96" package="Zend_Amf\Server">
        <name>$_response</name>
        <full_name>\Zend_Amf_Server::_response</full_name>
        <default></default>
        <docblock line="96">
          <description>Class to use for responses</description>
          <long-description></long-description>
          <tag name="var" line="96" description="" type="null|\Zend_Amf_Response" variable="">
            <type>null</type>
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="102" package="Zend_Amf\Server">
        <name>$_table</name>
        <full_name>\Zend_Amf_Server::_table</full_name>
        <default>array()</default>
        <docblock line="102">
          <description>Dispatch table of name =&gt; method pairs</description>
          <long-description></long-description>
          <tag name="var" line="102" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="108" package="Zend_Amf\Server">
        <name>$_session</name>
        <full_name>\Zend_Amf_Server::_session</full_name>
        <default>false</default>
        <docblock line="108">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="108" description="&lt;p&gt;session flag; whether or not to add a session to each response.&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="114" package="Zend_Amf\Server">
        <name>$_sesionNamespace</name>
        <full_name>\Zend_Amf_Server::_sesionNamespace</full_name>
        <default>'zend_amf'</default>
        <docblock line="114">
          <description>Namespace allows all AMF calls to not clobber other PHP session variables</description>
          <long-description></long-description>
          <tag name="var" line="114" description="&lt;p&gt;default session namespace zend_amf&lt;/p&gt;" type="\Zend_Session_NameSpace" variable="">
            <type>\Zend_Session_NameSpace</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="120" package="Zend_Amf\Server">
        <name>$_sessionName</name>
        <full_name>\Zend_Amf_Server::_sessionName</full_name>
        <default>'PHPSESSID'</default>
        <docblock line="120">
          <description>Set the default session.name if php_</description>
          <long-description></long-description>
          <tag name="var" line="120" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="127" package="Zend_Amf\Server">
        <name>$_auth</name>
        <full_name>\Zend_Amf_Server::_auth</full_name>
        <default></default>
        <docblock line="127">
          <description>Authentication handler object</description>
          <long-description></long-description>
          <tag name="var" line="127" description="" type="\Zend_Amf_Auth_Abstract" variable="">
            <type>\Zend_Amf_Auth_Abstract</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="133" package="Zend_Amf\Server">
        <name>$_acl</name>
        <full_name>\Zend_Amf_Server::_acl</full_name>
        <default></default>
        <docblock line="133">
          <description>ACL handler object</description>
          <long-description></long-description>
          <tag name="var" line="133" description="" type="\Zend_Acl" variable="">
            <type>\Zend_Acl</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="Zend_Amf\Server">
        <name>__construct</name>
        <full_name>\Zend_Amf_Server::__construct()</full_name>
        <docblock line="137">
          <description>The server constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="Zend_Amf\Server">
        <name>setAuth</name>
        <full_name>\Zend_Amf_Server::setAuth()</full_name>
        <docblock line="151">
          <description>Set authentication adapter</description>
          <long-description>If the authentication adapter implements a "getAcl()" method, populate
the ACL of this instance with it (if none exists already).</long-description>
          <tag name="param" line="151" description="" type="\Zend_Amf_Auth_Abstract" variable="$auth">
            <type>\Zend_Amf_Auth_Abstract</type>
          </tag>
          <tag name="return" line="151" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$auth</name>
          <default></default>
          <type>\Zend_Amf_Auth_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="164" package="Zend_Amf\Server">
        <name>getAuth</name>
        <full_name>\Zend_Amf_Server::getAuth()</full_name>
        <docblock line="164">
          <description>Get authentication adapter</description>
          <long-description></long-description>
          <tag name="return" line="164" description="" type="\Zend_Amf_Auth_Abstract">
            <type>\Zend_Amf_Auth_Abstract</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="Zend_Amf\Server">
        <name>setAcl</name>
        <full_name>\Zend_Amf_Server::setAcl()</full_name>
        <docblock line="175">
          <description>Set ACL adapter</description>
          <long-description></long-description>
          <tag name="param" line="175" description="" type="\Zend_Acl" variable="$acl">
            <type>\Zend_Acl</type>
          </tag>
          <tag name="return" line="175" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Zend_Acl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="Zend_Amf\Server">
        <name>getAcl</name>
        <full_name>\Zend_Amf_Server::getAcl()</full_name>
        <docblock line="185">
          <description>Get ACL adapter</description>
          <long-description></long-description>
          <tag name="return" line="185" description="" type="\Zend_Acl">
            <type>\Zend_Acl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="196" package="Zend_Amf\Server">
        <name>setProduction</name>
        <full_name>\Zend_Amf_Server::setProduction()</full_name>
        <docblock line="196">
          <description>Set production flag</description>
          <long-description></long-description>
          <tag name="param" line="196" description="" type="boolean" variable="$flag">
            <type>boolean</type>
          </tag>
          <tag name="return" line="196" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flag</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="Zend_Amf\Server">
        <name>isProduction</name>
        <full_name>\Zend_Amf_Server::isProduction()</full_name>
        <docblock line="207">
          <description>Whether or not the server is in production</description>
          <long-description></long-description>
          <tag name="return" line="207" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="216" package="Zend_Amf\Server">
        <name>setSession</name>
        <full_name>\Zend_Amf_Server::setSession()</full_name>
        <docblock line="216">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="216" description="&lt;p&gt;of all incoming sessions defaults to Zend_Amf&lt;/p&gt;" type="\namespace" variable="">
            <type>\namespace</type>
          </tag>
          <tag name="return" line="216" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>'Zend_Amf'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="228" package="Zend_Amf\Server">
        <name>isSession</name>
        <full_name>\Zend_Amf_Server::isSession()</full_name>
        <docblock line="228">
          <description>Whether of not the server is using sessions</description>
          <long-description></long-description>
          <tag name="return" line="228" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="240" package="Zend_Amf\Server">
        <name>_checkAcl</name>
        <full_name>\Zend_Amf_Server::_checkAcl()</full_name>
        <docblock line="240">
          <description>Check if the ACL allows accessing the function or method</description>
          <long-description></long-description>
          <tag name="param" line="240" description="&lt;p&gt;Object or class being accessed&lt;/p&gt;" type="string|object" variable="$object">
            <type>string</type>
            <type>object</type>
          </tag>
          <tag name="param" line="240" description="&lt;p&gt;Function or method being accessed&lt;/p&gt;" type="string" variable="$function">
            <type>string</type>
          </tag>
          <tag name="return" line="240" description="" type="\unknown_type">
            <type>\unknown_type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>string|object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$function</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="284" package="Zend_Amf\Server">
        <name>getLoader</name>
        <full_name>\Zend_Amf_Server::getLoader()</full_name>
        <docblock line="284">
          <description>Get PluginLoader for the Server</description>
          <long-description></long-description>
          <tag name="return" line="284" description="" type="\Zend_Loader_PluginLoader">
            <type>\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="302" package="Zend_Amf\Server">
        <name>_dispatch</name>
        <full_name>\Zend_Amf_Server::_dispatch()</full_name>
        <docblock line="302">
          <description>Loads a remote class or method and executes the function and returns
the result</description>
          <long-description></long-description>
          <tag name="param" line="302" description="&lt;p&gt;Is the method to execute&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="302" description="&lt;p&gt;values for the method&lt;/p&gt;" type="mixed" variable="$param">
            <type>mixed</type>
          </tag>
          <tag name="return" line="302" description="$response the result of executing the method" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="302" description="" type="\Zend_Amf_Server_Exception">
            <type>\Zend_Amf_Server_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="387" package="Zend_Amf\Server">
        <name>_loadCommandMessage</name>
        <full_name>\Zend_Amf_Server::_loadCommandMessage()</full_name>
        <docblock line="387">
          <description>Handles each of the 11 different command message types.</description>
          <long-description>A command message is a flex.messaging.messages.CommandMessage</long-description>
          <tag name="see" line="387" description="" link="\Zend_Amf_Value_Messaging_CommandMessage"/>
          <tag name="param" line="387" description="" type="\Zend_Amf_Value_Messaging_CommandMessage" variable="$message">
            <type>\Zend_Amf_Value_Messaging_CommandMessage</type>
          </tag>
          <tag name="return" line="387" description="" type="\Zend_Amf_Value_Messaging_AcknowledgeMessage">
            <type>\Zend_Amf_Value_Messaging_AcknowledgeMessage</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\Zend_Amf_Value_Messaging_CommandMessage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="434" package="Zend_Amf\Server">
        <name>_errorMessage</name>
        <full_name>\Zend_Amf_Server::_errorMessage()</full_name>
        <docblock line="434">
          <description>Create appropriate error message</description>
          <long-description></long-description>
          <tag name="param" line="434" description="&lt;p&gt;Current AMF encoding&lt;/p&gt;" type="integer" variable="$objectEncoding">
            <type>integer</type>
          </tag>
          <tag name="param" line="434" description="&lt;p&gt;Message that was being processed when error happened&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="434" description="&lt;p&gt;Error description&lt;/p&gt;" type="string" variable="$description">
            <type>string</type>
          </tag>
          <tag name="param" line="434" description="&lt;p&gt;Detailed data about the error&lt;/p&gt;" type="mixed" variable="$detail">
            <type>mixed</type>
          </tag>
          <tag name="param" line="434" description="&lt;p&gt;Error code&lt;/p&gt;" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="434" description="&lt;p&gt;Error line&lt;/p&gt;" type="integer" variable="$line">
            <type>integer</type>
          </tag>
          <tag name="return" line="434" description="" type="\Zend_Amf_Value_Messaging_ErrorMessage|array">
            <type>\Zend_Amf_Value_Messaging_ErrorMessage</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objectEncoding</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$detail</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$line</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="463" package="Zend_Amf\Server">
        <name>_handleAuth</name>
        <full_name>\Zend_Amf_Server::_handleAuth()</full_name>
        <docblock line="463">
          <description>Handle AMF authentication</description>
          <long-description></long-description>
          <tag name="param" line="463" description="" type="string" variable="$userid">
            <type>string</type>
          </tag>
          <tag name="param" line="463" description="" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="463" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userid</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="495" package="Zend_Amf\Server">
        <name>_handle</name>
        <full_name>\Zend_Amf_Server::_handle()</full_name>
        <docblock line="495">
          <description>Takes the deserialized AMF request and performs any operations.</description>
          <long-description></long-description>
          <tag name="todo" line="495" description="should implement and SPL observer pattern for custom AMF headers"/>
          <tag name="todo" line="495" description="DescribeService support"/>
          <tag name="param" line="495" description="" type="\Zend_Amf_Request" variable="$request">
            <type>\Zend_Amf_Request</type>
          </tag>
          <tag name="return" line="495" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
          <tag name="throws" line="495" description="" type="\Zend_Amf_server_Exception|\Exception">
            <type>\Zend_Amf_server_Exception</type>
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\Zend_Amf_Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="641" package="Zend_Amf\Server">
        <name>handle</name>
        <full_name>\Zend_Amf_Server::handle()</full_name>
        <docblock line="641">
          <description>Handle an AMF call from the gateway.</description>
          <long-description>Requests may be passed in, or the server may automagically determine the
request based on defaults. Dispatches server request to appropriate
method and returns a response</long-description>
          <tag name="param" line="641" description="&lt;p&gt;Optional&lt;/p&gt;" type="null|\Zend_Amf_Request" variable="$request">
            <type>null</type>
            <type>\Zend_Amf_Request</type>
          </tag>
          <tag name="return" line="641" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::handle()" refers="\Zend_Server_Interface::handle()" link="/classes/Zend_Server_Interface.html#method_handle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>null|\Zend_Amf_Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="678" package="Zend_Amf\Server">
        <name>setRequest</name>
        <full_name>\Zend_Amf_Server::setRequest()</full_name>
        <docblock line="678">
          <description>Set request object</description>
          <long-description></long-description>
          <tag name="param" line="678" description="" type="string|\Zend_Amf_Request" variable="$request">
            <type>string</type>
            <type>\Zend_Amf_Request</type>
          </tag>
          <tag name="return" line="678" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>string|\Zend_Amf_Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="699" package="Zend_Amf\Server">
        <name>getRequest</name>
        <full_name>\Zend_Amf_Server::getRequest()</full_name>
        <docblock line="699">
          <description>Return currently registered request object</description>
          <long-description></long-description>
          <tag name="return" line="699" description="" type="null|\Zend_Amf_Request">
            <type>null</type>
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="715" package="Zend_Amf\Server">
        <name>setResponse</name>
        <full_name>\Zend_Amf_Server::setResponse()</full_name>
        <docblock line="715">
          <description>Public access method to private Zend_Amf_Server_Response reference</description>
          <long-description></long-description>
          <tag name="param" line="715" description="" type="string|\Zend_Amf_Server_Response" variable="$response">
            <type>string</type>
            <type>\Zend_Amf_Server_Response</type>
          </tag>
          <tag name="return" line="715" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>string|\Zend_Amf_Server_Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="736" package="Zend_Amf\Server">
        <name>getResponse</name>
        <full_name>\Zend_Amf_Server::getResponse()</full_name>
        <docblock line="736">
          <description>get a reference to the Zend_Amf_response instance</description>
          <long-description></long-description>
          <tag name="return" line="736" description="" type="\Zend_Amf_Server_Response">
            <type>\Zend_Amf_Server_Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="760" package="Zend_Amf\Server">
        <name>setClass</name>
        <full_name>\Zend_Amf_Server::setClass()</full_name>
        <docblock line="760">
          <description>Attach a class or object to the server</description>
          <long-description>Class may be either a class name or an instantiated object. Reflection
is done on the class or object to determine the available public
methods, and each is attached to the server as and available method. If
a $namespace has been provided, that namespace is used to prefix
AMF service call.</long-description>
          <tag name="param" line="760" description="" type="string|object" variable="$class">
            <type>string</type>
            <type>object</type>
          </tag>
          <tag name="param" line="760" description="&lt;p&gt;Optional&lt;/p&gt;" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="760" description="&lt;p&gt;Optional arguments to pass to a method&lt;/p&gt;" type="mixed" variable="$arg">
            <type>mixed</type>
          </tag>
          <tag name="return" line="760" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
          <tag name="throws" line="760" description="on invalid input" type="\Zend_Amf_Server_Exception">
            <type>\Zend_Amf_Server_Exception</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::setClass()" refers="\Zend_Server_Interface::setClass()" link="/classes/Zend_Server_Interface.html#method_setClass"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string|object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="801" package="Zend_Amf\Server">
        <name>addFunction</name>
        <full_name>\Zend_Amf_Server::addFunction()</full_name>
        <docblock line="801">
          <description>Attach a function to the server</description>
          <long-description>Additional arguments to pass to the function at dispatch may be passed;
any arguments following the namespace will be aggregated and passed at
dispatch time.</long-description>
          <tag name="param" line="801" description="&lt;p&gt;Valid callback&lt;/p&gt;" type="string|array" variable="$function">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="801" description="&lt;p&gt;Optional namespace prefix&lt;/p&gt;" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="801" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
          <tag name="throws" line="801" description="" type="\Zend_Amf_Server_Exception">
            <type>\Zend_Amf_Server_Exception</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::addFunction()" refers="\Zend_Server_Interface::addFunction()" link="/classes/Zend_Server_Interface.html#method_addFunction"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$function</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="833" package="Zend_Amf\Server">
        <name>addDirectory</name>
        <full_name>\Zend_Amf_Server::addDirectory()</full_name>
        <docblock line="833">
          <description>Creates an array of directories in which services can reside.</description>
          <long-description>TODO: add support for prefixes?</long-description>
          <tag name="param" line="833" description="" type="string" variable="$dir">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dir</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="843" package="Zend_Amf\Server">
        <name>getDirectory</name>
        <full_name>\Zend_Amf_Server::getDirectory()</full_name>
        <docblock line="843">
          <description>Returns an array of directories that can hold services.</description>
          <long-description></long-description>
          <tag name="return" line="843" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="856" package="Zend_Amf\Server">
        <name>_buildDispatchTable</name>
        <full_name>\Zend_Amf_Server::_buildDispatchTable()</full_name>
        <docblock line="856">
          <description>(Re)Build the dispatch table</description>
          <long-description>The dispatch table consists of a an array of method name =&gt;
Zend_Server_Reflection_Function_Abstract pairs</long-description>
          <tag name="return" line="856" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="901" package="Zend_Amf\Server">
        <name>fault</name>
        <full_name>\Zend_Amf_Server::fault()</full_name>
        <docblock line="901">
          <description>Raise a server fault</description>
          <long-description>Unimplemented</long-description>
          <tag name="param" line="901" description="" type="string|\Exception" variable="$fault">
            <type>string</type>
            <type>\Exception</type>
          </tag>
          <tag name="return" line="901" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::fault()" refers="\Zend_Server_Interface::fault()" link="/classes/Zend_Server_Interface.html#method_fault"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fault</name>
          <default>null</default>
          <type>string|\Exception</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>404</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="913" package="Zend_Amf\Server">
        <name>getFunctions</name>
        <full_name>\Zend_Amf_Server::getFunctions()</full_name>
        <docblock line="913">
          <description>Returns a list of registered methods</description>
          <long-description>Returns an array of dispatchables (Zend_Server_Reflection_Function,
_Method, and _Class items).</long-description>
          <tag name="return" line="913" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::getFunctions()" refers="\Zend_Server_Interface::getFunctions()" link="/classes/Zend_Server_Interface.html#method_getFunctions"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="926" package="Zend_Amf\Server">
        <name>setPersistence</name>
        <full_name>\Zend_Amf_Server::setPersistence()</full_name>
        <docblock line="926">
          <description>Set server persistence</description>
          <long-description>Unimplemented</long-description>
          <tag name="param" line="926" description="" type="mixed" variable="$mode">
            <type>mixed</type>
          </tag>
          <tag name="return" line="926" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::setPersistence()" refers="\Zend_Server_Interface::setPersistence()" link="/classes/Zend_Server_Interface.html#method_setPersistence"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mode</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="938" package="Zend_Amf\Server">
        <name>loadFunctions</name>
        <full_name>\Zend_Amf_Server::loadFunctions()</full_name>
        <docblock line="938">
          <description>Load server definition</description>
          <long-description>Unimplemented</long-description>
          <tag name="param" line="938" description="" type="array" variable="$definition">
            <type>array</type>
          </tag>
          <tag name="return" line="938" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::loadFunctions()" refers="\Zend_Server_Interface::loadFunctions()" link="/classes/Zend_Server_Interface.html#method_loadFunctions"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$definition</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="949" package="Zend_Amf\Server">
        <name>setClassMap</name>
        <full_name>\Zend_Amf_Server::setClassMap()</full_name>
        <docblock line="949">
          <description>Map ActionScript classes to PHP classes</description>
          <long-description></long-description>
          <tag name="param" line="949" description="" type="string" variable="$asClass">
            <type>string</type>
          </tag>
          <tag name="param" line="949" description="" type="string" variable="$phpClass">
            <type>string</type>
          </tag>
          <tag name="return" line="949" description="" type="\Zend_Amf_Server">
            <type>\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asClass</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$phpClass</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="963" package="Zend_Amf\Server">
        <name>listMethods</name>
        <full_name>\Zend_Amf_Server::listMethods()</full_name>
        <docblock line="963">
          <description>List all available methods</description>
          <long-description>Returns an array of method names.</long-description>
          <tag name="return" line="963" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="978" package="Zend_Amf\Server">
        <name>_castParameters</name>
        <full_name>\Zend_Amf_Server::_castParameters()</full_name>
        <docblock line="978">
          <description>Cast parameters</description>
          <long-description>Takes the provided parameters from the request, and attempts to cast them
to objects, if the prototype defines any as explicit object types</long-description>
          <tag name="param" line="978" description="" type="\Reflection" variable="$reflectionMethod">
            <type>\Reflection</type>
          </tag>
          <tag name="param" line="978" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="978" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reflectionMethod</name>
          <default></default>
          <type>\Reflection</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="58">Make the reflection methods cache and autoload.</todo>
      <todo line="495">should implement and SPL observer pattern for custom AMF headers</todo>
      <todo line="495">DescribeService support</todo>
    </markers>
    <parse_markers>
      <error line="216" code="PPC:ERR-50008">No summary for method setSession()</error>
      <error line="302" code="PPC:ERR-50015">Argument $source is missing from the Docblock of _dispatch</error>
      <error line="901" code="PPC:ERR-50015">Argument $code is missing from the Docblock of fault</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="Amf/Response/Http.php" generated-path="Amf.Response.Http.html" hash="b78e9bc9456fbd043be7f71279adeaae" package="Zend_Amf\Response">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="subpackage" line="0" description="Response"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="34" package="Zend_Amf\Response">
      <extends>\Zend_Amf_Response</extends>
      <name>Zend_Amf_Response_Http</name>
      <full_name>\Zend_Amf_Response_Http</full_name>
      <docblock line="34">
        <description>Creates the proper http headers and send the serialized AMF stream to standard out.</description>
        <long-description></long-description>
        <tag name="package" line="34" description="Zend_Amf"/>
        <tag name="subpackage" line="34" description="Response"/>
        <tag name="copyright" line="34" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="34" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Amf_Response" refers="\Zend_Amf_Response" link="/classes/Zend_Amf_Response.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Amf">
        <name>$_objectEncoding</name>
        <full_name>\Zend_Amf_Response::_objectEncoding</full_name>
        <default>0</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="43" description="&lt;p&gt;Object encoding for response&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="Zend_Amf">
        <name>$_bodies</name>
        <full_name>\Zend_Amf_Response::_bodies</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Array of Zend_Amf_Value_MessageBody objects</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="55" package="Zend_Amf">
        <name>$_headers</name>
        <full_name>\Zend_Amf_Response::_headers</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Array of Zend_Amf_Value_MessageHeader objects</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="60" package="Zend_Amf">
        <name>$_outputStream</name>
        <full_name>\Zend_Amf_Response::_outputStream</full_name>
        <default></default>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="\Zend_Amf_Parse_OutputStream" variable="">
            <type>\Zend_Amf_Parse_OutputStream</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="41" package="Zend_Amf\Response">
        <name>getResponse</name>
        <full_name>\Zend_Amf_Response_Http::getResponse()</full_name>
        <docblock line="41">
          <description>Create the application response header for AMF and sends the serialized AMF string</description>
          <long-description></long-description>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Amf_Response::getResponse()" refers="\Zend_Amf_Response::getResponse()" link="/classes/Zend_Amf_Response.html#method_getResponse"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="57" package="Zend_Amf\Response">
        <name>isIeOverSsl</name>
        <full_name>\Zend_Amf_Response_Http::isIeOverSsl()</full_name>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="Zend_Amf">
        <name>finalize</name>
        <full_name>\Zend_Amf_Response::finalize()</full_name>
        <docblock line="67">
          <description>Instantiate new output stream and start serialization</description>
          <long-description></long-description>
          <tag name="return" line="67" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="Zend_Amf">
        <name>writeMessage</name>
        <full_name>\Zend_Amf_Response::writeMessage()</full_name>
        <docblock line="81">
          <description>Serialize the PHP data types back into Actionscript and
create and AMF stream.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="\Zend_Amf_Parse_OutputStream" variable="$stream">
            <type>\Zend_Amf_Parse_OutputStream</type>
          </tag>
          <tag name="return" line="81" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_OutputStream</type>
        </argument>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="135" package="Zend_Amf">
        <name>getResponse</name>
        <full_name>\Zend_Amf_Response::getResponse()</full_name>
        <docblock line="135">
          <description>Return the output stream content</description>
          <long-description></long-description>
          <tag name="return" line="135" description="The contents of the output stream" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="145" package="Zend_Amf">
        <name>__toString</name>
        <full_name>\Zend_Amf_Response::__toString()</full_name>
        <docblock line="145">
          <description>Return the output stream content</description>
          <long-description></long-description>
          <tag name="return" line="145" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="156" package="Zend_Amf">
        <name>addAmfBody</name>
        <full_name>\Zend_Amf_Response::addAmfBody()</full_name>
        <docblock line="156">
          <description>Add an AMF body to be sent to the Flash Player</description>
          <long-description></long-description>
          <tag name="param" line="156" description="" type="\Zend_Amf_Value_MessageBody" variable="$body">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
          <tag name="return" line="156" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$body</name>
          <default></default>
          <type>\Zend_Amf_Value_MessageBody</type>
        </argument>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="167" package="Zend_Amf">
        <name>getAmfBodies</name>
        <full_name>\Zend_Amf_Response::getAmfBodies()</full_name>
        <docblock line="167">
          <description>Return an array of AMF bodies to be serialized</description>
          <long-description></long-description>
          <tag name="return" line="167" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="178" package="Zend_Amf">
        <name>addAmfHeader</name>
        <full_name>\Zend_Amf_Response::addAmfHeader()</full_name>
        <docblock line="178">
          <description>Add an AMF Header to be sent back to the flash player</description>
          <long-description></long-description>
          <tag name="param" line="178" description="" type="\Zend_Amf_Value_MessageHeader" variable="$header">
            <type>\Zend_Amf_Value_MessageHeader</type>
          </tag>
          <tag name="return" line="178" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$header</name>
          <default></default>
          <type>\Zend_Amf_Value_MessageHeader</type>
        </argument>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="189" package="Zend_Amf">
        <name>getAmfHeaders</name>
        <full_name>\Zend_Amf_Response::getAmfHeaders()</full_name>
        <docblock line="189">
          <description>Retrieve attached AMF message headers</description>
          <long-description></long-description>
          <tag name="return" line="189" description="Array of Zend_Amf_Value_MessageHeader objects" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="200" package="Zend_Amf">
        <name>setObjectEncoding</name>
        <full_name>\Zend_Amf_Response::setObjectEncoding()</full_name>
        <docblock line="200">
          <description>Set the AMF encoding that will be used for serialization</description>
          <long-description></long-description>
          <tag name="param" line="200" description="" type="integer" variable="$encoding">
            <type>integer</type>
          </tag>
          <tag name="return" line="200" description="" type="\Zend_Amf_Response">
            <type>\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$encoding</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Amf_Response</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="57" code="PPC:ERR-50008">No summary for method isIeOverSsl()</error>
    </parse_markers>
    <source>eJzdVVFv2zYQftevuBUGZGe25QQI0MnrmixzWwOJV8TuHrYWBi2dLK4SyZGUFXfNf9+RlrzYSYduj9NDHB6P3333fUfp+5cqV0F0chLACfyKIoVXmpVYS/2RIi54Pb2azOaTZrXIuQEjK50gZLxAcMtq9TsmFqwEmyMIrOHH+U9Q8ASFQYox69JWlUgLTB1KzW1OcQoqlnxka4IR/qyHbCoO7Z0duuypP84KI4FtGC/YqnCoWlbr3J8itkU6qHmKgxpXQOU89rvb69idz61VcRRlbWPDT9TnMJFl1FCMiPJgZTy1aQZbWUHKUxDSgsYE+QaBQSLVFmTmC7atMdKLaYRK7DhJhyBXllE73P4Dxz6oAhkhGCc5E4AlNeZOk4gN+kVLk/SGGiGhNJ/u+DV8eFliypnFYjtsHLpIaLmWegvgDfWxVuYmtrwsMx8n69qtWzRKUtkdBoFrvs4twNX+327Sg7PR6HxwNjo93w3LApNcyEKuOZLe80uYimQI3Ubxuq73Wvc8biscPV/tikuGWTNU17s9D7ZBbbgUbrszTTsUiwI3yvsWl21PbkfjHxXXuJSCRjd0KRGlRG3KkO5BOA7aq3ClkWQ03jqlpULtCUOOLKWy3nlvhkswqDkr+CdM4fLmFRhLh0vnpLGUx3QKsrJ7f/6HXkRBUjBjHgu/fONEwztLG09sB38GDtBr7p5Wd68qU4qqM+ss1q2RO/0hk9pL3dpgvuADF+sGuS1wodFWWhxuRv5XVSsqCFklEl90jbYl2u35jB1d9/AMut80w7AkBrbb6z3YblM67kU0+IGbKf5M4zo3xeM8b4BH6oZXLMlxcCWF1bKI6crTsg9lZexA44Z6S0mdsDf+IsBbzdYli5tejjPvAQsS8avrCzn47xTaw49IBE+dmtwpup0mpi9M1YfT72AmN/Tz/BRGz+Pzs3g0gtc3i2OsPW9iTCYMFluF8cPJie4GrMweHvu7fDMJit7gwsbxgd27/PtgNxhaWvrA0VjtZ+PA0aPZ6BhTwAtKMWi7neV8cvvL5Pa38M1i8XYefujBS3gUhBgy+sDh+HDAPNLnzzRHHvIFhDKjZo4nKIpgOp1TP0pqa+AZJT3rQ50jXSYDkq6GhpWWtXFvLsNLVWwhlSK0oKSqCvLzAK7R5YhQo4VvsGJADR52sXxHq+Xl68lsEX446kNpXC9LZpO8G0ZjuJlPJ/A+/fb9kP6Mo7DvEJ/qakZf4BueaDmXmaX3mUUt0ALNSiE16n/HukmwusLW3fvgL96GsgY=</source>
  </file>
  <file path="Amf/Auth/Abstract.php" generated-path="Amf.Auth.Abstract.html" hash="c6d5c60259023f9f916fcd0a32580b31" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="33" package="Zend_Amf\Auth">
      <extends/>
      <implements>\Zend_Auth_Adapter_Interface</implements>
      <name>Zend_Amf_Auth_Abstract</name>
      <full_name>\Zend_Amf_Auth_Abstract</full_name>
      <docblock line="33">
        <description>Base abstract class for AMF authentication implementation</description>
        <long-description></long-description>
        <tag name="package" line="33" description="Zend_Amf"/>
        <tag name="subpackage" line="33" description="Auth"/>
        <tag name="copyright" line="33" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="33" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="35" package="Zend_Amf\Auth">
        <name>$_username</name>
        <full_name>\Zend_Amf_Auth_Abstract::_username</full_name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Amf\Auth">
        <name>$_password</name>
        <full_name>\Zend_Amf_Auth_Abstract::_password</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Zend_Amf\Auth">
        <name>setCredentials</name>
        <full_name>\Zend_Amf_Auth_Abstract::setCredentials()</full_name>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="38" code="PPC:ERR-50015">Argument $username is missing from the Docblock of setCredentials</error>
      <error line="38" code="PPC:ERR-50015">Argument $password is missing from the Docblock of setCredentials</error>
      <error line="38" code="PPC:ERR-50008">No summary for method setCredentials()</error>
      <error line="35" code="PPC:ERR-50007">No summary for property $_username</error>
      <error line="36" code="PPC:ERR-50007">No summary for property $_password</error>
    </parse_markers>
    <source>eJzVVMtu2zAQvOsr9iAgthFLboBckj7suAlgwM2hTi+9GBS5sthIpEpSVt0i/94lLbovNOi1Pgjm7nB2dpbkyzdt1Sb5ZJLABD6iEnBnWIO9No8U8cH1anl7v7kdVg+VtGB1ZzhCKWsEv+yKT8gdOA2uQlDYw83mLdSSo7JIMeY8rOiUqFF4ll66iuIUbBl/ZDuiUWFvoBwqZu6Lyzx6Fbaz2mpgeyZrVtSe1ehuV4VdpLYW014KnPZYAJUL3B/er6/8/sq59irPy9hY9pX6zLhu8kFiTpKnhQ3SViUcdAdCClDagUGOco/AgOv2ALoMBWNrjPxiBqFTR03aM+jCMWpHumc0nkNbIyMG6y1nCrChxvxuMnFgn0eZ5Df0CJxgAe71DXpk06CQzGF9yIYJzTktd9ocAMJAQyzaPMS2i6Y8YonEyF3lAJanvyM+hovZ7HJ6MXtxeTwUD8grpWu9k0i+bhawUjyD0eBs3/cnT8eBNxpEv39234Phfjg862MukO3RWKmVT6crkVIsT/yRhblFHPrpXLVdCNY6NNuVom/J6IQS0ODnThrcakXrMw/OPTgfwPkJnNFFOLtO4l248dNhhXWG0dHmNbMWSm1g8e4OGBGgcpKc9rpkQ8NsKBCWcQx/s5xuS0x5If/LGPLkNzNiU4P3MXkywz43meRb4su0Rjt6OVBAuu0sGkXirv/ItFSOJAsaTkh1BUmGslM82G/RLQ0KPxB6I0ZpJDqHNO4cw7FeOEL+bZi+PtWDV5D+WvtnVGTwqB86POIpeUq+AyJrtjA=</source>
  </file>
  <file path="Amf/Request.php" generated-path="Amf.Request.html" hash="453a779b6a43207829103b9689a2378c" package="Zend_Amf">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Amf"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="46" package="Zend_Amf">
      <extends/>
      <name>Zend_Amf_Request</name>
      <full_name>\Zend_Amf_Request</full_name>
      <docblock line="46">
        <description>Handle the incoming AMF request by deserializing the data to php object
types and storing the data for Zend_Amf_Server to handle for processing.</description>
        <long-description></long-description>
        <tag name="todo" line="46" description="Currently not checking if the object needs to be Type Mapped to a server object."/>
        <tag name="package" line="46" description="Zend_Amf"/>
        <tag name="copyright" line="46" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="46" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Amf">
        <name>$_clientType</name>
        <full_name>\Zend_Amf_Request::_clientType</full_name>
        <default>0</default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;AMF client type (AMF0, AMF3)&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="Zend_Amf">
        <name>$_bodies</name>
        <full_name>\Zend_Amf_Request::_bodies</full_name>
        <default>array()</default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;Message bodies&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="61" package="Zend_Amf">
        <name>$_headers</name>
        <full_name>\Zend_Amf_Request::_headers</full_name>
        <default>array()</default>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="61" description="&lt;p&gt;Message headers&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="66" package="Zend_Amf">
        <name>$_objectEncoding</name>
        <full_name>\Zend_Amf_Request::_objectEncoding</full_name>
        <default>0</default>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="66" description="&lt;p&gt;Message encoding to use for objects in response&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="71" package="Zend_Amf">
        <name>$_inputStream</name>
        <full_name>\Zend_Amf_Request::_inputStream</full_name>
        <default></default>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="\Zend_Amf_Parse_InputStream" variable="">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="76" package="Zend_Amf">
        <name>$_deserializer</name>
        <full_name>\Zend_Amf_Request::_deserializer</full_name>
        <default></default>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="76" description="" type="\Zend_Amf_Parse_AMF0_Deserializer" variable="">
            <type>\Zend_Amf_Parse_AMF0_Deserializer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="82" package="Zend_Amf">
        <name>$_time</name>
        <full_name>\Zend_Amf_Request::_time</full_name>
        <default></default>
        <docblock line="82">
          <description>Time of the request</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="90" package="Zend_Amf">
        <name>initialize</name>
        <full_name>\Zend_Amf_Request::initialize()</full_name>
        <docblock line="90">
          <description>Prepare the AMF InputStream for parsing.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="" type="string" variable="$request">
            <type>string</type>
          </tag>
          <tag name="return" line="90" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="Zend_Amf">
        <name>readMessage</name>
        <full_name>\Zend_Amf_Request::readMessage()</full_name>
        <docblock line="104">
          <description>Takes the raw AMF input stream and converts it into valid PHP objects</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="\Zend_Amf_Parse_InputStream" variable="">
            <type>\Zend_Amf_Parse_InputStream</type>
          </tag>
          <tag name="return" line="104" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$stream</name>
          <default></default>
          <type>\Zend_Amf_Parse_InputStream</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="144" package="Zend_Amf">
        <name>readHeader</name>
        <full_name>\Zend_Amf_Request::readHeader()</full_name>
        <docblock line="144">
          <description>Deserialize a message header from the input stream.</description>
          <long-description>A message header is structured as:
- NAME String
- MUST UNDERSTAND Boolean
- LENGTH Int
- DATA Object</long-description>
          <tag name="return" line="144" description="" type="\Zend_Amf_Value_MessageHeader">
            <type>\Zend_Amf_Value_MessageHeader</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="Zend_Amf">
        <name>readBody</name>
        <full_name>\Zend_Amf_Request::readBody()</full_name>
        <docblock line="166">
          <description>Deserialize a message body from the input stream</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="\Zend_Amf_Value_MessageBody">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="203" package="Zend_Amf">
        <name>getAmfBodies</name>
        <full_name>\Zend_Amf_Request::getAmfBodies()</full_name>
        <docblock line="203">
          <description>Return an array of the body objects that were found in the amf request.</description>
          <long-description></long-description>
          <tag name="return" line="203" description="{target, response, length, content}" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="214" package="Zend_Amf">
        <name>addAmfBody</name>
        <full_name>\Zend_Amf_Request::addAmfBody()</full_name>
        <docblock line="214">
          <description>Accessor to private array of message bodies.</description>
          <long-description></long-description>
          <tag name="param" line="214" description="" type="\Zend_Amf_Value_MessageBody" variable="$message">
            <type>\Zend_Amf_Value_MessageBody</type>
          </tag>
          <tag name="return" line="214" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\Zend_Amf_Value_MessageBody</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="225" package="Zend_Amf">
        <name>getAmfHeaders</name>
        <full_name>\Zend_Amf_Request::getAmfHeaders()</full_name>
        <docblock line="225">
          <description>Return an array of headers that were found in the amf request.</description>
          <long-description></long-description>
          <tag name="return" line="225" description="{operation, mustUnderstand, length, param}" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="235" package="Zend_Amf">
        <name>getObjectEncoding</name>
        <full_name>\Zend_Amf_Request::getObjectEncoding()</full_name>
        <docblock line="235">
          <description>Return the either 0 or 3 for respect AMF version</description>
          <long-description></long-description>
          <tag name="return" line="235" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="Zend_Amf">
        <name>setObjectEncoding</name>
        <full_name>\Zend_Amf_Request::setObjectEncoding()</full_name>
        <docblock line="246">
          <description>Set the object response encoding</description>
          <long-description></long-description>
          <tag name="param" line="246" description="" type="mixed" variable="$int">
            <type>mixed</type>
          </tag>
          <tag name="return" line="246" description="" type="\Zend_Amf_Request">
            <type>\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$int</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="46">Currently not checking if the object needs to be Type Mapped to a server object.</todo>
    </markers>
    <parse_markers>
      <error line="71" code="PPC:ERR-50007">No summary for property $_inputStream</error>
      <error line="76" code="PPC:ERR-50007">No summary for property $_deserializer</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Server/Definition.php" generated-path="Server.Definition.html" hash="2a164b1011739c7564c2ba2fc27afce7" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="31" package="Zend_Server">
      <extends/>
      <implements>\Countable</implements>
      <implements>\Iterator</implements>
      <name>Zend_Server_Definition</name>
      <full_name>\Zend_Server_Definition</full_name>
      <docblock line="31">
        <description>Server methods metadata</description>
        <long-description></long-description>
        <tag name="todo" line="31" description="Implement iterator"/>
        <tag name="category" line="31" description="Zend"/>
        <tag name="package" line="31" description="Zend_Server"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="36" package="Zend_Server">
        <name>$_methods</name>
        <full_name>\Zend_Server_Definition::_methods</full_name>
        <default>array()</default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="&lt;p&gt;Array of Zend_Server_Method_Definition objects&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="41" package="Zend_Server">
        <name>$_overwriteExistingMethods</name>
        <full_name>\Zend_Server_Definition::_overwriteExistingMethods</full_name>
        <default>false</default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="&lt;p&gt;Whether or not overwriting existing methods is allowed&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="49" package="Zend_Server">
        <name>__construct</name>
        <full_name>\Zend_Server_Definition::__construct()</full_name>
        <docblock line="49">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="49" description="" type="null|array" variable="$methods">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$methods</name>
          <default>null</default>
          <type>null|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend_Server">
        <name>setOverwriteExistingMethods</name>
        <full_name>\Zend_Server_Definition::setOverwriteExistingMethods()</full_name>
        <docblock line="62">
          <description>Set flag indicating whether or not overwriting existing methods is allowed</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="mixed" variable="$flag">
            <type>mixed</type>
          </tag>
          <tag name="return" line="62" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flag</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="Zend_Server">
        <name>addMethod</name>
        <full_name>\Zend_Server_Definition::addMethod()</full_name>
        <docblock line="76">
          <description>Add method to definition</description>
          <long-description></long-description>
          <tag name="param" line="76" description="" type="array|\Zend_Server_Method_Definition" variable="$method">
            <type>array</type>
            <type>\Zend_Server_Method_Definition</type>
          </tag>
          <tag name="param" line="76" description="" type="null|string" variable="$name">
            <type>null</type>
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="" type="\Zend_Server_Definition">
            <type>\Zend_Server_Definition</type>
          </tag>
          <tag name="throws" line="76" description="if duplicate or invalid method provided" type="\Zend_Server_Exception">
            <type>\Zend_Server_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array|\Zend_Server_Method_Definition</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>null|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="113" package="Zend_Server">
        <name>addMethods</name>
        <full_name>\Zend_Server_Definition::addMethods()</full_name>
        <docblock line="113">
          <description>Add multiple methods</description>
          <long-description></long-description>
          <tag name="param" line="113" description="&lt;p&gt;Array of Zend_Server_Method_Definition objects or arrays&lt;/p&gt;" type="array" variable="$methods">
            <type>array</type>
          </tag>
          <tag name="return" line="113" description="" type="\Zend_Server_Definition">
            <type>\Zend_Server_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$methods</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="127" package="Zend_Server">
        <name>setMethods</name>
        <full_name>\Zend_Server_Definition::setMethods()</full_name>
        <docblock line="127">
          <description>Set all methods at once (overwrite)</description>
          <long-description></long-description>
          <tag name="param" line="127" description="&lt;p&gt;Array of Zend_Server_Method_Definition objects or arrays&lt;/p&gt;" type="array" variable="$methods">
            <type>array</type>
          </tag>
          <tag name="return" line="127" description="" type="\Zend_Server_Definition">
            <type>\Zend_Server_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$methods</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="Zend_Server">
        <name>hasMethod</name>
        <full_name>\Zend_Server_Definition::hasMethod()</full_name>
        <docblock line="140">
          <description>Does the definition have the given method?</description>
          <long-description></long-description>
          <tag name="param" line="140" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="140" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="Zend_Server">
        <name>getMethod</name>
        <full_name>\Zend_Server_Definition::getMethod()</full_name>
        <docblock line="151">
          <description>Get a given method definition</description>
          <long-description></long-description>
          <tag name="param" line="151" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="151" description="" type="null|\Zend_Server_Method_Definition">
            <type>null</type>
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="164" package="Zend_Server">
        <name>getMethods</name>
        <full_name>\Zend_Server_Definition::getMethods()</full_name>
        <docblock line="164">
          <description>Get all method definitions</description>
          <long-description></long-description>
          <tag name="return" line="164" description="Array of Zend_Server_Method_Definition objects" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="Zend_Server">
        <name>removeMethod</name>
        <full_name>\Zend_Server_Definition::removeMethod()</full_name>
        <docblock line="175">
          <description>Remove a method definition</description>
          <long-description></long-description>
          <tag name="param" line="175" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="175" description="" type="\Zend_Server_Definition">
            <type>\Zend_Server_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="188" package="Zend_Server">
        <name>clearMethods</name>
        <full_name>\Zend_Server_Definition::clearMethods()</full_name>
        <docblock line="188">
          <description>Clear all method definitions</description>
          <long-description></long-description>
          <tag name="return" line="188" description="" type="\Zend_Server_Definition">
            <type>\Zend_Server_Definition</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="199" package="Zend_Server">
        <name>toArray</name>
        <full_name>\Zend_Server_Definition::toArray()</full_name>
        <docblock line="199">
          <description>Cast definition to an array</description>
          <long-description></long-description>
          <tag name="return" line="199" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="213" package="Zend_Server">
        <name>count</name>
        <full_name>\Zend_Server_Definition::count()</full_name>
        <docblock line="213">
          <description>Countable: count of methods</description>
          <long-description></long-description>
          <tag name="return" line="213" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="223" package="Zend_Server">
        <name>current</name>
        <full_name>\Zend_Server_Definition::current()</full_name>
        <docblock line="223">
          <description>Iterator: current item</description>
          <long-description></long-description>
          <tag name="return" line="223" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="Zend_Server">
        <name>key</name>
        <full_name>\Zend_Server_Definition::key()</full_name>
        <docblock line="233">
          <description>Iterator: current item key</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="integer|string">
            <type>integer</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="243" package="Zend_Server">
        <name>next</name>
        <full_name>\Zend_Server_Definition::next()</full_name>
        <docblock line="243">
          <description>Iterator: advance to next method</description>
          <long-description></long-description>
          <tag name="return" line="243" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="253" package="Zend_Server">
        <name>rewind</name>
        <full_name>\Zend_Server_Definition::rewind()</full_name>
        <docblock line="253">
          <description>Iterator: return to first method</description>
          <long-description></long-description>
          <tag name="return" line="253" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="263" package="Zend_Server">
        <name>valid</name>
        <full_name>\Zend_Server_Definition::valid()</full_name>
        <docblock line="263">
          <description>Iterator: is the current index valid?</description>
          <long-description></long-description>
          <tag name="return" line="263" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="31">Implement iterator</todo>
    </markers>
    <source>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</source>
  </file>
  <file path="Server/Exception.php" generated-path="Server.Exception.html" hash="7d2c28d402cac888aa839dce50e3b76f" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="33" package="Zend_Server\Reflection">
      <extends>\Zend_Exception</extends>
      <name>Zend_Server_Exception</name>
      <full_name>\Zend_Server_Exception</full_name>
      <docblock line="33">
        <description>Zend_Server_Reflection exceptions</description>
        <long-description></long-description>
        <tag name="package" line="33" description="Zend_Server"/>
        <tag name="subpackage" line="33" description="Reflection"/>
        <tag name="version" line="33" description="$Id$"/>
        <tag name="inherited_from" description="\Zend_Exception" refers="\Zend_Exception" link="/classes/Zend_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <source>eJyNUsFO3DAQvecr5oAErNhki8QFKpWWbqVIKw4svfSycuxJ4uLYqe2s2Vb9d8ZOsi0cquYUP7958+Z53n/o2z4rFosMFvANtYAvlnUYjH0iJIKb8m59v11Pp8dWOnBmsByhlgohHofqO3IP3oBvETQG+LT9DEpy1A4JYz7SqkELhSKqBOlbwgnsGX9iDcnoVJskp465f/Z5ZJepnClngO2ZVKxSUdWaoWlTFblVYhmkwGXACqhd0v76sLmO9a33/XVR1PNg+U+aM+emKyaLBVleVi5ZK2s4mAGEFKCNB4sc5R6BATf9AUydGs6jMcqLWYRBj55MVDCVZzSO9P/weAG9QkYKLkbONGBHg8VqCnFSv51tUt4QEDjREj36m/zIrkMhmUd1yKcXuuV0bIw9AKQHTdgc84Tttmj3aEc66VjZtB7g7vh7xs/hcrW6Wl6u3l2Ne/GIvNVGmUYiRbv9CKXmOZxN4YYQjrGeJ905I/r++wEiGe6n/dmMdyRWZH9v6G79zLH30uh0ZfHHIC3ujKaVPI2E4kjIablPb15Xj6PvHrBWtLREApzpbo5wjuttVrTp89Wf+nRDDBe1TkpxkmxxxZx71fHoihp6wt3baX5lv7MX6FMrIg==</source>
  </file>
  <file path="Server/Reflection.php" generated-path="Server.Reflection.html" hash="bd1c753b38666409d801ba732ded8c0c" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="41" package="Zend_Server\Reflection">
      <extends/>
      <name>Zend_Server_Reflection</name>
      <full_name>\Zend_Server_Reflection</full_name>
      <docblock line="41">
        <description>Reflection for determining method signatures to use with server classes</description>
        <long-description></long-description>
        <tag name="category" line="41" description="Zend"/>
        <tag name="package" line="41" description="Zend_Server"/>
        <tag name="subpackage" line="41" description="Reflection"/>
        <tag name="copyright" line="41" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="41" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="41" description="$Id$"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="60" package="Zend_Server\Reflection">
        <name>reflectClass</name>
        <full_name>\Zend_Server_Reflection::reflectClass()</full_name>
        <docblock line="60">
          <description>Perform class reflection to create dispatch signatures</description>
          <long-description>Creates a [Zend_Server_Reflection_Class](/classes/Zend_Server_Reflection_Class.html) object for the class or
object provided.

If extra arguments should be passed to dispatchable methods, these may
be provided as an array to $argv.</long-description>
          <tag name="param" line="60" description="&lt;p&gt;Class name or object&lt;/p&gt;" type="string|object" variable="$class">
            <type>string</type>
            <type>object</type>
          </tag>
          <tag name="param" line="60" description="&lt;p&gt;Optional arguments to be used during the method call&lt;/p&gt;" type="null|array" variable="$argv">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="param" line="60" description="&lt;p&gt;Optional namespace with which to prefix the&#10;method name (used for the signature key). Primarily to avoid collisions,&#10;also for XmlRpc namespacing&lt;/p&gt;" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="60" description="" type="\Zend_Server_Reflection_Class">
            <type>\Zend_Server_Reflection_Class</type>
          </tag>
          <tag name="throws" line="60" description="" type="\Zend_Server_Reflection_Exception">
            <type>\Zend_Server_Reflection_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string|object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>false</default>
          <type>null|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="96" package="Zend_Server\Reflection">
        <name>reflectFunction</name>
        <full_name>\Zend_Server_Reflection::reflectFunction()</full_name>
        <docblock line="96">
          <description>Perform function reflection to create dispatch signatures</description>
          <long-description>Creates dispatch prototypes for a function. It returns a
[Zend_Server_Reflection_Function](/classes/Zend_Server_Reflection_Function.html) object.

If extra arguments should be passed to the dispatchable function, these
may be provided as an array to $argv.</long-description>
          <tag name="param" line="96" description="&lt;p&gt;Function name&lt;/p&gt;" type="string" variable="$function">
            <type>string</type>
          </tag>
          <tag name="param" line="96" description="&lt;p&gt;Optional arguments to be used during the method call&lt;/p&gt;" type="null|array" variable="$argv">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="param" line="96" description="&lt;p&gt;Optional namespace with which to prefix the&#10;function name (used for the signature key). Primarily to avoid&#10;collisions, also for XmlRpc namespacing&lt;/p&gt;" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="96" description="" type="\Zend_Server_Reflection_Function">
            <type>\Zend_Server_Reflection_Function</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Zend_Server_Reflection_Exception">
            <type>\Zend_Server_Reflection_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$function</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>false</default>
          <type>null|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJztVlFv2zYQfvevuBZGbQeJlBboS7tg2bIUMBC0RdIBw14MWjpZXChSoyjLXpP/viNFyrLTOGlWYCswv9iieN/dfXf3nX/4sczLQXxwMIAD+B1lCu80K7BR+ppO7OHF9Oz8/dW5f/qU8woqVesEIeMCwT7W8z8wMWAUmBxBYgM/X/0CgicoK6QzZuy1eS1TgalFabjJ6ZwOS5ZcswXBSGfrIL3HyKxMZG9PnTkTlQK2ZFywubCoWtWL3FlRtCI9aniKRw3Ogdw57F8vL95Y+9yY8k0cZyGx6C/KM0pUEfsQYwr5aF650KYZrFUNKU9BKgMaE+RLBAaJKtegMucwpMaIL6YRatnGpCyCmhtG6XCzJ8ZDKAUyQqgs5UwCFpSYtSYSPfppCJP4hgYhoWvuuo3Px8OLAlPODIp15Ct0mtDjQuk1gCuoOws0+7PZFeol6vY64Wi+yA3AWfdznEzg1fHx66NXxy9ft33xCZNcKqEWHInaq59gKpMIxp7cpmk6WicON3BEn0cXwF6G975/Ltp3BBYP+h3qg59dYiao7biSs3e1dD/cXY1/1lzjTEnq0ZG1iFuLeGMRB4uI2n/09iH8M8Gq6vHg7voO8uY1ZEpDigZ1wSWXCyjQ5CqFii8kM7UmeqkJaqLOjUnl4CGxmFg9scg0ouHtJpDvpfxwSmlUlrnhNB26Mjg27qnW4PPA4jje7ecAPqImzouWQxrprhLEc6KRqKR5r0pmkrxXBW8dQM7cRdIh+EzJyeu9vXJLKuA00dbajn/rWumA5l+XWi1JEtJoxxmpEK6MZqQui7pAaUhlc1WLFOZImkmdkNrgQ9ROfdo2qg6tPyK+YOuAZm28I2CVlRumNVtbhCE5WO56p06iWkFlNLXnjQ912Kbg0gNJpaRsfBo7drIW4qb14ODhQ2mZYaKXDbmmqGqbR1pbN44lPwkJE+KLscDQOqacafg60M2Rm5cm51RGwi+p0HxlcQOWh3fBj53vUJ6u6nCN60kEHzUvmObCccSWirZBooTgtgurw4DnVpKF+K0Ql2XSRUKRduFrJFj5gLD4u3ZfNPe19ex8lWDZzq27H7vvsp7TFBE/zNBX5mUtNLnDH7elO/TVOIGMAsfDPpknMBpNHF47PPbDMxjzataW2GNMJr0L9jPsTdOJW/2biD9sWb7t7G4Byb+Fd29muOKVqZ7ioZ/eHQc7OI9S7o5jr959AFcdF8BDBRqPpnLJhG0aP/bdvHejy4xhSd4mMBn1gx9sVaCt2YsX8Ixq4YaqPbrD07+SnwsuTHUvu3773ZOcH4w9/nx1N/Xvt6zvZo/tcb+g+bsT8VTZ726Skhpl1iWd2dFnnYfI/lFtsyKNDfb7l0X4GxL2xRP3gJWwrV0QYvLLoBNAkuR/tAxg2PEZQneq971sgKwf9FfvgIDSWwXfYAds/rz6699+DQQX4+GmMb5+GVgFaquwwZnAzQ08C0+dlHev/xMq1dHxfARRr4UjGD2/K1qBrB3d+l+Vt9t1vL2K77bYZJ9c3w7+BkK8Woc=</source>
  </file>
  <file path="Server/Cache.php" generated-path="Server.Cache.html" hash="3f610e6b2c4bd42c4abc01e1f2d67b17" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="30" package="Zend_Server">
      <extends/>
      <name>Zend_Server_Cache</name>
      <full_name>\Zend_Server_Cache</full_name>
      <docblock line="30">
        <description>Zend_Server_Cache: cache server definitions</description>
        <long-description></long-description>
        <tag name="category" line="30" description="Zend"/>
        <tag name="package" line="30" description="Zend_Server"/>
        <tag name="copyright" line="30" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="30" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="35" package="Zend_Server">
        <name>$_skipMethods</name>
        <full_name>\Zend_Server_Cache::_skipMethods</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;Methods to skip when caching server&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="50" package="Zend_Server">
        <name>save</name>
        <full_name>\Zend_Server_Cache::save()</full_name>
        <docblock line="50">
          <description>Cache a file containing the dispatch list.</description>
          <long-description>Serializes the server definition stores the information
in $filename.

Returns false on any error (typically, inability to write to file), true
on success.</long-description>
          <tag name="param" line="50" description="" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="param" line="50" description="" type="\Zend_Server_Interface" variable="$server">
            <type>\Zend_Server_Interface</type>
          </tag>
          <tag name="return" line="50" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$server</name>
          <default></default>
          <type>\Zend_Server_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="109" package="Zend_Server">
        <name>get</name>
        <full_name>\Zend_Server_Cache::get()</full_name>
        <docblock line="109">
          <description>Load server definition from a file</description>
          <long-description>Unserializes a stored server definition from $filename. Returns false if
it fails in any way, true on success.

Useful to prevent needing to build the server definition on each
request. Sample usage:

&lt;code&gt;
if (!Zend_Server_Cache::get($filename, $server)) {
    require_once 'Some/Service/Class.php';
    require_once 'Another/Service/Class.php';

    // Attach Some_Service_Class with namespace 'some'
    $server-&gt;attach('Some_Service_Class', 'some');

    // Attach Another_Service_Class with namespace 'another'
    $server-&gt;attach('Another_Service_Class', 'another');

    Zend_Server_Cache::save($filename, $server);
}

$response = $server-&gt;handle();
echo $response;
&lt;/code&gt;</long-description>
          <tag name="param" line="109" description="" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="\Zend_Server_Interface" variable="$server">
            <type>\Zend_Server_Interface</type>
          </tag>
          <tag name="return" line="109" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$server</name>
          <default></default>
          <type>\Zend_Server_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="Zend_Server">
        <name>delete</name>
        <full_name>\Zend_Server_Cache::delete()</full_name>
        <docblock line="138">
          <description>Remove a cache file</description>
          <long-description></long-description>
          <tag name="param" line="138" description="" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzdV91v2zYQf/dfcQOMxg5iKyvQFyfpkqUtECDLQ9y87MWgpZPFRSZVkorrtv7fd0d9WJYVJyswYBgRwDZ597uvH++Y89+yJOsFx8c9OIY/UUXwyYglrrR5pB3evL25/ng3/Vj++pxIC1bnJkSIZYrAP/P5Xxg6cBpcgqBwBb9PP0AqQ1QWaU84FpvnKkoxYpSVdAnt02YmwkexIBjldT1kaXHsvroxS994dZFaDeJJyFTMU0Y1Ol8kXou8TaPRSkY4WuEcyJzHfri/nbB+4lw2CYK4Cmz8jeIch3oZlC4G5PJobr1rNzGsdQ6RjEBpBwZDlE8IAkKdrUHH3mAVmqB8CYOQq8InzQh67gSFI90BH08gS1EQguWUCwW4pMBYm5JYol9WblK+YYUQkpgXZ/9Kf+RyiZEUDtP1uKzQZUg/F9qsAXxB/V6V5nJvNkXzhKYQJxwjF4kDuK6/DsIhvD09fTd6e/rru4IXnzFMlE71QiKldnoFNyocw6BM7mq1qtM69LhVjmi9ugAsDHclf26LMw9GzlqpFR/3b6I+7QW9JmvLgGbXIkxwQqmiD0oW70GEsVTSkbr9/6Yo6IWpsHY/Gb3vPdbwueLFyRSGWGvEGv5Al+jIMunso8xglaDyyZNqUaav1Ar8Z2a0o5uOEVgnnAyhP2O9CuaigB0Mz3pto94XYq2/4KFWfEXYCF+NSNpMuDAh4lu+8V6jUqRYpEjlN8qo66opeaJNeShVrM1S8HalThexzzYV5bUNfY8uN8pCTK0FgaCEWgMaow0M3DqToUjT9QlBiLlMpVtzmlZGOr7oPpDhCTiTY4XHzuRhiNa2LRG5qLBAvhoOuvaofd6s3o1yaGJBfba/Uwm4NN5vmGud7lYnnxNZqtLEuQqLBIknHNQmTw4bGXqkgjO8ZAyDX6SdFZ5vYYa1BK8fP0iKj2b4lWpoG3Lw5g0wACeOm+QgkoYPGiK0arTvO7hlpL5AZ/XJpld/7S9r6pUBjN4v0H0qY7c1FatYagWpKE8qROrozYR8qIk1bPnSb3Duwg+5bj022dQjSiKRv2Fa2Mrvto3KS6lmxU0q5XxQd5w1opzFNJ5Mdm7esAuIF980qXI82zvd7O00Ahy9F1FUYFcutKLaVW+WYYvSWTEO7xQuLi7g0hMmy92MvUTVpA1HWd77Om/DvShfpEcpwJe0ON/sNaZbLaKOrhIbmrtFu2rd5Qdlty1JFO3nWYRt72l1GxnXHcrRlkyZkb4BrcS6aCsH+smDxThPuQ1lBp8odcRHegdwP9X0zpJp9EyzpD8mY4Vj8EuO1HNhKpb0IIHc0gSctIydhzrC97W73BD2R+6ECNosX9VO6pIdlwX5kkuDM003D46meokBw9AYC655fo3pNXp09rzGFb3JEjQHlJq6QQBXzvHlY0uzUmnmlYo3KDtLw4ehLYkcNbXrhiI8xuBoH+TopNQbHjZfuv2CB6KQOuxEJxT7UWl3utJRsPZYqCpWZ3/TwunTmM00v1cazTYR/KgfbLXoCaS3ovX2edBk0X9iLrYY+++MxWem4p4YYdGYiPyEbEzGfzoXdxwsOg232kG/fmNVfZei7+i7P9Fjn7N05V+YZC5XjV5enf6EoZpzKbXs7YTfNdic96/o/ve41MV/d/592tHuX6Rog3Uo1GuIF2GKDtts2CVXF7f4KdVNp3Yuc5VK9dgQOOtK9TYxrUzvl2LT2/T+BjX6zQE=</source>
  </file>
  <file path="Server/Method/Callback.php" generated-path="Server.Method.Callback.html" hash="c0329db9789a7ce246277fb1092640c5" package="Zend_Server\Method">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="subpackage" line="0" description="Method"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Server\Method">
      <extends/>
      <name>Zend_Server_Method_Callback</name>
      <full_name>\Zend_Server_Method_Callback</full_name>
      <docblock line="32">
        <description>Method callback metadata</description>
        <long-description></long-description>
        <tag name="category" line="32" description="Zend"/>
        <tag name="package" line="32" description="Zend_Server"/>
        <tag name="subpackage" line="32" description="Method"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="37" package="Zend_Server\Method">
        <name>$_class</name>
        <full_name>\Zend_Server_Method_Callback::_class</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Class name for class method callback&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="42" package="Zend_Server\Method">
        <name>$_function</name>
        <full_name>\Zend_Server_Method_Callback::_function</full_name>
        <default></default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Function name for function callback&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="47" package="Zend_Server\Method">
        <name>$_method</name>
        <full_name>\Zend_Server_Method_Callback::_method</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Method name for class method callback&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="52" package="Zend_Server\Method">
        <name>$_type</name>
        <full_name>\Zend_Server_Method_Callback::_type</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Callback type&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="57" package="Zend_Server\Method">
        <name>$_types</name>
        <full_name>\Zend_Server_Method_Callback::_types</full_name>
        <default>array('function', 'static', 'instance')</default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Valid callback types&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="Zend_Server\Method">
        <name>__construct</name>
        <full_name>\Zend_Server_Method_Callback::__construct()</full_name>
        <docblock line="65">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="65" description="" type="null|array" variable="$options">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>null|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Server\Method">
        <name>setOptions</name>
        <full_name>\Zend_Server_Method_Callback::setOptions()</full_name>
        <docblock line="78">
          <description>Set object state from array of options</description>
          <long-description></long-description>
          <tag name="param" line="78" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="78" description="" type="\Zend_Server_Method_Callback">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="95" package="Zend_Server\Method">
        <name>setClass</name>
        <full_name>\Zend_Server_Method_Callback::setClass()</full_name>
        <docblock line="95">
          <description>Set callback class</description>
          <long-description></long-description>
          <tag name="param" line="95" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="95" description="" type="\Zend_Server_Method_Callback">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="109" package="Zend_Server\Method">
        <name>getClass</name>
        <full_name>\Zend_Server_Method_Callback::getClass()</full_name>
        <docblock line="109">
          <description>Get callback class</description>
          <long-description></long-description>
          <tag name="return" line="109" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="Zend_Server\Method">
        <name>setFunction</name>
        <full_name>\Zend_Server_Method_Callback::setFunction()</full_name>
        <docblock line="120">
          <description>Set callback function</description>
          <long-description></long-description>
          <tag name="param" line="120" description="" type="string" variable="$function">
            <type>string</type>
          </tag>
          <tag name="return" line="120" description="" type="\Zend_Server_Method_Callback">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$function</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="132" package="Zend_Server\Method">
        <name>getFunction</name>
        <full_name>\Zend_Server_Method_Callback::getFunction()</full_name>
        <docblock line="132">
          <description>Get callback function</description>
          <long-description></long-description>
          <tag name="return" line="132" description="" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="Zend_Server\Method">
        <name>setMethod</name>
        <full_name>\Zend_Server_Method_Callback::setMethod()</full_name>
        <docblock line="143">
          <description>Set callback class method</description>
          <long-description></long-description>
          <tag name="param" line="143" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="143" description="" type="\Zend_Server_Method_Callback">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="154" package="Zend_Server\Method">
        <name>getMethod</name>
        <full_name>\Zend_Server_Method_Callback::getMethod()</full_name>
        <docblock line="154">
          <description>Get callback class  method</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="Zend_Server\Method">
        <name>setType</name>
        <full_name>\Zend_Server_Method_Callback::setType()</full_name>
        <docblock line="166">
          <description>Set callback type</description>
          <long-description></long-description>
          <tag name="param" line="166" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="166" description="" type="\Zend_Server_Method_Callback">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
          <tag name="throws" line="166" description="" type="\Zend_Server_Exception">
            <type>\Zend_Server_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="181" package="Zend_Server\Method">
        <name>getType</name>
        <full_name>\Zend_Server_Method_Callback::getType()</full_name>
        <docblock line="181">
          <description>Get callback type</description>
          <long-description></long-description>
          <tag name="return" line="181" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="191" package="Zend_Server\Method">
        <name>toArray</name>
        <full_name>\Zend_Server_Method_Callback::toArray()</full_name>
        <docblock line="191">
          <description>Cast callback to array</description>
          <long-description></long-description>
          <tag name="return" line="191" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzlV01v4zYQvftXzALGSgoSO11gL3G9TerNdg0ku0Cd9tCiEGiJttnIokpRdtxu/nuHX7Ik23LS5FYfEomceZx5bzikvv8hW2Sd/slJB07gN5rG8EmQJV1zcY8javBmPLr+Mrm2b3cLlkPOCxFRmLGEgnotpn/SSILkIBcUUrqGHycfIWERTXOKY0Qqs2mRxgmNFcqayQWO42BGonsyR5hU+2pIu2JPPsiesh5rd5LkHMiKsIRME4UqeDFfaC+MNonP1iymZ2s6BVxOY//y882F8l9ImV30+zOXWO9vzLMX8WXfhtjHkM+muQ5tPIMNLyBmMaRcgqARZSsKBCKebYDP9IIuNYJ8EUGhSE1MXCHwqSSYDpMtMZ5CllCCCLminKRAl5iY8kYSLfqlCxP5hjWFCM20uYrPxsOWSxozImmy6VmFLiN8nXOxAdCC6jFHsx0LJ1SsqNBTqJ6bvaVywY2DQhdsvpAAo/LRjwJ4d37+/uzd+XfvTbXc0WiR8oTPGUXCJ1cwTqMe+Jby9Xpdkh1oXMcc/p4sizKGL7aqbsycBsMUcsZTNd0dx10c63dcLZtckLQkmWJ6sKSSxESS/xtL/U6UkDyvJhSaDMKR5abzT0f5auLUTzFLBORSsHQOI+2e4vIw4wIM2rLOrvXr6/+Z4BLbAY2hG2rrQacN/1ORRlKpWC4xcyNH4Z1l+wq2FP5jCsaufQXHJMhNRg8iqckDOEQIsoFfScIqJavs81a0HIbG1fccFd4peLkkkkXqiaX4nEbUC3YXHnGcFEUkubBDZUgZwXIDSIsk+WZC6/JMoeeliaCyECmsOIvrIRZTLMythmEYuXV8B4JRK+hAO5jiUz82A99XE/BmOCxXDODtW+z/ocmzHA2qnroDqJ5/9iGn8qsx2doOSsPHjvnb5GJCJfZtfYop8rBOBPZdkzr2/HryTZraGWrbeG3EVRKpL9CkDUuakmgBW3pJDt17uoHhB+iuSFLQoMmVLf4h1gqVHvSgiGZM5CgR+lX4crIY+5A+sFwisYrqU4cSNNEralgT34ZRB37s7D5Z0rT7oEWscpPozXxAGLs7u1Wb19BFt0TfwO4rYqxWU0zOZod/04KGMKfS9Ehn2SzVCpehc+rarvoczn46yplFMZx9U9uwlYa5o6FJQDUaF/STlHTQR8RsmL2Gnu4I8kvwZlIum9JrCL4JKNhGNGiaI/QddulKcw5eoNohfiyQbtYmpmPClfke0a6e2FM2oj1Vj0hYM3oNAW9tl7EN6YB4ZdPrujP9ZTsIDmT7fEFs/EfkqEZ9RIzKPeSQCBWTZ0gAl+qjZl2/T14/RDSrlOZBnfRu0Cvva5tvWOpOeWVyWiaurzo7TVTQvwomaMjxfgOeiqdv4umX8fTw49arHzo6fP2NujcD3xunK30Na9wPNaWYFOqO1y/8SlOnZhiObq4mkzDEZ+/iwgzdXt99/voxDFt7uUYbGhVeUIf7dK418mOVpxU5UnfbGHejGZG8Gg43l6EDIVXn9kck+ZUugN0t7PjSIZWBV1quuSS5+3BNc095e/o6pAurnKz4qwLc9mkYWm12Tm4N//vW8o9aVNvOWhEfaILfcvtxdCNBkBqKPVgHez1MXTbWdQ1kX8k5NbW/0/Gx8y/uwTFl</source>
  </file>
  <file path="Server/Method/Definition.php" generated-path="Server.Method.Definition.html" hash="42772f00170c9de317cea7d206f7bf48" package="Zend_Server\Method">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="subpackage" line="0" description="Method"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Server\Method">
      <extends/>
      <name>Zend_Server_Method_Definition</name>
      <full_name>\Zend_Server_Method_Definition</full_name>
      <docblock line="32">
        <description>Method definition metadata</description>
        <long-description></long-description>
        <tag name="category" line="32" description="Zend"/>
        <tag name="package" line="32" description="Zend_Server"/>
        <tag name="subpackage" line="32" description="Method"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="37" package="Zend_Server\Method">
        <name>$_callback</name>
        <full_name>\Zend_Server_Method_Definition::_callback</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="\Zend_Server_Method_Callback" variable="">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="42" package="Zend_Server\Method">
        <name>$_invokeArguments</name>
        <full_name>\Zend_Server_Method_Definition::_invokeArguments</full_name>
        <default>array()</default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="47" package="Zend_Server\Method">
        <name>$_methodHelp</name>
        <full_name>\Zend_Server_Method_Definition::_methodHelp</full_name>
        <default>''</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="52" package="Zend_Server\Method">
        <name>$_name</name>
        <full_name>\Zend_Server_Method_Definition::_name</full_name>
        <default></default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="57" package="Zend_Server\Method">
        <name>$_object</name>
        <full_name>\Zend_Server_Method_Definition::_object</full_name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="null|object" variable="">
            <type>null</type>
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="62" package="Zend_Server\Method">
        <name>$_prototypes</name>
        <full_name>\Zend_Server_Method_Definition::_prototypes</full_name>
        <default>array()</default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;Array of Zend_Server_Method_Prototype objects&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="Zend_Server\Method">
        <name>__construct</name>
        <full_name>\Zend_Server_Method_Definition::__construct()</full_name>
        <docblock line="70">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="70" description="" type="null|array" variable="$options">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="return" line="70" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>null|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="Zend_Server\Method">
        <name>setOptions</name>
        <full_name>\Zend_Server_Method_Definition::setOptions()</full_name>
        <docblock line="83">
          <description>Set object state from options</description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="83" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="Zend_Server\Method">
        <name>setName</name>
        <full_name>\Zend_Server_Method_Definition::setName()</full_name>
        <docblock line="100">
          <description>Set method name</description>
          <long-description></long-description>
          <tag name="param" line="100" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="100" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="111" package="Zend_Server\Method">
        <name>getName</name>
        <full_name>\Zend_Server_Method_Definition::getName()</full_name>
        <docblock line="111">
          <description>Get method name</description>
          <long-description></long-description>
          <tag name="return" line="111" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="Zend_Server\Method">
        <name>setCallback</name>
        <full_name>\Zend_Server_Method_Definition::setCallback()</full_name>
        <docblock line="122">
          <description>Set method callback</description>
          <long-description></long-description>
          <tag name="param" line="122" description="" type="array|\Zend_Server_Method_Callback" variable="$callback">
            <type>array</type>
            <type>\Zend_Server_Method_Callback</type>
          </tag>
          <tag name="return" line="122" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>array|\Zend_Server_Method_Callback</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="Zend_Server\Method">
        <name>getCallback</name>
        <full_name>\Zend_Server_Method_Definition::getCallback()</full_name>
        <docblock line="140">
          <description>Get method callback</description>
          <long-description></long-description>
          <tag name="return" line="140" description="" type="\Zend_Server_Method_Callback">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="Zend_Server\Method">
        <name>addPrototype</name>
        <full_name>\Zend_Server_Method_Definition::addPrototype()</full_name>
        <docblock line="151">
          <description>Add prototype to method definition</description>
          <long-description></long-description>
          <tag name="param" line="151" description="" type="array|\Zend_Server_Method_Prototype" variable="$prototype">
            <type>array</type>
            <type>\Zend_Server_Method_Prototype</type>
          </tag>
          <tag name="return" line="151" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prototype</name>
          <default></default>
          <type>array|\Zend_Server_Method_Prototype</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="170" package="Zend_Server\Method">
        <name>addPrototypes</name>
        <full_name>\Zend_Server_Method_Definition::addPrototypes()</full_name>
        <docblock line="170">
          <description>Add multiple prototypes at once</description>
          <long-description></long-description>
          <tag name="param" line="170" description="&lt;p&gt;Array of Zend_Server_Method_Prototype objects or arrays&lt;/p&gt;" type="array" variable="$prototypes">
            <type>array</type>
          </tag>
          <tag name="return" line="170" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prototypes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="184" package="Zend_Server\Method">
        <name>setPrototypes</name>
        <full_name>\Zend_Server_Method_Definition::setPrototypes()</full_name>
        <docblock line="184">
          <description>Set all prototypes at once (overwrites)</description>
          <long-description></long-description>
          <tag name="param" line="184" description="&lt;p&gt;Array of Zend_Server_Method_Prototype objects or arrays&lt;/p&gt;" type="array" variable="$prototypes">
            <type>array</type>
          </tag>
          <tag name="return" line="184" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prototypes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="196" package="Zend_Server\Method">
        <name>getPrototypes</name>
        <full_name>\Zend_Server_Method_Definition::getPrototypes()</full_name>
        <docblock line="196">
          <description>Get all prototypes</description>
          <long-description></long-description>
          <tag name="return" line="196" description="$prototypes Array of Zend_Server_Method_Prototype objects or arrays" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="Zend_Server\Method">
        <name>setMethodHelp</name>
        <full_name>\Zend_Server_Method_Definition::setMethodHelp()</full_name>
        <docblock line="207">
          <description>Set method help</description>
          <long-description></long-description>
          <tag name="param" line="207" description="" type="string" variable="$methodHelp">
            <type>string</type>
          </tag>
          <tag name="return" line="207" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$methodHelp</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="218" package="Zend_Server\Method">
        <name>getMethodHelp</name>
        <full_name>\Zend_Server_Method_Definition::getMethodHelp()</full_name>
        <docblock line="218">
          <description>Get method help</description>
          <long-description></long-description>
          <tag name="return" line="218" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="229" package="Zend_Server\Method">
        <name>setObject</name>
        <full_name>\Zend_Server_Method_Definition::setObject()</full_name>
        <docblock line="229">
          <description>Set object to use with method calls</description>
          <long-description></long-description>
          <tag name="param" line="229" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="229" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="244" package="Zend_Server\Method">
        <name>getObject</name>
        <full_name>\Zend_Server_Method_Definition::getObject()</full_name>
        <docblock line="244">
          <description>Get object to use with method calls</description>
          <long-description></long-description>
          <tag name="return" line="244" description="" type="null|object">
            <type>null</type>
            <type>object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="255" package="Zend_Server\Method">
        <name>setInvokeArguments</name>
        <full_name>\Zend_Server_Method_Definition::setInvokeArguments()</full_name>
        <docblock line="255">
          <description>Set invoke arguments</description>
          <long-description></long-description>
          <tag name="param" line="255" description="" type="array" variable="$invokeArguments">
            <type>array</type>
          </tag>
          <tag name="return" line="255" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$invokeArguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="266" package="Zend_Server\Method">
        <name>getInvokeArguments</name>
        <full_name>\Zend_Server_Method_Definition::getInvokeArguments()</full_name>
        <docblock line="266">
          <description>Retrieve invoke arguments</description>
          <long-description></long-description>
          <tag name="return" line="266" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="276" package="Zend_Server\Method">
        <name>toArray</name>
        <full_name>\Zend_Server_Method_Definition::toArray()</full_name>
        <docblock line="276">
          <description>Serialize to array</description>
          <long-description></long-description>
          <tag name="return" line="276" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="PPC:ERR-50007">No summary for property $_callback</error>
      <error line="42" code="PPC:ERR-50007">No summary for property $_invokeArguments</error>
      <error line="47" code="PPC:ERR-50007">No summary for property $_methodHelp</error>
      <error line="52" code="PPC:ERR-50007">No summary for property $_name</error>
      <error line="57" code="PPC:ERR-50007">No summary for property $_object</error>
    </parse_markers>
    <source>eJzlWFtv2zYUfvevOAWMSi4auyvQl2TpmqXZaiBth7p72TAItETbXGRRoyi77uW/7/AiiZIlOQ6MDcP8kNgUz8dzvnOlvv8hXaWDyZMnA3gCv9Ekgp8EWdMtF3e4ohZvp9c372Y39tfHFcsg47kIKSxYTEH9zOd/0lCC5CBXFBK6hR9nryFmIU0yimtEqm3zPIliGimULZMrXMfFlIR3ZIkwiZbVkPbEsfwkx2r3VIuTOONANoTFZB4rVMHz5UpLobZxdLZlET3b0jngcRr71w+350p+JWV6PpksCsPGn9HOccjXE6viBFU+m2datekCdjyHiEWQcAmChpRtKBAIeboDvtAHFqYR5IsICnlidOIKgc8lQXOY7NHxKaQxJYiQKcpJAnSNhilpJNGivyrURL5hSyHEbXq70s/qw9ZrGjEiabwbWw+9CvHnkosdgHaoXitotmvBjIoNFfoReq94+pbKFTcCCl2w5UoCXJdf/XAEz589e3H2/Nl3L0y0fKThKuExXzKKhM+uYJqEY/At5dvttiR7pHEL5vBzb7eozfDORtWteabB0ISM8UQ9Hk6jIa5NBkUsG1sgoguWMKl2rakkEZHk/8bTZBDGJMtcgwJjQfC6ZGfwZaCkNXnqo9glok3mmsTxHImw+yb6fyq4xBJAIxgGod1wMWiFJEKQXacwSzb8jl6JZb6miczg0uz3Rx1omRQsWXbCrbXOb2icIpLnPQwkQeI7JJM8jr9yXf46xc3jPjbgSv/F4tLC9y8IxeUupWCAss6D0mJnL23XPEF781ByYZdKhVKCMQbGKKPYkKcqOrJyi6AyFwlsOIvqeuRzjEZY5Emoky0IwuIcvwBBrRT0SAuYeFMftgDfVw/g0eVleeIIHj/Gsh8YO8rVkSOo815V+rOXGZXvzY5q60W58dvA/G1SMaPSkoohgNUAFgKrbd3kJjn9vPTnWB9hjgX1I5p0LbigJFxBRSvJYHhHd3D5EoYbEud0jySTBioF8BgPxpCHCyYydA3KOUQV7jD7A/qJZRIZVRw/LVD2XOC4wW7xrRp14G+D/W+WNi1+0eMla4DKxA6/mByGobPlNF55h4C+hm16whqt6wNy6xsVRkaHi6Ns/LnfRgvRVqcaCi+twk1dXSWsyvfgO6zX+tZc+NrTI2DYQDiNSwp4v4RvqylV8Sh3NUNX0L9yJmjAExxnPaXTxOg0MTpNipPGOCV79XAuUVVZw6bbQ4OjgVOUgMYZVYo+qqAY1kyCyrS3ggLv/mbcfAqprhItBqjpdLuneinhe9ME0xjn4EYwqJ6zwTk28vZKrJsVDj3DaiR4YFJ0BWJ3NLWPKfvZUvroQMbUTdhX9iqKoGzAaopfNwfQY5OoavzDEvh0aUSiqDzArw7oT6Rq29GZVB7WlkoVcZ251KpsezZVaP3pVEL+O/lUqXm/hKrGu9//UElV/j4uq1SgrvNYMryBgjMy4q1Z2ds/9jj7j5pZgdtR94QTkxvB5dBUKdg9N7lGZ45Ix2zZlSltvrrvPIPFpIV78DnSsBVMFur/JxyBHfkYR+zHs3td6SE/c103Or6X1EnvaCWn5rez8ThmHWg9lS73GNlWeNc9MCJXl+KTxsDbEtZ3jujyfu1mXo3O1fKDZ4U2Bo4aoB1DDnimqW3vFRNngjyj5t2nM9Z0XTSt1LD2duFEF00N6Vvotpb/CHs+r+9S93H3mm5W/+HWaUlJSZbRSDGqLrNBcH17NZsFAX73zs/N0tubj2/evw6C3pZq4Upzjo+5I31rYTtfG+0Ho/XVgUB01W8PQvNiDWuTfbPW314ar+FOGn3TOrbffmRX3dh/QdiUPM6JHyjWBLqhBwly+8MhpzVNPOC9VgPa3CgYZsFnfb1w9TheR8mvTMNtslxryla/RrNyenTGlgnBI9tb+AMmrgqwMeOevSxVdhO6yajRoYbpqXcdnrui3pOVlpm3JU/rIsVlz2sVqa6MjlYNhMpir0KorGvsrvqI13Ke248ago3I8eqCe2HYkDZVw+GmJl1UnkpoVETmt8Hfk2td+w==</source>
  </file>
  <file path="Server/Method/Prototype.php" generated-path="Server.Method.Prototype.html" hash="b646c1d520e85fade31f4f1f9aea50ef" package="Zend_Server\Method">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="subpackage" line="0" description="Method"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Server\Method">
      <extends/>
      <name>Zend_Server_Method_Prototype</name>
      <full_name>\Zend_Server_Method_Prototype</full_name>
      <docblock line="32">
        <description>Method prototype metadata</description>
        <long-description></long-description>
        <tag name="category" line="32" description="Zend"/>
        <tag name="package" line="32" description="Zend_Server"/>
        <tag name="subpackage" line="32" description="Method"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="37" package="Zend_Server\Method">
        <name>$_returnType</name>
        <full_name>\Zend_Server_Method_Prototype::_returnType</full_name>
        <default>'void'</default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Return type&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="42" package="Zend_Server\Method">
        <name>$_parameterNameMap</name>
        <full_name>\Zend_Server_Method_Prototype::_parameterNameMap</full_name>
        <default>array()</default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Map parameter names to parameter index&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="47" package="Zend_Server\Method">
        <name>$_parameters</name>
        <full_name>\Zend_Server_Method_Prototype::_parameters</full_name>
        <default>array()</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Method parameters&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="Zend_Server\Method">
        <name>__construct</name>
        <full_name>\Zend_Server_Method_Prototype::__construct()</full_name>
        <docblock line="55">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="55" description="" type="null|array" variable="$options">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="return" line="55" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>null|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Zend_Server\Method">
        <name>setReturnType</name>
        <full_name>\Zend_Server_Method_Prototype::setReturnType()</full_name>
        <docblock line="68">
          <description>Set return value</description>
          <long-description></long-description>
          <tag name="param" line="68" description="" type="string" variable="$returnType">
            <type>string</type>
          </tag>
          <tag name="return" line="68" description="" type="\Zend_Server_Method_Prototype">
            <type>\Zend_Server_Method_Prototype</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnType</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="Zend_Server\Method">
        <name>getReturnType</name>
        <full_name>\Zend_Server_Method_Prototype::getReturnType()</full_name>
        <docblock line="79">
          <description>Retrieve return type</description>
          <long-description></long-description>
          <tag name="return" line="79" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="90" package="Zend_Server\Method">
        <name>addParameter</name>
        <full_name>\Zend_Server_Method_Prototype::addParameter()</full_name>
        <docblock line="90">
          <description>Add a parameter</description>
          <long-description></long-description>
          <tag name="param" line="90" description="" type="string" variable="$parameter">
            <type>string</type>
          </tag>
          <tag name="return" line="90" description="" type="\Zend_Server_Method_Prototype">
            <type>\Zend_Server_Method_Prototype</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parameter</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="113" package="Zend_Server\Method">
        <name>addParameters</name>
        <full_name>\Zend_Server_Method_Prototype::addParameters()</full_name>
        <docblock line="113">
          <description>Add parameters</description>
          <long-description></long-description>
          <tag name="param" line="113" description="" type="array" variable="$parameter">
            <type>array</type>
          </tag>
          <tag name="return" line="113" description="" type="\Zend_Server_Method_Prototype">
            <type>\Zend_Server_Method_Prototype</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="127" package="Zend_Server\Method">
        <name>setParameters</name>
        <full_name>\Zend_Server_Method_Prototype::setParameters()</full_name>
        <docblock line="127">
          <description>Set parameters</description>
          <long-description></long-description>
          <tag name="param" line="127" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="127" description="" type="\Zend_Server_Method_Prototype">
            <type>\Zend_Server_Method_Prototype</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="Zend_Server\Method">
        <name>getParameters</name>
        <full_name>\Zend_Server_Method_Prototype::getParameters()</full_name>
        <docblock line="140">
          <description>Retrieve parameters as list of types</description>
          <long-description></long-description>
          <tag name="return" line="140" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="154" package="Zend_Server\Method">
        <name>getParameterObjects</name>
        <full_name>\Zend_Server_Method_Prototype::getParameterObjects()</full_name>
        <docblock line="154">
          <description>Get parameter objects</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="165" package="Zend_Server\Method">
        <name>getParameter</name>
        <full_name>\Zend_Server_Method_Prototype::getParameter()</full_name>
        <docblock line="165">
          <description>Retrieve a single parameter by name or index</description>
          <long-description></long-description>
          <tag name="param" line="165" description="" type="string|integer" variable="$index">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="165" description="" type="null|\Zend_Server_Method_Parameter">
            <type>null</type>
            <type>\Zend_Server_Method_Parameter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="Zend_Server\Method">
        <name>setOptions</name>
        <full_name>\Zend_Server_Method_Prototype::setOptions()</full_name>
        <docblock line="185">
          <description>Set object state from array</description>
          <long-description></long-description>
          <tag name="param" line="185" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="185" description="" type="\Zend_Server_Method_Prototype">
            <type>\Zend_Server_Method_Prototype</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="201" package="Zend_Server\Method">
        <name>toArray</name>
        <full_name>\Zend_Server_Method_Prototype::toArray()</full_name>
        <docblock line="201">
          <description>Serialize to array</description>
          <long-description></long-description>
          <tag name="return" line="201" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzlWEtvGzcQvutXTAAh2jUsKQmQS1y5cd20MOA4ge1eGgQCtUtJrFdLleRaVhL/986Q+35IfrSn6hBZ3Hl+83FmNj/9vF6ue+ODgx4cwJ88DuE3xVZ8I9UNntDh+dnph4urD+mv66XQoGWiAg5zEXGgn8nsLx4YMBLMkkPMN/DL1a8QiYDHmuMZMyQ2S+Iw4iFZ2QizxHM8XLPghi3QTGx1rcnU48jcmRFJn1l1FmkJ7JaJiM0isqpkslhaLYw2CocbEfLhhs8A3Vnbf1yevyP9pTHrd+PxPEts9A3zHAVyNU5DHGPIw5m2oZ3NYSsTCEUIsTSgeMDFLQcGgVxvQc6twyw1hngxxSGJXUySLMiZYZiOMDtiPIR1xBla0AQ5i4GvMDHSRhBT6++zMBFv2HAIUMyKU3xpPGK14qFghkfbUVqh9wH+XEi1BbAFtWcZzOnZ9IqrW67sI6xe9vQjN0vpFMi6EoulATjN//QCH968evV2+ObV67eOLdc8WMYykgvBEfCrEziLgxF4KeSbzSYH27d2M+Tw8+CykDBcpKw6d8+sMUxBCxnT4/5Z2MezcS/jsssF1koaabZrDituWMgM+7/BNO4FEdO6nNDUZTD9nIHT+94jZQsdfQhbpkAbJeIFXHKTKLyfJOgej+03YYv3nofQnyorc01AT2BwK0U4OOq1GmVKsS18ZGu8+5ST4Qpi/NZE/eJIxCG/63SXy13gF9maOLuev9trSopMW+93oHeZPpUxYpQERqr0KHdqDQDESRT9cM77cm2QrToXcZgBgVWNI5lhaWGexAEpwHQaZH68zAhGRaZ9q+CqRx8xB8+jB/BiMsk9+vDyJbbQqcsjP/VLivYOUdccHmtuPjmJQvQoF7zvuX/rUFxxapYuIRYlvAOPlFL9gi91OHbydBdMGPdlbtUreaiDlOZZ5WxJvkg2DckqHHUkjj6V4DgiVOOa1FNzye9MYlFJoh55OZ5KAl3BnYQ4XQq+7ylKXe75NWFh+Dkz6hX222jbL999bVgccJy2bZ5zK+38Ld3dL1+psvnvo4o4Oc2vitenHlSRHh5jMai/eH7jqrS6S3vRF2uKPAcyifHKNsLyYQivq8HcFxcMeISdv+pP8b8TofhUIiowIFDGDpSxA2WcgzLCfW5QtV1CdmK3s12geq5JNLIdUK0HMDkGz9HFL9k9rIj7/tFT63L/qKtH7G708jq50+b733Jbe3U3us7xuVScBcsy0XGp1SWVDj533aGnokad+tGoNabWc9r0Y2Brkid9UBrLnbIt28EOcHW5NP4Tp0C1uJHQxr40ICoNqFO7NrR9Q6EUZBMhMt6WY0G5Joh7mEcma7fU9kM3lnZSj1S7YPq9zD18U6L3xn8Hl0/O1r6RWSCwt5IMNLa5qFRSmG3tqgqyup+2z9MfIjbQL8vlqdmtcFcXfnDannPQNlBf4MbnIsmEaA2k0zhZcSWC7Lhe/VKQbYUm27Y20xu+nfI7pLhOTR12XsHmsmkViGCdY9RKfH1+CM1Nt5MUu5w2YGlvrY7UyAF8v4S5wtf3MpE7+mzHq8Fzmmy2w1c9dE+l7MWCGgOiSpO+bzf5RuVW7i0K3/PQzQBGkARzoTRuOqhXm/1UKSefl4lAP8ys7NqsUhEvDaNzYXrk9FOCReIb/W9Ne2Ue3H6MPHEdt73ltCxSg2Jjt6tUmmht6a9uU4OCnTWd8kwodPws8/veP2te0s8=</source>
  </file>
  <file path="Server/Method/Parameter.php" generated-path="Server.Method.Parameter.html" hash="5bb143b2c5472570019deb5c8df7e13e" package="Zend_Server\Method">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="subpackage" line="0" description="Method"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="32" package="Zend_Server\Method">
      <extends/>
      <name>Zend_Server_Method_Parameter</name>
      <full_name>\Zend_Server_Method_Parameter</full_name>
      <docblock line="32">
        <description>Method parameter metadata</description>
        <long-description></long-description>
        <tag name="category" line="32" description="Zend"/>
        <tag name="package" line="32" description="Zend_Server"/>
        <tag name="subpackage" line="32" description="Method"/>
        <tag name="copyright" line="32" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="32" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="37" package="Zend_Server\Method">
        <name>$_defaultValue</name>
        <full_name>\Zend_Server_Method_Parameter::_defaultValue</full_name>
        <default></default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;Default parameter value&lt;/p&gt;" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="42" package="Zend_Server\Method">
        <name>$_description</name>
        <full_name>\Zend_Server_Method_Parameter::_description</full_name>
        <default>''</default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Parameter description&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="47" package="Zend_Server\Method">
        <name>$_name</name>
        <full_name>\Zend_Server_Method_Parameter::_name</full_name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Parameter variable name&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="52" package="Zend_Server\Method">
        <name>$_optional</name>
        <full_name>\Zend_Server_Method_Parameter::_optional</full_name>
        <default>false</default>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="52" description="&lt;p&gt;Is parameter optional?&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="57" package="Zend_Server\Method">
        <name>$_type</name>
        <full_name>\Zend_Server_Method_Parameter::_type</full_name>
        <default>'mixed'</default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Parameter type&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="Zend_Server\Method">
        <name>__construct</name>
        <full_name>\Zend_Server_Method_Parameter::__construct()</full_name>
        <docblock line="65">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="65" description="" type="null|array" variable="$options">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>null|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Server\Method">
        <name>setOptions</name>
        <full_name>\Zend_Server_Method_Parameter::setOptions()</full_name>
        <docblock line="78">
          <description>Set object state from array of options</description>
          <long-description></long-description>
          <tag name="param" line="78" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="78" description="" type="\Zend_Server_Method_Parameter">
            <type>\Zend_Server_Method_Parameter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="95" package="Zend_Server\Method">
        <name>setDefaultValue</name>
        <full_name>\Zend_Server_Method_Parameter::setDefaultValue()</full_name>
        <docblock line="95">
          <description>Set default value</description>
          <long-description></long-description>
          <tag name="param" line="95" description="" type="mixed" variable="$defaultValue">
            <type>mixed</type>
          </tag>
          <tag name="return" line="95" description="" type="\Zend_Server_Method_Parameter">
            <type>\Zend_Server_Method_Parameter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$defaultValue</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="Zend_Server\Method">
        <name>getDefaultValue</name>
        <full_name>\Zend_Server_Method_Parameter::getDefaultValue()</full_name>
        <docblock line="106">
          <description>Retrieve default value</description>
          <long-description></long-description>
          <tag name="return" line="106" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="117" package="Zend_Server\Method">
        <name>setDescription</name>
        <full_name>\Zend_Server_Method_Parameter::setDescription()</full_name>
        <docblock line="117">
          <description>Set description</description>
          <long-description></long-description>
          <tag name="param" line="117" description="" type="string" variable="$description">
            <type>string</type>
          </tag>
          <tag name="return" line="117" description="" type="\Zend_Server_Method_Parameter">
            <type>\Zend_Server_Method_Parameter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="128" package="Zend_Server\Method">
        <name>getDescription</name>
        <full_name>\Zend_Server_Method_Parameter::getDescription()</full_name>
        <docblock line="128">
          <description>Retrieve description</description>
          <long-description></long-description>
          <tag name="return" line="128" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="Zend_Server\Method">
        <name>setName</name>
        <full_name>\Zend_Server_Method_Parameter::setName()</full_name>
        <docblock line="139">
          <description>Set name</description>
          <long-description></long-description>
          <tag name="param" line="139" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="139" description="" type="\Zend_Server_Method_Parameter">
            <type>\Zend_Server_Method_Parameter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="Zend_Server\Method">
        <name>getName</name>
        <full_name>\Zend_Server_Method_Parameter::getName()</full_name>
        <docblock line="150">
          <description>Retrieve name</description>
          <long-description></long-description>
          <tag name="return" line="150" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="Zend_Server\Method">
        <name>setOptional</name>
        <full_name>\Zend_Server_Method_Parameter::setOptional()</full_name>
        <docblock line="161">
          <description>Set optional flag</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="boolean" variable="$flag">
            <type>boolean</type>
          </tag>
          <tag name="return" line="161" description="" type="\Zend_Server_Method_Parameter">
            <type>\Zend_Server_Method_Parameter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flag</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="172" package="Zend_Server\Method">
        <name>isOptional</name>
        <full_name>\Zend_Server_Method_Parameter::isOptional()</full_name>
        <docblock line="172">
          <description>Is the parameter optional?</description>
          <long-description></long-description>
          <tag name="return" line="172" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="183" package="Zend_Server\Method">
        <name>setType</name>
        <full_name>\Zend_Server_Method_Parameter::setType()</full_name>
        <docblock line="183">
          <description>Set parameter type</description>
          <long-description></long-description>
          <tag name="param" line="183" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="183" description="" type="\Zend_Server_Method_Parameter">
            <type>\Zend_Server_Method_Parameter</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="194" package="Zend_Server\Method">
        <name>getType</name>
        <full_name>\Zend_Server_Method_Parameter::getType()</full_name>
        <docblock line="194">
          <description>Retrieve parameter type</description>
          <long-description></long-description>
          <tag name="return" line="194" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="204" package="Zend_Server\Method">
        <name>toArray</name>
        <full_name>\Zend_Server_Method_Parameter::toArray()</full_name>
        <docblock line="204">
          <description>Cast to array</description>
          <long-description></long-description>
          <tag name="return" line="204" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzlV01v4zYQvetXzMGA5SC20wX2sul+NdkCBtK0WKc99GLQEmWxkUWBpOy4bf57hx+SKdmSk8C3+pBY5PDNm/eoIf3j5yItgunFRQAX8CfNY/hZkDXdcvGII3rwbnbz7X7+zT09pEyC5KWIKCQso6Afy+VfNFKgOKiUQk638NP8FjIW0VxSHCNKhy3LPM5orFG2TKU4joMFiR7JCmFys9ZAuowT9aQmOnpmlpNMciAbwjKyzDSq4OUqNauQbRaPtyym4y1dAqYz2L9/v/ug16dKFR+m06QqbPI31jmJ+HrqKE6R8ngpDbVZAjteQsxiyLkCQSPKNhQIRLzYAU9Mwqo0gnoRQaHMLSeuEfhSESyHqR6Ol1BklCCC1JKTHOgaC9OrUUSH/qWiiXrDlkKEYSZc83N82HpNY0YUzXYT59CXCB9XXOwAjKFmrJLZjS3mVGyoMFPoXjX7C1Uptws0umCrVAHc1F/DaATvrq7ej99d/fDe7pYHGqU5z/iKURR8/hVmeTSB0Em+3W5rsUcGt1IOPy+2RQfDvdtVd3bOgGEJkvFcTw9m8QDHpkG1l20tuL80vKIC8C+JiSL/N5mmQZQRKf2CFraCxW+VOME/gV5spNMfrS1BydgTjeGWJqTMlCflhmQldZFT878QXGELwOjBIrbxf+ig6+AosFSC5Suo80NMZSRYodDNHtw6Bj7CcPhSbBxk5vXMcaATXU92IC45z2AmPQG4YUGyz51wVQQyTbBzvVgItSu6OepJXbrx5Uj9NzxHwDJSXLihOpnhDpCXWfYvEYLsYGApyjpEUFWKHDacxU0G5RJ3GiRlHhntF4uoyhNWIMhKQ4/MAruZ9IclEDK5MAnr2NHIizDvru7W40+Sql9txD70ug58Duzfds1zqrDjmvNHKnylIRHYMW2J2K2bRbbl6Fei943pU8irpJmhrU/CBSVRCnsdiYTBI93Bx08wMK/ZgVhr29hwG2CaIUygjBImJHqB6zzBKv1t/II+MalQWa31ZYVyYIVnhwsJHY0m8HNw+M2pZpZf97jl+kOji7SNsZ1n4LeSc7pz6+GGjSxth5wYjaaG2g+aTe41Enyn+M5TvFL06uCQjA691axa1bQL8Cm16ug3qd2Q2xa51jU4jDyTRTVs6OfoNsg/HULLbtSg92afOqVwODbZaZv2FZ10qUX6uEnegdbljhdyFlvuMSw0qF1G6LmGA/ZkfZP0xwp8leaG7gmx9/w6TpfqKE8ysuqQ21wRBl7AGQ8RkoUGuUtw76oRah4jS+R1kuP1Rv9K6b7itOvSmXr5M1nTP2FAlarPhOLYDalr03shZ/HhAfFCg9rlgbuZ7Te9Hnjjpu8v9VXb3xA/of6e6SGnGyLNz3pzi+lg4s8dJ6L4V3MB7CBib4eN68VQkxrWj/oyZNnWNV024/U73BFvW0Arvtpyw1a8v2lbS/yTc9hM0TyAD9bVvXwI7XXeibBfNqrseA7+A9uwFGw=</source>
  </file>
  <file path="Server/Interface.php" generated-path="Server.Interface.html" hash="ef219942e75a7dd72f757ae0fee1fe94" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <interface namespace="" line="30" package="Zend_Server">
      <name>Zend_Server_Interface</name>
      <full_name>\Zend_Server_Interface</full_name>
      <docblock line="30">
        <description>Zend_Server_Interface</description>
        <long-description></long-description>
        <tag name="category" line="30" description="Zend"/>
        <tag name="package" line="30" description="Zend_Server"/>
        <tag name="copyright" line="30" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="30" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="30" description="$Id$"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="Zend_Server">
        <name>addFunction</name>
        <full_name>\Zend_Server_Interface::addFunction()</full_name>
        <docblock line="44">
          <description>Attach a function as a server method</description>
          <long-description>Namespacing is primarily for xmlrpc, but may be used with other
implementations to prevent naming collisions.</long-description>
          <tag name="param" line="44" description="" type="string" variable="$function">
            <type>string</type>
          </tag>
          <tag name="param" line="44" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="44" description="&lt;p&gt;Optional array of arguments to pass to callbacks at&#10;dispatch.&lt;/p&gt;" type="null|array" variable="">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="return" line="44" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$function</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="Zend_Server">
        <name>setClass</name>
        <full_name>\Zend_Server_Interface::setClass()</full_name>
        <docblock line="65">
          <description>Attach a class to a server</description>
          <long-description>The individual implementations should probably allow passing a variable
number of arguments in, so that developers may define custom runtime
arguments to pass to server methods.

Namespacing is primarily for xmlrpc, but could be used for other
implementations as well.</long-description>
          <tag name="param" line="65" description="&lt;p&gt;Class name or object instance to examine and attach&#10;to the server.&lt;/p&gt;" type="mixed" variable="$class">
            <type>mixed</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Optional namespace with which to prepend method&#10;names in the dispatch table.&#10;methods in the class will be valid callbacks.&lt;/p&gt;" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Optional array of arguments to pass to callbacks at&#10;dispatch.&lt;/p&gt;" type="null|array" variable="">
            <type>null</type>
            <type>array</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="Zend_Server">
        <name>fault</name>
        <full_name>\Zend_Server_Interface::fault()</full_name>
        <docblock line="74">
          <description>Generate a server fault</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="mixed" variable="$fault">
            <type>mixed</type>
          </tag>
          <tag name="param" line="74" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="return" line="74" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fault</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>404</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Zend_Server">
        <name>handle</name>
        <full_name>\Zend_Server_Interface::handle()</full_name>
        <docblock line="86">
          <description>Handle a request</description>
          <long-description>Requests may be passed in, or the server may automagically determine the
request based on defaults. Dispatches server request to appropriate
method and returns a response</long-description>
          <tag name="param" line="86" description="" type="mixed" variable="$request">
            <type>mixed</type>
          </tag>
          <tag name="return" line="86" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="98" package="Zend_Server">
        <name>getFunctions</name>
        <full_name>\Zend_Server_Interface::getFunctions()</full_name>
        <docblock line="98">
          <description>Return a server definition array</description>
          <long-description>Returns a server definition array as created using
\*. Can be used for server introspection,
documentation, or persistence.</long-description>
          <tag name="access" line="98" description="public"/>
          <tag name="return" line="98" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="108" package="Zend_Server">
        <name>loadFunctions</name>
        <full_name>\Zend_Server_Interface::loadFunctions()</full_name>
        <docblock line="108">
          <description>Load server definition</description>
          <long-description>Used for persistence; loads a construct as returned by \getFunctions().</long-description>
          <tag name="param" line="108" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="108" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$definition</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="117" package="Zend_Server">
        <name>setPersistence</name>
        <full_name>\Zend_Server_Interface::setPersistence()</full_name>
        <docblock line="117">
          <description>Set server persistence</description>
          <long-description></long-description>
          <tag name="todo" line="117" description="Determine how to implement this"/>
          <tag name="param" line="117" description="" type="integer" variable="$mode">
            <type>integer</type>
          </tag>
          <tag name="return" line="117" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mode</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </interface>
    <markers>
      <todo line="117">Determine how to implement this</todo>
    </markers>
    <source>eJzVV01z2zYQvetX7EEzkT225GaSS9JOndpJ6xmP27GdSy8ZEFyJqEGABUDRSur/3l2A0Ldc99SpDpYILh7fvn27oL//samaweT4eADH8DuaEj45UWNn3QOt8OL11cXHm7uP/dV9pTx42zqJMFUagS/b4g+UAYKFUCEY7OCnu0vQSqLxSGsicFjRmlJjySidChWt02Ij5IOYEYyJeyNk/8RxeAxjjr6K24X2FsRcKC0KzajOtrMq7iK2ujztVImnHRZAj4vYn2+v3/H+KoTm3WQyzYmNv1KeY2nrSU9xQpRPCx+pXU1hYVsoVQnGBnAoUc0RBEjbLMBO4wNzaoL0Eg6hNYmTZQRbBEHpqPAMxxNoNApC8Cy5MIA1Jca7ScQe/TzTJL2hQ5AUFsOZX89H1TWWSgTUi3FfoXNJlzPrFgCxoHEty9yvfblDN0eXwgnHqVkVAC6WP0fyCF6fnb09fX323dvki3uUlbHazhSStHcf4MrIMYx6cbuuW8p6FHGzRvR5cQE4GG56/1ynewQ2Gaw7tCf/5coEdFMhcSfx3bT/h0nDOZH1yhoYXpXDqILKGR/Q4duAoaJU/DmGDyEIWZFZpq2RgbEENRK5iDdCjaGyZR+bt9wQXU+6KTPjrmucqoVTegFT6+Cx1q6RJ9TKAWqxgIKs77FM/WzJ5i7DqJoMXqMJgh/r2daNwzktgBE1g0urteL8/HiLApWNRAMfHMcNM/cDt01PGLfum1brv4RzRPPXhvcLDemSmli4WcvsEjHh47cUWhfkGJIoZLBSEXaQ1XiJ7jC0zsDcqizdJH43bUGFXVO6LD/1v0fLHE7W+MIP8OrV0fvBwaJJ3RPLFdvS6b7iuVmquSpbSm5bcl/ZVpckuy1oOi1ogGrbxWRZNwFzqiuPrQxn2rogV2yoo4ixt2mEl1Q+bRsyZax9iVNlaCq1PtCIcq0Jql5i7dV3w3Y7VX+x8WRMK1uP7z7rPHJ8h1ofMFmtHglkmKS+iH+5QMCo6VRTxgdhJE93wEf2bj/3Y5kyXH/2pRTH/2TVlSNXS7GHukpR6VOzNDyANno0ReezMlsTAldx+cxe3hyVMuuU1izZXGg62JZG3yb6X/eMxxBrMEoF2ekWWiAWc/rNTPf0zs9o0NExsBpyU9Hq8Gzt1yPyLZq0ZApb4nYKcc+zOUS4UULtiZ4kLLp6c/ZmD+tfBL8ZEWeHf7bot+neplWfRy5rT8S5N8mmK9vF+6KldhQzxYXhJqWzIVqWwjJe/xQoBMMQZWplZuvHcNmXjlzWY+ZgHkMNzRLqS9J302yxH5JAPmbhGxsPsWdU30z1X+hbRbFGGYBEndKrIe6R9TZBLq0QJ5ZKw5lNvSNzTuBAPI8S6ZDSL2n2UEfnnd/o3DcPW68ntzjVGCk/jeGC3t3WJ1b/BLKZs75JYSfL/rGyXQ6wWGMeusoHpDG0M8eElEi9mGTalnM9z/1yzjDkY8qP9oh4bUW5K8gWic85rzWi70HTVh/fVGmEupZmKQmYiFF4sci6bVJ4OjCpUwmG6xm9fLAwldUzhqtE9mR8hyEnvJbONqlgSwuXy/aq6GilFlkePvE/kH1Dpd4zVF4yF39bURlFEGL+NPgbAWJTnA==</source>
  </file>
  <file path="Server/Reflection/Node.php" generated-path="Server.Reflection.Node.html" hash="a764c4cdbcfd48911882e73801f55c9f" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="31" package="Zend_Server\Reflection">
      <extends/>
      <name>Zend_Server_Reflection_Node</name>
      <full_name>\Zend_Server_Reflection_Node</full_name>
      <docblock line="31">
        <description>Node Tree class for Zend_Server reflection operations</description>
        <long-description></long-description>
        <tag name="category" line="31" description="Zend"/>
        <tag name="package" line="31" description="Zend_Server"/>
        <tag name="subpackage" line="31" description="Reflection"/>
        <tag name="version" line="31" description="$Id$"/>
        <tag name="copyright" line="31" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="31" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="37" package="Zend_Server\Reflection">
        <name>$_value</name>
        <full_name>\Zend_Server_Reflection_Node::_value</full_name>
        <default>null</default>
        <docblock line="37">
          <description>Node value</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Server\Reflection">
        <name>$_children</name>
        <full_name>\Zend_Server_Reflection_Node::_children</full_name>
        <default>array()</default>
        <docblock line="43">
          <description>Array of child nodes (if any)</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="Zend_Server\Reflection">
        <name>$_parent</name>
        <full_name>\Zend_Server_Reflection_Node::_parent</full_name>
        <default>null</default>
        <docblock line="49">
          <description>Parent node (if any)</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="\Zend_Server_Reflection_Node" variable="">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Node::__construct()</full_name>
        <docblock line="58">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="58" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="58" description="&lt;p&gt;Optional&lt;/p&gt;" type="\Zend_Server_Reflection_Node" variable="$parent">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
          <tag name="return" line="58" description="" type="\Zend_Server_Reflection_Node">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default>null</default>
          <type>\Zend_Server_Reflection_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="Zend_Server\Reflection">
        <name>setParent</name>
        <full_name>\Zend_Server_Reflection_Node::setParent()</full_name>
        <docblock line="76">
          <description>Set parent node</description>
          <long-description></long-description>
          <tag name="param" line="76" description="" type="\Zend_Server_Reflection_Node" variable="$node">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;Whether or not the child node is newly created&#10;and should always be attached&lt;/p&gt;" type="boolean" variable="$new">
            <type>boolean</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$node</name>
          <default></default>
          <type>\Zend_Server_Reflection_Node</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$new</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="Zend_Server\Reflection">
        <name>createChild</name>
        <full_name>\Zend_Server_Reflection_Node::createChild()</full_name>
        <docblock line="93">
          <description>Create and attach a new child node</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="access" line="93" description="public"/>
          <tag name="return" line="93" description="New child node" type="\Zend_Server_Reflection_Node">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="Zend_Server\Reflection">
        <name>attachChild</name>
        <full_name>\Zend_Server_Reflection_Node::attachChild()</full_name>
        <docblock line="106">
          <description>Attach a child node</description>
          <long-description></long-description>
          <tag name="param" line="106" description="" type="\Zend_Server_Reflection_Node" variable="$node">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
          <tag name="return" line="106" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$node</name>
          <default></default>
          <type>\Zend_Server_Reflection_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="Zend_Server\Reflection">
        <name>getChildren</name>
        <full_name>\Zend_Server_Reflection_Node::getChildren()</full_name>
        <docblock line="120">
          <description>Return an array of all child nodes</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="130" package="Zend_Server\Reflection">
        <name>hasChildren</name>
        <full_name>\Zend_Server_Reflection_Node::hasChildren()</full_name>
        <docblock line="130">
          <description>Does this node have children?</description>
          <long-description></long-description>
          <tag name="return" line="130" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="Zend_Server\Reflection">
        <name>getParent</name>
        <full_name>\Zend_Server_Reflection_Node::getParent()</full_name>
        <docblock line="140">
          <description>Return the parent node</description>
          <long-description></long-description>
          <tag name="return" line="140" description="" type="null|\Zend_Server_Reflection_Node">
            <type>null</type>
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="Zend_Server\Reflection">
        <name>getValue</name>
        <full_name>\Zend_Server_Reflection_Node::getValue()</full_name>
        <docblock line="150">
          <description>Return the node's current value</description>
          <long-description></long-description>
          <tag name="return" line="150" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="Zend_Server\Reflection">
        <name>setValue</name>
        <full_name>\Zend_Server_Reflection_Node::setValue()</full_name>
        <docblock line="161">
          <description>Set the node value</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="Zend_Server\Reflection">
        <name>getEndPoints</name>
        <full_name>\Zend_Server_Reflection_Node::getEndPoints()</full_name>
        <docblock line="175">
          <description>Retrieve the bottommost nodes of this node's tree</description>
          <long-description>Retrieves the bottommost nodes of the tree by recursively calling
getEndPoints() on all children. If a child is null, it returns the parent
as an end point.</long-description>
          <tag name="return" line="175" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzVV9tu20YQfddXjAEhlQJbcgPkJa6SuI4LGDCcwHZboEUhrMiRyIbiEsulFLX1v3dmL9SKpGQlfSpfJO7O5cyZ2ZnlD++KpOiNX77swUv4DfMYflJiiWupPtMKL97eXF3fPVy7t8ckLaGUlYoQ5mmGwK/V7E+MNGgJOkHIcQ0/PnyALI0wL5HWhGaxWZXHGcZsZZ3qhNZpsRDRZ7EgM7nRNSadx5H+okcsfWPURVZKECuRZmKWsVUlq0VitAhtFp+t0xjP1jgDcmds/3x/+4b1E62LN+Px3Ac2+oviHEVyOXYQxwT5bFYaaDdz2MgK4jSGXGpQGGG6QhAQyWIDcm4c+tAE8SUUQpVbTJItyJkWFE6qD2A8hSJDQRZKplzkgEsKjLWJRGf9vYdJfMMaISIxI874HJ50ucQ4FRqzzchl6H1ErwupNgAmoWbN0+zWpg+oVqisONlR6SLRAFf130E0hFfn56/PXp1//9rWxSNGSS4zuUiRqH24hJs8GsHAkbter2tah8au54ieoxPAwnDn6ufW7pGxcc9X6J2MER4VEhuZKEuYSxUGROmaZ1SKqcxBFqgE/yu/kRgqa797X5s1OyRRsov+Tdz//3BoGQuinG7DmjKxvb97rGuo5sfRvRJZhX7l/UooWKZf+ByblbH5LZTUZAlj6E+NPEwgr7Lsotc0eamUMOcoStKMz1hMVAzSOR2CzXDHi2DJvV6MusKcHBnBwbDt6xOdzVwbH90uDpGxz3Fhje6L74oKTqsq0lK5pdojaYqlJQ/6u6zarQNwoO/8fix4TWS1qkJdqfz4UKoZFQzMq9wek+k08ogHFtTpUThs/JZOWzf89Lnxnr2ta8BavKj3KQkD1oOTycSbGgb6gY0Stc3fwMmdAqHE4dbYU6/+60gwqlbgqZWZB9RQbCuiOzsHQw/UvPxMSmrk5Jmn3q8JUqtXQE2JZwe3/W2V8wwjoWwDkULqRP4AmSFSJrIiOZGtxYYmJU0WrUWUbIV8mlcyjQ/mc0vbs6GcWtQTmNNsxX2prPNtdC56O7lkA638sdzZWxvBFcc/MLaCzG1TFmazO21Xhi07ao1Jmn0Me8vsV5wzEUVITdCS9hVHyDTUlsfuDNj0usCN+xa11tLExFFiNq9PnieqVdhGY19lX3penuPk+Oo+ttzCLD9rfV+J+V7++x97y8yU1KKu7aFtIIat7vIL2kej+PYV2r0NmQ6z8DNKUKcK5lSTVEdSx6BqsETAr1yMgyYJYesKuNiX6w+S5qW53pqmkoiVazKk824PQNekDkJMRPkcxEhWns4A6BDewvk+tI5T7oQHWq+zz4Phn2+dY0FtHCbY4jgCMCP9roSoUgZ42EiayDsuRG14v7CB59AF87J7gnlk3XgOtL6vGCAW6Z7edWDCd9KpUlyhgT2TWsvlUpbaXfvM15SrZGJa072+EZDXLw8YQKMIsw1/rFV0M18hD1k6u2m+8IaI/+s8/iTTXJfUPbhz+bNN2R3xZ59vnwyIKvGUv+AsaWVQwPXULs1nG02lgo2O/ktvCJA12Ua/Fd5z/S63xhOXkJ3z2+yJvshqa52XKPqYQp4jrSPOwdoJ1Gq2dRmYbdOiXZ0HLdxjNTe/ycQXTdPYbsB2GGwvdDVgQLqtsLngJhmUavi8eFED2+VnR7IDhVG6DrgP4guyddHSNCnBZaE3g4aRVlLaIfscT5eoFnQA643TJqIOz0/HssSsnHTTckRCgotI23PHjbxRck+9p96/M7VWfw==</source>
  </file>
  <file path="Server/Reflection/Class.php" generated-path="Server.Reflection.Class.html" hash="efe4b7a79094ef61e7a4215e6fadd304" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="39" package="Zend_Server\Reflection">
      <extends/>
      <name>Zend_Server_Reflection_Class</name>
      <full_name>\Zend_Server_Reflection_Class</full_name>
      <docblock line="39">
        <description>Class/Object reflection</description>
        <long-description>Proxies calls to a ReflectionClass object, and decorates getMethods() by
creating its own list of [Zend_Server_Reflection_Method](/classes/Zend_Server_Reflection_Method.html)s.</long-description>
        <tag name="category" line="39" description="Zend"/>
        <tag name="package" line="39" description="Zend_Server"/>
        <tag name="subpackage" line="39" description="Reflection"/>
        <tag name="copyright" line="39" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="39" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="39" description="$Id$"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="46" package="Zend_Server\Reflection">
        <name>$_config</name>
        <full_name>\Zend_Server_Reflection_Class::_config</full_name>
        <default>array()</default>
        <docblock line="46">
          <description>Optional configuration parameters; accessible via {@link __get} and
{@link __set()}</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="52" package="Zend_Server\Reflection">
        <name>$_methods</name>
        <full_name>\Zend_Server_Reflection_Class::_methods</full_name>
        <default>array()</default>
        <docblock line="52">
          <description>Array of {@link Zend_Server_Reflection_Method}s</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="58" package="Zend_Server\Reflection">
        <name>$_namespace</name>
        <full_name>\Zend_Server_Reflection_Class::_namespace</full_name>
        <default>null</default>
        <docblock line="58">
          <description>Namespace</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Server\Reflection">
        <name>$_reflection</name>
        <full_name>\Zend_Server_Reflection_Class::_reflection</full_name>
        <default></default>
        <docblock line="64">
          <description>ReflectionClass object</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="\ReflectionClass" variable="">
            <type>\ReflectionClass</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="77" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Class::__construct()</full_name>
        <docblock line="77">
          <description>Constructor</description>
          <long-description>Create array of dispatchable methods, each a
[Zend_Server_Reflection_Method](/classes/Zend_Server_Reflection_Method.html). Sets reflection object property.</long-description>
          <tag name="param" line="77" description="" type="\ReflectionClass" variable="$reflection">
            <type>\ReflectionClass</type>
          </tag>
          <tag name="param" line="77" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="77" description="" type="mixed" variable="$argv">
            <type>mixed</type>
          </tag>
          <tag name="return" line="77" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reflection</name>
          <default></default>
          <type>\ReflectionClass</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="Zend_Server\Reflection">
        <name>__call</name>
        <full_name>\Zend_Server_Reflection_Class::__call()</full_name>
        <docblock line="102">
          <description>Proxy reflection calls</description>
          <long-description></long-description>
          <tag name="param" line="102" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="102" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="102" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="121" package="Zend_Server\Reflection">
        <name>__get</name>
        <full_name>\Zend_Server_Reflection_Class::__get()</full_name>
        <docblock line="121">
          <description>Retrieve configuration parameters</description>
          <long-description>Values are retrieved by key from \$_config. Returns null if no
value found.</long-description>
          <tag name="param" line="121" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="121" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="Zend_Server\Reflection">
        <name>__set</name>
        <full_name>\Zend_Server_Reflection_Class::__set()</full_name>
        <docblock line="139">
          <description>Set configuration parameters</description>
          <long-description>Values are stored by $key in \$_config.</long-description>
          <tag name="param" line="139" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="139" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="139" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="Zend_Server\Reflection">
        <name>getMethods</name>
        <full_name>\Zend_Server_Reflection_Class::getMethods()</full_name>
        <docblock line="150">
          <description>Return array of dispatchable {@link Zend_Server_Reflection_Method}s.</description>
          <long-description></long-description>
          <tag name="access" line="150" description="public"/>
          <tag name="return" line="150" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="160" package="Zend_Server\Reflection">
        <name>getNamespace</name>
        <full_name>\Zend_Server_Reflection_Class::getNamespace()</full_name>
        <docblock line="160">
          <description>Get namespace for this class</description>
          <long-description></long-description>
          <tag name="return" line="160" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="171" package="Zend_Server\Reflection">
        <name>setNamespace</name>
        <full_name>\Zend_Server_Reflection_Class::setNamespace()</full_name>
        <docblock line="171">
          <description>Set namespace for this class</description>
          <long-description></long-description>
          <tag name="param" line="171" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="171" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="194" package="Zend_Server\Reflection">
        <name>__wakeup</name>
        <full_name>\Zend_Server_Reflection_Class::__wakeup()</full_name>
        <docblock line="194">
          <description>Wakeup from serialization</description>
          <long-description>Reflection needs explicit instantiation to work correctly. Re-instantiate
reflection object on wakeup.</long-description>
          <tag name="return" line="194" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Server/Reflection/Exception.php" generated-path="Server.Reflection.Exception.html" hash="55e36b0eb50536b973ff2b1c57f70828" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="36" package="Zend_Server\Reflection">
      <extends>\Zend_Server_Exception</extends>
      <name>Zend_Server_Reflection_Exception</name>
      <full_name>\Zend_Server_Reflection_Exception</full_name>
      <docblock line="36">
        <description>Zend_Server_Reflection exceptions</description>
        <long-description></long-description>
        <tag name="category" line="36" description="Zend"/>
        <tag name="package" line="36" description="Zend_Server"/>
        <tag name="subpackage" line="36" description="Reflection"/>
        <tag name="copyright" line="36" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="36" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="36" description="$Id$"/>
        <tag name="inherited_from" description="\Zend_Server_Exception" refers="\Zend_Server_Exception" link="/classes/Zend_Server_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <source>eJzVU8FO3DAQvecr5oAErNhki8QFKrEt3UqRVhxYuHBZOc4kcXHs1HY2bKv+O2MnXrhQVb2RU/zy5vnNm8nn667pkmw2S2AGj6hK+G5Yi4M2T4R4cJ3frG43q+l03wgLVveGI1RCIvhjX/xA7sBpcA2CwgG+br6BFByVRcKY87SiV6XE0qsMwjWEE9gx/sRqklGhNkhON6bu2aWenYdyJq0GtmNCskJ6VaP7uglV5FaW80GUOB+wALouaD/crS99feNcd5llVWws/UV9ply32WQxI8vzwgZreQV73UMpSlDagUGOYofAgOtuD7oKF8bWGOXFDEKvRk/aK+jCMWpHuL94PINOIiMF6yNnCrClxnw1hTipL6NNyhsGBE60QPf+Jj+ibbEUzKHcp9OElpyOtTZ7gDDQgMWYJ2y7QbNDM9JJx4i6cQA3h9cTfgrni8XF/Hzx6WLci3vkjdJS1wIp2s0XyBVP4WQKdxiGQ6ynQTdmRM8/D8CT4Xban/X4jcSyJG7o0iK+7WC7eubYOaFVoBn82QuDW61oPY89Lxt52YGX0r4fXyVvVz5q3WElaY+JBBjp9j9TpX8ifn2V/Sh5w5LasD6Ho7w8Cslyyax9J63XIVBujij2nRH9Tv4kL6VldNQ=</source>
  </file>
  <file path="Server/Reflection/Function/Abstract.php" generated-path="Server.Reflection.Function.Abstract.html" hash="92a22c692cff46e13681461ba2ca55d8" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="53" package="Zend_Server\Reflection">
      <extends/>
      <name>Zend_Server_Reflection_Function_Abstract</name>
      <full_name>\Zend_Server_Reflection_Function_Abstract</full_name>
      <docblock line="53">
        <description>Function/Method Reflection</description>
        <long-description>Decorates a ReflectionFunction. Allows setting and retrieving an alternate
'service' name (i.e., the name to be used when calling via a service),
setting and retrieving the description (originally set using the docblock
contents), retrieving the callback and callback type, retrieving additional
method invocation arguments, and retrieving the
method [prototypes](/classes/Zend_Server_Reflection_Prototype.html).</long-description>
        <tag name="category" line="53" description="Zend"/>
        <tag name="package" line="53" description="Zend_Server"/>
        <tag name="subpackage" line="53" description="Reflection"/>
        <tag name="copyright" line="53" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="53" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="53" description="$Id$"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="58" package="Zend_Server\Reflection">
        <name>$_reflection</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_reflection</full_name>
        <default></default>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\ReflectionFunction" variable="">
            <type>\ReflectionFunction</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Server\Reflection">
        <name>$_argv</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_argv</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Additional arguments to pass to method on invocation</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="73" package="Zend_Server\Reflection">
        <name>$_config</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_config</full_name>
        <default>array()</default>
        <docblock line="73">
          <description>Used to store extra configuration for the method (typically done by the
server class, e.g., to indicate whether or not to instantiate a class).</description>
          <long-description>Associative array; access is as properties via \__get() and
\__set()</long-description>
          <tag name="var" line="73" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="79" package="Zend_Server\Reflection">
        <name>$_class</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_class</full_name>
        <default></default>
        <docblock line="79">
          <description>Declaring class (needed for when serialization occurs)</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="85" package="Zend_Server\Reflection">
        <name>$_description</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_description</full_name>
        <default>''</default>
        <docblock line="85">
          <description>Function/method description</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="91" package="Zend_Server\Reflection">
        <name>$_namespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_namespace</full_name>
        <default></default>
        <docblock line="91">
          <description>Namespace with which to prefix function/method name</description>
          <long-description></long-description>
          <tag name="var" line="91" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="97" package="Zend_Server\Reflection">
        <name>$_prototypes</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_prototypes</full_name>
        <default>array()</default>
        <docblock line="97">
          <description>Prototypes</description>
          <long-description></long-description>
          <tag name="var" line="97" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="99" package="Zend_Server\Reflection">
        <name>$_return</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_return</full_name>
        <default></default>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="100" package="Zend_Server\Reflection">
        <name>$_returnDesc</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_returnDesc</full_name>
        <default></default>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="101" package="Zend_Server\Reflection">
        <name>$_paramDesc</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_paramDesc</full_name>
        <default></default>
        <docblock line="101">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="102" package="Zend_Server\Reflection">
        <name>$_sigParams</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_sigParams</full_name>
        <default></default>
        <docblock line="102">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="103" package="Zend_Server\Reflection">
        <name>$_sigParamsDepth</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_sigParamsDepth</full_name>
        <default></default>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__construct()</full_name>
        <docblock line="110">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="\ReflectionFunction" variable="$r">
            <type>\ReflectionFunction</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$r</name>
          <default></default>
          <type>\ReflectionFunction</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="153" package="Zend_Server\Reflection">
        <name>_addTree</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_addTree()</full_name>
        <docblock line="153">
          <description>Create signature node tree</description>
          <long-description>Recursive method to build the signature node tree. Increments through
each array in \$_sigParams, adding every value of the next level
to the current value (unless the current value is null).</long-description>
          <tag name="param" line="153" description="" type="\Zend_Server_Reflection_Node" variable="$parent">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
          <tag name="param" line="153" description="" type="integer" variable="$level">
            <type>integer</type>
          </tag>
          <tag name="return" line="153" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>\Zend_Server_Reflection_Node</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="176" package="Zend_Server\Reflection">
        <name>_buildTree</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_buildTree()</full_name>
        <docblock line="176">
          <description>Build the signature tree</description>
          <long-description>Builds a signature tree starting at the return values and descending
through each method argument. Returns an array of
[Zend_Server_Reflection_Node](/classes/Zend_Server_Reflection_Node.html)s.</long-description>
          <tag name="return" line="176" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="200" package="Zend_Server\Reflection">
        <name>_buildSignatures</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_buildSignatures()</full_name>
        <docblock line="200">
          <description>Build method signatures</description>
          <long-description>Builds method signatures using the array of return types and the array of
parameters types</long-description>
          <tag name="param" line="200" description="&lt;p&gt;Array of return types&lt;/p&gt;" type="array" variable="$return">
            <type>array</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Return value description&lt;/p&gt;" type="string" variable="$returnDesc">
            <type>string</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Array of arguments (each an array of types)&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Array of parameter descriptions&lt;/p&gt;" type="array" variable="$paramDesc">
            <type>array</type>
          </tag>
          <tag name="return" line="200" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnDesc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramTypes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramDesc</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="259" package="Zend_Server\Reflection">
        <name>_reflect</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_reflect()</full_name>
        <docblock line="259">
          <description>Use code reflection to create method signatures</description>
          <long-description>Determines the method help/description text from the function DocBlock
comment. Determines method signatures using a combination of
ReflectionFunction and parsing of DocBlock @param and @return values.</long-description>
          <tag name="param" line="259" description="" type="\ReflectionFunction" variable="$function">
            <type>\ReflectionFunction</type>
          </tag>
          <tag name="return" line="259" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="377" package="Zend_Server\Reflection">
        <name>__call</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__call()</full_name>
        <docblock line="377">
          <description>Proxy reflection calls</description>
          <long-description></long-description>
          <tag name="param" line="377" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="377" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="377" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="396" package="Zend_Server\Reflection">
        <name>__get</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__get()</full_name>
        <docblock line="396">
          <description>Retrieve configuration parameters</description>
          <long-description>Values are retrieved by key from \$_config. Returns null if no
value found.</long-description>
          <tag name="param" line="396" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="396" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="414" package="Zend_Server\Reflection">
        <name>__set</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__set()</full_name>
        <docblock line="414">
          <description>Set configuration parameters</description>
          <long-description>Values are stored by $key in \$_config.</long-description>
          <tag name="param" line="414" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="414" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="414" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="425" package="Zend_Server\Reflection">
        <name>setNamespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::setNamespace()</full_name>
        <docblock line="425">
          <description>Set method's namespace</description>
          <long-description></long-description>
          <tag name="param" line="425" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="425" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="445" package="Zend_Server\Reflection">
        <name>getNamespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getNamespace()</full_name>
        <docblock line="445">
          <description>Return method's namespace</description>
          <long-description></long-description>
          <tag name="return" line="445" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="456" package="Zend_Server\Reflection">
        <name>setDescription</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::setDescription()</full_name>
        <docblock line="456">
          <description>Set the description</description>
          <long-description></long-description>
          <tag name="param" line="456" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="456" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="471" package="Zend_Server\Reflection">
        <name>getDescription</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getDescription()</full_name>
        <docblock line="471">
          <description>Retrieve the description</description>
          <long-description></long-description>
          <tag name="return" line="471" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="482" package="Zend_Server\Reflection">
        <name>getPrototypes</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getPrototypes()</full_name>
        <docblock line="482">
          <description>Retrieve all prototypes as array of
{@link Zend_Server_Reflection_Prototype Zend_Server_Reflection_Prototypes}</description>
          <long-description></long-description>
          <tag name="return" line="482" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="492" package="Zend_Server\Reflection">
        <name>getInvokeArguments</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getInvokeArguments()</full_name>
        <docblock line="492">
          <description>Retrieve additional invocation arguments</description>
          <long-description></long-description>
          <tag name="return" line="492" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="505" package="Zend_Server\Reflection">
        <name>__wakeup</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__wakeup()</full_name>
        <docblock line="505">
          <description>Wakeup from serialization</description>
          <long-description>Reflection needs explicit instantiation to work correctly. Re-instantiate
reflection object on wakeup.</long-description>
          <tag name="return" line="505" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="110" code="PPC:ERR-50015">Argument $namespace is missing from the Docblock of __construct</error>
      <error line="110" code="PPC:ERR-50015">Argument $argv is missing from the Docblock of __construct</error>
      <error line="58" code="PPC:ERR-50007">No summary for property $_reflection</error>
      <error line="99" code="PPC:ERR-50007">No summary for property $_return</error>
      <error line="100" code="PPC:ERR-50007">No summary for property $_returnDesc</error>
      <error line="101" code="PPC:ERR-50007">No summary for property $_paramDesc</error>
      <error line="102" code="PPC:ERR-50007">No summary for property $_sigParams</error>
      <error line="103" code="PPC:ERR-50007">No summary for property $_sigParamsDepth</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Server/Reflection/ReturnValue.php" generated-path="Server.Reflection.ReturnValue.html" hash="558c3d438c0a8deb2c850068e4f2966b" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="33" package="Zend_Server\Reflection">
      <extends/>
      <name>Zend_Server_Reflection_ReturnValue</name>
      <full_name>\Zend_Server_Reflection_ReturnValue</full_name>
      <docblock line="33">
        <description>Return value reflection</description>
        <long-description>Stores the return value type and description</long-description>
        <tag name="category" line="33" description="Zend"/>
        <tag name="package" line="33" description="Zend_Server"/>
        <tag name="subpackage" line="33" description="Reflection"/>
        <tag name="copyright" line="33" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="33" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="33" description="$Id$"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="39" package="Zend_Server\Reflection">
        <name>$_type</name>
        <full_name>\Zend_Server_Reflection_ReturnValue::_type</full_name>
        <default></default>
        <docblock line="39">
          <description>Return value type</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="Zend_Server\Reflection">
        <name>$_description</name>
        <full_name>\Zend_Server_Reflection_ReturnValue::_description</full_name>
        <default></default>
        <docblock line="45">
          <description>Return value description</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_ReturnValue::__construct()</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Return value type&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="53" description="&lt;p&gt;Return value type&lt;/p&gt;" type="string" variable="$description">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'mixed'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="Zend_Server\Reflection">
        <name>getType</name>
        <full_name>\Zend_Server_Reflection_ReturnValue::getType()</full_name>
        <docblock line="64">
          <description>Retrieve parameter type</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend_Server\Reflection">
        <name>setType</name>
        <full_name>\Zend_Server_Reflection_ReturnValue::setType()</full_name>
        <docblock line="75">
          <description>Set parameter type</description>
          <long-description></long-description>
          <tag name="param" line="75" description="" type="string|null" variable="$type">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="75" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="90" package="Zend_Server\Reflection">
        <name>getDescription</name>
        <full_name>\Zend_Server_Reflection_ReturnValue::getDescription()</full_name>
        <docblock line="90">
          <description>Retrieve parameter description</description>
          <long-description></long-description>
          <tag name="return" line="90" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="Zend_Server\Reflection">
        <name>setDescription</name>
        <full_name>\Zend_Server_Reflection_ReturnValue::setDescription()</full_name>
        <docblock line="101">
          <description>Set parameter description</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="string|null" variable="$description">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="101" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default></default>
          <type>string|null</type>
        </argument>
      </method>
    </class>
    <source>eJzVVcFS2zAQvecrtjMZkjAkpsxwgdLSAp3JDMOB0B568SjyJlFxJFeWY9KWf+9KloMdnAR6an1JLO2+ffv2yXr3IZklrWB/vwX78A1lBJ81m2Ou9D2t2MXr4cXVzejKv93NRAqpyjRHmIgYwb5m4+/IDRgFZoYgMYdPo0uIBUeZIq0xY8PGmYxijCxKLsyM1mkxYfyeTQlGulwH6SsOzIMZ2OihS2dxqoAtmIjZOLaoWmXTmcsitnHUz0WE/RzHQOUc9pfb6xObPzMmOQmCSdnY4Cf1OeBqHniKAVHuj1NHbTiBpcogEhFIZUAjR7FAYMBVsgQ1cQXL1hjpxTRCJgtOyiKosWHUjjBbOB5AEiMjhNRKziTgnBqz2SSiRz8vaZLekCNwCnPhlp/nI+ZzjAQzGC8HfkLnnF6nSi8B3EDdWimzXwtHqBeoi3DC0WI6MwAXq79d3oOjw8Pj/tHh2+PCF3fIZ1LFaiqQpB19hKHkA+h6cfM8X8nac7ilRvS8eAA2GG68f66LPQILWqVDb9FkWsKCxRnSbCYx+U4o6VsfGaWJnJVbVwPNMilmFWHKtUgqKa9Vi7xe7t5Wy/8XOsI5tZESYWgPo7YTlscsTatdhk9thYXaX62GrV8ti+nGYJ+1UViFy43zBdOQGi3k1C8F7jfRyhAwRtAObfxpaytkbVYvR66kPS9woSSlZ5x84pdW0AkjVT04tJ1jNndYD66U3JjjiWZjmhRMMukEhjDkJaNuUfMMOnPxgFHnoI5L652ewygGYZ+2/cr136do7ii1AOidNmxfPgF1q6g++LFpEFogffZco2hQV3tZyeAPWdNE1hqdeo7rLXgET9XbopnTCM0OOtWp/JZZHBdzXKe7UCLaSrYu6BpjMYHuG5GGRRkfA3t70HUV35ydFVV7vUpS0eqPTGgMlaSrs2NPXFCcuODpxAVXDxzdaAZ0LXdOawD2Nsnd7brhuK6Su52hJAfSFVYXrFNxhxe4YpTQG7C9bQoNznh+UP/OIFWX7vBJ7ZC/xC5bODa4punT8wrzbDxuO6xUDV1zVHXrHzNWhdoOf9W/Z+2GIT62/gAs7Drl</source>
  </file>
  <file path="Server/Reflection/Method.php" generated-path="Server.Reflection.Method.html" hash="e9d29d11b60f20adeb0823c629bbc26d" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Server\Reflection">
      <extends>\Zend_Server_Reflection_Function_Abstract</extends>
      <name>Zend_Server_Reflection_Method</name>
      <full_name>\Zend_Server_Reflection_Method</full_name>
      <docblock line="37">
        <description>Method Reflection</description>
        <long-description>Decorates a ReflectionFunction. Allows setting and retrieving an alternate
'service' name (i.e., the name to be used when calling via a service),
setting and retrieving the description (originally set using the docblock
contents), retrieving the callback and callback type, retrieving additional
method invocation arguments, and retrieving the
method [prototypes](/classes/Zend_Server_Reflection_Prototype.html).</long-description>
        <tag name="uses" line="37" description="" link="Zend_Server_Reflection_Function_Abstract"/>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Server"/>
        <tag name="subpackage" line="37" description="Reflection"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="37" description="$Id$"/>
        <tag name="inherited_from" description="\Zend_Server_Reflection_Function_Abstract" refers="\Zend_Server_Reflection_Function_Abstract" link="/classes/Zend_Server_Reflection_Function_Abstract.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Server\Reflection">
        <name>$_class</name>
        <full_name>\Zend_Server_Reflection_Method::_class</full_name>
        <default></default>
        <docblock line="43">
          <description>Parent class name</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Reflection_Function_Abstract::_class" refers="\Zend_Server_Reflection_Function_Abstract::_class" link="/classes/Zend_Server_Reflection_Function_Abstract.html#property__class"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="Zend_Server\Reflection">
        <name>$_classReflection</name>
        <full_name>\Zend_Server_Reflection_Method::_classReflection</full_name>
        <default></default>
        <docblock line="49">
          <description>Parent class reflection</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="\Zend_Server_Reflection_Class" variable="">
            <type>\Zend_Server_Reflection_Class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="58" package="Zend_Server\Reflection">
        <name>$_reflection</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_reflection</full_name>
        <default></default>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\ReflectionFunction" variable="">
            <type>\ReflectionFunction</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Server\Reflection">
        <name>$_argv</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_argv</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Additional arguments to pass to method on invocation</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="73" package="Zend_Server\Reflection">
        <name>$_config</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_config</full_name>
        <default>array()</default>
        <docblock line="73">
          <description>Used to store extra configuration for the method (typically done by the
server class, e.g., to indicate whether or not to instantiate a class).</description>
          <long-description>Associative array; access is as properties via \__get() and
\__set()</long-description>
          <tag name="var" line="73" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="79" package="Zend_Server\Reflection">
        <name>$_class</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_class</full_name>
        <default></default>
        <docblock line="79">
          <description>Declaring class (needed for when serialization occurs)</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="85" package="Zend_Server\Reflection">
        <name>$_description</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_description</full_name>
        <default>''</default>
        <docblock line="85">
          <description>Function/method description</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="91" package="Zend_Server\Reflection">
        <name>$_namespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_namespace</full_name>
        <default></default>
        <docblock line="91">
          <description>Namespace with which to prefix function/method name</description>
          <long-description></long-description>
          <tag name="var" line="91" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="97" package="Zend_Server\Reflection">
        <name>$_prototypes</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_prototypes</full_name>
        <default>array()</default>
        <docblock line="97">
          <description>Prototypes</description>
          <long-description></long-description>
          <tag name="var" line="97" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="99" package="Zend_Server\Reflection">
        <name>$_return</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_return</full_name>
        <default></default>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="100" package="Zend_Server\Reflection">
        <name>$_returnDesc</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_returnDesc</full_name>
        <default></default>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="101" package="Zend_Server\Reflection">
        <name>$_paramDesc</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_paramDesc</full_name>
        <default></default>
        <docblock line="101">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="102" package="Zend_Server\Reflection">
        <name>$_sigParams</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_sigParams</full_name>
        <default></default>
        <docblock line="102">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="103" package="Zend_Server\Reflection">
        <name>$_sigParamsDepth</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_sigParamsDepth</full_name>
        <default></default>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Method::__construct()</full_name>
        <docblock line="60">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="60" description="" type="\Zend_Server_Reflection_Class" variable="$class">
            <type>\Zend_Server_Reflection_Class</type>
          </tag>
          <tag name="param" line="60" description="" type="\ReflectionMethod" variable="$r">
            <type>\ReflectionMethod</type>
          </tag>
          <tag name="param" line="60" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="60" description="" type="array" variable="$argv">
            <type>array</type>
          </tag>
          <tag name="return" line="60" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Reflection_Function_Abstract::__construct()" refers="\Zend_Server_Reflection_Function_Abstract::__construct()" link="/classes/Zend_Server_Reflection_Function_Abstract.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>\Zend_Server_Reflection_Class</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$r</name>
          <default></default>
          <type>\ReflectionMethod</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="Zend_Server\Reflection">
        <name>getDeclaringClass</name>
        <full_name>\Zend_Server_Reflection_Method::getDeclaringClass()</full_name>
        <docblock line="91">
          <description>Return the reflection for the class that defines this method</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="\Zend_Server_Reflection_Class">
            <type>\Zend_Server_Reflection_Class</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="Zend_Server\Reflection">
        <name>__wakeup</name>
        <full_name>\Zend_Server_Reflection_Method::__wakeup()</full_name>
        <docblock line="104">
          <description>Wakeup from serialization</description>
          <long-description>Reflection needs explicit instantiation to work correctly. Re-instantiate
reflection object on wakeup.</long-description>
          <tag name="return" line="104" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Reflection_Function_Abstract::__wakeup()" refers="\Zend_Server_Reflection_Function_Abstract::__wakeup()" link="/classes/Zend_Server_Reflection_Function_Abstract.html#method___wakeup"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__construct()</full_name>
        <docblock line="110">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="\ReflectionFunction" variable="$r">
            <type>\ReflectionFunction</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$r</name>
          <default></default>
          <type>\ReflectionFunction</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>array()</default>
          <type/>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="153" package="Zend_Server\Reflection">
        <name>_addTree</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_addTree()</full_name>
        <docblock line="153">
          <description>Create signature node tree</description>
          <long-description>Recursive method to build the signature node tree. Increments through
each array in \$_sigParams, adding every value of the next level
to the current value (unless the current value is null).</long-description>
          <tag name="param" line="153" description="" type="\Zend_Server_Reflection_Node" variable="$parent">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
          <tag name="param" line="153" description="" type="integer" variable="$level">
            <type>integer</type>
          </tag>
          <tag name="return" line="153" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>\Zend_Server_Reflection_Node</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="176" package="Zend_Server\Reflection">
        <name>_buildTree</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_buildTree()</full_name>
        <docblock line="176">
          <description>Build the signature tree</description>
          <long-description>Builds a signature tree starting at the return values and descending
through each method argument. Returns an array of
[Zend_Server_Reflection_Node](/classes/Zend_Server_Reflection_Node.html)s.</long-description>
          <tag name="return" line="176" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="200" package="Zend_Server\Reflection">
        <name>_buildSignatures</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_buildSignatures()</full_name>
        <docblock line="200">
          <description>Build method signatures</description>
          <long-description>Builds method signatures using the array of return types and the array of
parameters types</long-description>
          <tag name="param" line="200" description="&lt;p&gt;Array of return types&lt;/p&gt;" type="array" variable="$return">
            <type>array</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Return value description&lt;/p&gt;" type="string" variable="$returnDesc">
            <type>string</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Array of arguments (each an array of types)&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Array of parameter descriptions&lt;/p&gt;" type="array" variable="$paramDesc">
            <type>array</type>
          </tag>
          <tag name="return" line="200" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnDesc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramTypes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramDesc</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="259" package="Zend_Server\Reflection">
        <name>_reflect</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_reflect()</full_name>
        <docblock line="259">
          <description>Use code reflection to create method signatures</description>
          <long-description>Determines the method help/description text from the function DocBlock
comment. Determines method signatures using a combination of
ReflectionFunction and parsing of DocBlock @param and @return values.</long-description>
          <tag name="param" line="259" description="" type="\ReflectionFunction" variable="$function">
            <type>\ReflectionFunction</type>
          </tag>
          <tag name="return" line="259" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="377" package="Zend_Server\Reflection">
        <name>__call</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__call()</full_name>
        <docblock line="377">
          <description>Proxy reflection calls</description>
          <long-description></long-description>
          <tag name="param" line="377" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="377" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="377" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="396" package="Zend_Server\Reflection">
        <name>__get</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__get()</full_name>
        <docblock line="396">
          <description>Retrieve configuration parameters</description>
          <long-description>Values are retrieved by key from \$_config. Returns null if no
value found.</long-description>
          <tag name="param" line="396" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="396" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="414" package="Zend_Server\Reflection">
        <name>__set</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__set()</full_name>
        <docblock line="414">
          <description>Set configuration parameters</description>
          <long-description>Values are stored by $key in \$_config.</long-description>
          <tag name="param" line="414" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="414" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="414" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="425" package="Zend_Server\Reflection">
        <name>setNamespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::setNamespace()</full_name>
        <docblock line="425">
          <description>Set method's namespace</description>
          <long-description></long-description>
          <tag name="param" line="425" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="425" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="445" package="Zend_Server\Reflection">
        <name>getNamespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getNamespace()</full_name>
        <docblock line="445">
          <description>Return method's namespace</description>
          <long-description></long-description>
          <tag name="return" line="445" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="456" package="Zend_Server\Reflection">
        <name>setDescription</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::setDescription()</full_name>
        <docblock line="456">
          <description>Set the description</description>
          <long-description></long-description>
          <tag name="param" line="456" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="456" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="471" package="Zend_Server\Reflection">
        <name>getDescription</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getDescription()</full_name>
        <docblock line="471">
          <description>Retrieve the description</description>
          <long-description></long-description>
          <tag name="return" line="471" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="482" package="Zend_Server\Reflection">
        <name>getPrototypes</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getPrototypes()</full_name>
        <docblock line="482">
          <description>Retrieve all prototypes as array of
{@link Zend_Server_Reflection_Prototype Zend_Server_Reflection_Prototypes}</description>
          <long-description></long-description>
          <tag name="return" line="482" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="492" package="Zend_Server\Reflection">
        <name>getInvokeArguments</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getInvokeArguments()</full_name>
        <docblock line="492">
          <description>Retrieve additional invocation arguments</description>
          <long-description></long-description>
          <tag name="return" line="492" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="505" package="Zend_Server\Reflection">
        <name>__wakeup</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__wakeup()</full_name>
        <docblock line="505">
          <description>Wakeup from serialization</description>
          <long-description>Reflection needs explicit instantiation to work correctly. Re-instantiate
reflection object on wakeup.</long-description>
          <tag name="return" line="505" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
    </class>
    <source>eJzVVktv20YQvvtXTAEBoQxJdAPkkrSpXTsBBDhGYCco0IuwIofS1uQuu7uUohT+7519UFxRpaAcy4vE2Xl8882D+8tv9bq+SC8vL+AS/kSRw0fFKtxK9UwSK7yf3354ePoQ3r6suQYtG5UhFLxEsK/N8i/MDBgJZo0gcAu/P91ByTMUGknGjFVbNiIvMbdettysSU7CmmXPbEVuhLN1LkPEmflmZlZ77sxZqSWwDeMlW5bWq5LNau2sCG2ZT7c8x+kWl0DhnO+vj/dvrf3amPptmhZtYrPvlOcsk1UaIKYEebrUDtq8gJ1sIOc5CGlAYYZ8g8Agk/UOZOECtqkx4osphEZ4TNJ6kEvDKB1uTmCcQF0iIw/aUs4EYEWJWWsiMXi/bmES37BFyEjNqVt8AQ+vKsw5M1juZqFC1xm9rqTaAbiCOllLc5AtnlBtUHl18qP4am0Abvd/k2wMr6+u3kxfX/38xvfFF8zWQpZyxZGofbqBuchmkARyt9vtntax89tyRM/ZBbDK8BD6596fkbP0Iu7QAH7xiEVJbcelWHxshP9zs9RGscw4I4V/N1zhQgpq1lfWNPWmaWeatqZpazqjgXj1bh/xE5q1zKGzaGluNPHgnx9A9cPloeFqTw8w/C8KB9eUhibAMJrnI1eUrGRaDzEWyMZvhs4HtY55/efCxncVs88lfKapFAZ8MEHo24PrDVNAVlysgih1v7WShtxjDqOFs6IOOOVTRbWIPA8gvrU2p+N12seRb6UgyE1mpAqifdCaUW1OhoVRFkVvLTqtwPlI9TQ8STCy7GlqQeydM6XYDkZMrTb7E4WmUQI2kueH2TZLahgoQuFgscjalJIzsE/+C+4kgga/gmjKcuLh0JsDl4zHLrrvDvuM7Hdh+r7POBmMQtH7ml2dvZw0VSiQU3NmDxEOL5m+X6HZi5NxZJKmcIcGVcUFQo9cengByU9Y1WaXdPmNx1ESETwdB4nUuzxeAEuNsdNDxOd57tlE7gfyojI0FU2LPsiL64UvjCvTUOhFqKFTGgpFn+nKd0LGbOEF0ijRt1PTjNBXVVb2SlFIkP5eEY1Avw2Oa9Yv12dUhVRV69Uoqet49o/bJQkUvRyN8qOfEIspai1y38H0F6YcCyJS+5uMT7U/+2Hazt85vSmkdO+QQto5d9pJf15ChIGxGcrxD/aMTQ2FslcXVJyV/DuLVmXHxZ4AWz5Ne78mgHRx4rQcmDDcWdmy2o8P3XgUXccMXXXIdNrp7DdTxKj0V1L6t3VoZgPknbGqvIMjboZ3ib0AnypKYhU6oZcduBtPWveHayQWz8VGPuNNO2i07E5uLw+rv0eTgSyiWehD2Qeiwr9c/AtfLdLb</source>
  </file>
  <file path="Server/Reflection/Prototype.php" generated-path="Server.Reflection.Prototype.html" hash="bfaabee352f5a96f65c21c619ebd5f60" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="43" package="Zend_Server\Reflection">
      <extends/>
      <name>Zend_Server_Reflection_Prototype</name>
      <full_name>\Zend_Server_Reflection_Prototype</full_name>
      <docblock line="43">
        <description>Method/Function prototypes</description>
        <long-description>Contains accessors for the return value and all method arguments.</long-description>
        <tag name="category" line="43" description="Zend"/>
        <tag name="package" line="43" description="Zend_Server"/>
        <tag name="subpackage" line="43" description="Reflection"/>
        <tag name="copyright" line="43" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="43" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="43" description="$Id$"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="52" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Prototype::__construct()</full_name>
        <docblock line="52">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="52" description="" type="\Zend_Server_Reflection_ReturnValue" variable="$return">
            <type>\Zend_Server_Reflection_ReturnValue</type>
          </tag>
          <tag name="param" line="52" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="52" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default></default>
          <type>\Zend_Server_Reflection_ReturnValue</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="Zend_Server\Reflection">
        <name>getReturnType</name>
        <full_name>\Zend_Server_Reflection_Prototype::getReturnType()</full_name>
        <docblock line="78">
          <description>Retrieve return type</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="89" package="Zend_Server\Reflection">
        <name>getReturnValue</name>
        <full_name>\Zend_Server_Reflection_Prototype::getReturnValue()</full_name>
        <docblock line="89">
          <description>Retrieve the return value object</description>
          <long-description></long-description>
          <tag name="access" line="89" description="public"/>
          <tag name="return" line="89" description="" type="\Zend_Server_Reflection_ReturnValue">
            <type>\Zend_Server_Reflection_ReturnValue</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="Zend_Server\Reflection">
        <name>getParameters</name>
        <full_name>\Zend_Server_Reflection_Prototype::getParameters()</full_name>
        <docblock line="99">
          <description>Retrieve method parameters</description>
          <long-description></long-description>
          <tag name="return" line="99" description="Array of {@link Zend_Server_Reflection_Parameter}s" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzVVk1vEzEQvedXDFLUJhXJFiQuQEtLKVKk8iFaOHCJHO8ka+rYi+3NNqD+d8Zee5OmlESIC3tod+2Z53nPb+y8fFUWZSc7OOjAAXxFlcNbw+ZYa3NNI37wYnR2/v7yPH5dFcKC1ZXhCFMhEfxnNfmG3IHT4AoEhTW8vnwDUnBUFmmMOR82qVQuMfcotXAFjdNgyfg1mxGMCrkBMq44dDdu6KNHIZ1Jq4EtmJBsIj2q0dWsCFlUrcwHtchxUOMEaLmA/fnTxXOfXzhXPs+yaSI2/EE8h1zPs1hiRiUPJjaUNprCUleQixyUdmCQo1ggMOC6XIKehgUTNUZ6MYNQqaYm7RH0xDGiI9wfanwMpURGCNZLzhTgnIj5bBIxop+kMklvqBE4hYVwX1+sR8znmAvmUC6HcYdOOH3OtFkChA0NY0nmODa+RLNA04QTjhGzwgGcta893oenh4fPBk8PnzxrfHGFvFBa6plAkvbyFEaKD6EXxa3rupW1H3CTRvTsvAE+GN5H/1w0cwSWddYdGosff8KpJNsJrejVVUZ9YbJqwg1+r4TBsVZk032flDVJ2SopW0saUhPsv9i2ykfmCbig245rtCkbK7xDV+g8e1upEAel0U67ZYk27uKZVt5FZHvO0VptLEy1CU4yoW5Y+MIbB0oJ8wBIZpxVc1TO/q0bqJfT7IrG/+ITOCEa1uvZHeXdsEtcMmsf3NCkeudnxyOGzfFP0N86U3GnTRxKM6Qe1beDE6Hb7NRGIjOGLaEbPmw7lzZVizyOZeF/WU2IO0yTUcZjnirr7V7C47QeHIGqpOwH7Ia0f7r+vBwcj2MVRymPDJtCxBR6j4Qdh/J7Ea4Pe3vQ84jw6OgoLdLvr0H7Z6dWOb/hWPq32CrrAP4grcPF8gDnNrm3P1LUGXR6l6n17H5/hXZ7l9E9QpulU9Mh4wWkAGA20tyMbEVqpulGs44RYboytp0nv4P6J7r9jX4fFAKdNHMiDomz8Rd0kHVdy5Wmv/9a0zoZrHVhlLMBi4Fr7UceNgIX7WEXmrSZ22wZagahZn9smhm6pimuCKa3af6Ic7cHBseU1IRvrfHeoazD76HNepuTPBa3yWKXi20XhiF0N4pbecU7ZdVID+xAc6Kdhr/k9p90pKvrraa/tdsYtaF2G6G7Zrrt/ALvb1+a</source>
  </file>
  <file path="Server/Reflection/Parameter.php" generated-path="Server.Reflection.Parameter.html" hash="a6dec02c38f7ca7e8fe44bc7154d15fc" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="33" package="Zend_Server\Reflection">
      <extends/>
      <name>Zend_Server_Reflection_Parameter</name>
      <full_name>\Zend_Server_Reflection_Parameter</full_name>
      <docblock line="33">
        <description>Parameter Reflection</description>
        <long-description>Decorates a ReflectionParameter to allow setting the parameter type</long-description>
        <tag name="category" line="33" description="Zend"/>
        <tag name="package" line="33" description="Zend_Server"/>
        <tag name="subpackage" line="33" description="Reflection"/>
        <tag name="copyright" line="33" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="33" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="33" description="$Id$"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="38" package="Zend_Server\Reflection">
        <name>$_reflection</name>
        <full_name>\Zend_Server_Reflection_Parameter::_reflection</full_name>
        <default></default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="\ReflectionParameter" variable="">
            <type>\ReflectionParameter</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="44" package="Zend_Server\Reflection">
        <name>$_position</name>
        <full_name>\Zend_Server_Reflection_Parameter::_position</full_name>
        <default></default>
        <docblock line="44">
          <description>Parameter position</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="50" package="Zend_Server\Reflection">
        <name>$_type</name>
        <full_name>\Zend_Server_Reflection_Parameter::_type</full_name>
        <default></default>
        <docblock line="50">
          <description>Parameter type</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="Zend_Server\Reflection">
        <name>$_description</name>
        <full_name>\Zend_Server_Reflection_Parameter::_description</full_name>
        <default></default>
        <docblock line="56">
          <description>Parameter description</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Parameter::__construct()</full_name>
        <docblock line="65">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="65" description="" type="\ReflectionParameter" variable="$r">
            <type>\ReflectionParameter</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Parameter type&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Parameter description&lt;/p&gt;" type="string" variable="$description">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$r</name>
          <default></default>
          <type>\ReflectionParameter</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'mixed'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="Zend_Server\Reflection">
        <name>__call</name>
        <full_name>\Zend_Server_Reflection_Parameter::__call()</full_name>
        <docblock line="79">
          <description>Proxy reflection calls</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="79" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="Zend_Server\Reflection">
        <name>getType</name>
        <full_name>\Zend_Server_Reflection_Parameter::getType()</full_name>
        <docblock line="94">
          <description>Retrieve parameter type</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="105" package="Zend_Server\Reflection">
        <name>setType</name>
        <full_name>\Zend_Server_Reflection_Parameter::setType()</full_name>
        <docblock line="105">
          <description>Set parameter type</description>
          <long-description></long-description>
          <tag name="param" line="105" description="" type="string|null" variable="$type">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="105" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="Zend_Server\Reflection">
        <name>getDescription</name>
        <full_name>\Zend_Server_Reflection_Parameter::getDescription()</full_name>
        <docblock line="120">
          <description>Retrieve parameter description</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Zend_Server\Reflection">
        <name>setDescription</name>
        <full_name>\Zend_Server_Reflection_Parameter::setDescription()</full_name>
        <docblock line="131">
          <description>Set parameter description</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string|null" variable="$description">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="131" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default></default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="147" package="Zend_Server\Reflection">
        <name>setPosition</name>
        <full_name>\Zend_Server_Reflection_Parameter::setPosition()</full_name>
        <docblock line="147">
          <description>Set parameter position</description>
          <long-description></long-description>
          <tag name="param" line="147" description="" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="147" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="157" package="Zend_Server\Reflection">
        <name>getPosition</name>
        <full_name>\Zend_Server_Reflection_Parameter::getPosition()</full_name>
        <docblock line="157">
          <description>Return parameter position</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="38" code="PPC:ERR-50007">No summary for property $_reflection</error>
    </parse_markers>
    <source>eJzVVk1v20YQvetXTAAiogxJdAPkktStW9sFBBhBYLmXXogVOZK2oXbZ5VKU2ua/d/aDEkVRUuxeWh4Sa3f2zZs3bz++/zFf5r3o6qoHV/AbihR+UWyFlVRfaMQMPk7uHj5NH/yv5yUvoJClShDmPEMwP8vZ75ho0BL0EkFgBT9P7yHjCYoCaYxpEzYrRZphalAqrpc0ToM5S76wBcEIu9ZC+oxjvdFjEz2xy1lWSGBrxjM2ywyqkuViaVcR2ywdVTzFUYUzoHQW+9enxw9m/VLr/EMUzevCxn9SneNEriJPMSLKo1lhqU3msJUlpDwFITUoTJCvERgkMt+CnNuEdWmM9GIKoRSOkzQIcqYZlcP1GY5DyDNkhFAYyZkAXFFhZjWJ6NFva5qkN1QICYXZcMPP8+GrFaacacy2Y9+h24R+LqTaAtiG2rFaZj8WT1GtUblwwlF8sdQAd7s/w2QA766v34/eXX/33vniGZOlkJlccCRppz/BRCRjCL24VVXtZB1Y3Foj+r65ASYYPnn/PLo5Aot6tUM/M4OhUcETzjMyHZfC132PiVRUOjmlMblfQMKyLJMVaag1FwvblXw/vc3xlQqS/+vZA1b/C23hlsooiDAEkzSwYicZK4pmlfG+rHgnaO+vnkG0jTGfQWKqS3o/H9n/cyU1zWMKQax2sR97bbB943JZcKdoIw0X+iRsveAcqGt3A7DQikxxEtPEn8NLsUgUz494XoBtLDtGv5OClpeJlrWEO2jr206bB6oV5BhAYCo4JcBhZIPU2Qp9OeWMnAbzUlgmEMdJzTvsJjj0ZG6gv+IbTPvDw5w03h9YbGcx8wXmRB/90LAMhQXqYzuANvczYYc2w6Br+n6fKWym9cFfj5us5GYLjcQJnSNFd0dqCanUpUxbk0wptoWAqUWxm1GoSyXA6nBJVkobeuShg2mrxOcQuoAYN7zQRXis27BmNxg0VprPczF54rKgbW+Sx5Z16P49h1ZT2mvupXTQf5RcYSwFvRv65miJ3NES7S0SPWwStK0Y05ukv8cx12hlnxUnzqTdwrA/EWuW0d3daJfj1z/Z3yekpuH6+DI4bLBXp2tDt1q18B5sd8cj1CK6I6Wb0xT1BTpNv/0tyixzm6pNdy35eV8dbpgOP73hRezS+Bh4+xZCm/HNzY3L2mGlf9Hv1/b8ULB+txOb6oOn/wJnHJ+CrzNI8xS64JODO+Jb7HKGY4drum6uF5jn5HF6wUrN0JajmlP/MWM1qF3w1+GFFry4ia1XT6uD9PyBgIsUN6/p2WePHTqIU3dtTYH4h5Rw4DOe2S2GwOUSPNOjJ9zxLtkRvbBF9i8+R+1r7x9Cd3zk</source>
  </file>
  <file path="Server/Reflection/Function.php" generated-path="Server.Reflection.Function.html" hash="70e82f9b8847052e24cac2e156516d82" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Server\Reflection">
      <extends>\Zend_Server_Reflection_Function_Abstract</extends>
      <name>Zend_Server_Reflection_Function</name>
      <full_name>\Zend_Server_Reflection_Function</full_name>
      <docblock line="37">
        <description>Function Reflection</description>
        <long-description>Decorates a ReflectionFunction. Allows setting and retrieving an alternate
'service' name (i.e., the name to be used when calling via a service),
setting and retrieving the description (originally set using the docblock
contents), retrieving the callback and callback type, retrieving additional
method invocation arguments, and retrieving the
method [prototypes](/classes/Zend_Server_Reflection_Prototype.html).</long-description>
        <tag name="uses" line="37" description="" link="Zend_Server_Reflection_Function_Abstract"/>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Server"/>
        <tag name="subpackage" line="37" description="Reflection"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="37" description="$Id$"/>
        <tag name="inherited_from" description="\Zend_Server_Reflection_Function_Abstract" refers="\Zend_Server_Reflection_Function_Abstract" link="/classes/Zend_Server_Reflection_Function_Abstract.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="58" package="Zend_Server\Reflection">
        <name>$_reflection</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_reflection</full_name>
        <default></default>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\ReflectionFunction" variable="">
            <type>\ReflectionFunction</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Server\Reflection">
        <name>$_argv</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_argv</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Additional arguments to pass to method on invocation</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="73" package="Zend_Server\Reflection">
        <name>$_config</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_config</full_name>
        <default>array()</default>
        <docblock line="73">
          <description>Used to store extra configuration for the method (typically done by the
server class, e.g., to indicate whether or not to instantiate a class).</description>
          <long-description>Associative array; access is as properties via \__get() and
\__set()</long-description>
          <tag name="var" line="73" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="79" package="Zend_Server\Reflection">
        <name>$_class</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_class</full_name>
        <default></default>
        <docblock line="79">
          <description>Declaring class (needed for when serialization occurs)</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="85" package="Zend_Server\Reflection">
        <name>$_description</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_description</full_name>
        <default>''</default>
        <docblock line="85">
          <description>Function/method description</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="91" package="Zend_Server\Reflection">
        <name>$_namespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_namespace</full_name>
        <default></default>
        <docblock line="91">
          <description>Namespace with which to prefix function/method name</description>
          <long-description></long-description>
          <tag name="var" line="91" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="97" package="Zend_Server\Reflection">
        <name>$_prototypes</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_prototypes</full_name>
        <default>array()</default>
        <docblock line="97">
          <description>Prototypes</description>
          <long-description></long-description>
          <tag name="var" line="97" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="99" package="Zend_Server\Reflection">
        <name>$_return</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_return</full_name>
        <default></default>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="100" package="Zend_Server\Reflection">
        <name>$_returnDesc</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_returnDesc</full_name>
        <default></default>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="101" package="Zend_Server\Reflection">
        <name>$_paramDesc</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_paramDesc</full_name>
        <default></default>
        <docblock line="101">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="102" package="Zend_Server\Reflection">
        <name>$_sigParams</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_sigParams</full_name>
        <default></default>
        <docblock line="102">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="103" package="Zend_Server\Reflection">
        <name>$_sigParamsDepth</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_sigParamsDepth</full_name>
        <default></default>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="Zend_Server\Reflection">
        <name>__construct</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__construct()</full_name>
        <docblock line="110">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="\ReflectionFunction" variable="$r">
            <type>\ReflectionFunction</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$r</name>
          <default></default>
          <type>\ReflectionFunction</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$argv</name>
          <default>array()</default>
          <type/>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="153" package="Zend_Server\Reflection">
        <name>_addTree</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_addTree()</full_name>
        <docblock line="153">
          <description>Create signature node tree</description>
          <long-description>Recursive method to build the signature node tree. Increments through
each array in \$_sigParams, adding every value of the next level
to the current value (unless the current value is null).</long-description>
          <tag name="param" line="153" description="" type="\Zend_Server_Reflection_Node" variable="$parent">
            <type>\Zend_Server_Reflection_Node</type>
          </tag>
          <tag name="param" line="153" description="" type="integer" variable="$level">
            <type>integer</type>
          </tag>
          <tag name="return" line="153" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>\Zend_Server_Reflection_Node</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="176" package="Zend_Server\Reflection">
        <name>_buildTree</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_buildTree()</full_name>
        <docblock line="176">
          <description>Build the signature tree</description>
          <long-description>Builds a signature tree starting at the return values and descending
through each method argument. Returns an array of
[Zend_Server_Reflection_Node](/classes/Zend_Server_Reflection_Node.html)s.</long-description>
          <tag name="return" line="176" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="200" package="Zend_Server\Reflection">
        <name>_buildSignatures</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_buildSignatures()</full_name>
        <docblock line="200">
          <description>Build method signatures</description>
          <long-description>Builds method signatures using the array of return types and the array of
parameters types</long-description>
          <tag name="param" line="200" description="&lt;p&gt;Array of return types&lt;/p&gt;" type="array" variable="$return">
            <type>array</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Return value description&lt;/p&gt;" type="string" variable="$returnDesc">
            <type>string</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Array of arguments (each an array of types)&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Array of parameter descriptions&lt;/p&gt;" type="array" variable="$paramDesc">
            <type>array</type>
          </tag>
          <tag name="return" line="200" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnDesc</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramTypes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramDesc</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="259" package="Zend_Server\Reflection">
        <name>_reflect</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::_reflect()</full_name>
        <docblock line="259">
          <description>Use code reflection to create method signatures</description>
          <long-description>Determines the method help/description text from the function DocBlock
comment. Determines method signatures using a combination of
ReflectionFunction and parsing of DocBlock @param and @return values.</long-description>
          <tag name="param" line="259" description="" type="\ReflectionFunction" variable="$function">
            <type>\ReflectionFunction</type>
          </tag>
          <tag name="return" line="259" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="377" package="Zend_Server\Reflection">
        <name>__call</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__call()</full_name>
        <docblock line="377">
          <description>Proxy reflection calls</description>
          <long-description></long-description>
          <tag name="param" line="377" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="377" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="377" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="396" package="Zend_Server\Reflection">
        <name>__get</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__get()</full_name>
        <docblock line="396">
          <description>Retrieve configuration parameters</description>
          <long-description>Values are retrieved by key from \$_config. Returns null if no
value found.</long-description>
          <tag name="param" line="396" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="396" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="414" package="Zend_Server\Reflection">
        <name>__set</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__set()</full_name>
        <docblock line="414">
          <description>Set configuration parameters</description>
          <long-description>Values are stored by $key in \$_config.</long-description>
          <tag name="param" line="414" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="414" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="414" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="425" package="Zend_Server\Reflection">
        <name>setNamespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::setNamespace()</full_name>
        <docblock line="425">
          <description>Set method's namespace</description>
          <long-description></long-description>
          <tag name="param" line="425" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="425" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="445" package="Zend_Server\Reflection">
        <name>getNamespace</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getNamespace()</full_name>
        <docblock line="445">
          <description>Return method's namespace</description>
          <long-description></long-description>
          <tag name="return" line="445" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="456" package="Zend_Server\Reflection">
        <name>setDescription</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::setDescription()</full_name>
        <docblock line="456">
          <description>Set the description</description>
          <long-description></long-description>
          <tag name="param" line="456" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="456" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="471" package="Zend_Server\Reflection">
        <name>getDescription</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getDescription()</full_name>
        <docblock line="471">
          <description>Retrieve the description</description>
          <long-description></long-description>
          <tag name="return" line="471" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="482" package="Zend_Server\Reflection">
        <name>getPrototypes</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getPrototypes()</full_name>
        <docblock line="482">
          <description>Retrieve all prototypes as array of
{@link Zend_Server_Reflection_Prototype Zend_Server_Reflection_Prototypes}</description>
          <long-description></long-description>
          <tag name="return" line="482" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="492" package="Zend_Server\Reflection">
        <name>getInvokeArguments</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::getInvokeArguments()</full_name>
        <docblock line="492">
          <description>Retrieve additional invocation arguments</description>
          <long-description></long-description>
          <tag name="return" line="492" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="505" package="Zend_Server\Reflection">
        <name>__wakeup</name>
        <full_name>\Zend_Server_Reflection_Function_Abstract::__wakeup()</full_name>
        <docblock line="505">
          <description>Wakeup from serialization</description>
          <long-description>Reflection needs explicit instantiation to work correctly. Re-instantiate
reflection object on wakeup.</long-description>
          <tag name="return" line="505" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Server_Reflection_Function_Abstract</inherited_from>
      </method>
    </class>
    <source>eJzVU7Fu2zAQ3fUVNwRIYtSSGyBLWqBO0wQwYGSI06WLQVEniQ1FqiRlxS367z1SpN0uTTOWE3m89/ju3fH9h77ts2I2y2AGX1BVcGdYh6M2TxTxwfXq5vZ+cxtPj62wYPVgOEItJII/DuVX5A6cBtciKBzh4+YTSMFRWaQYcz6tHFQlsfIso3AtxSnYM/7EGqJRARso44u5e3a5z14FOJNWA9sxIVkpPavRQ9MGFKmV1XwUFc5HLIGeC9yfH9ZXHt86118VRZ0Ky79TnTnXXRElFiR5XtogbVXDXg9QiQqUdmCQo9ghMOC634Ouw4OpNEZ+MYMwqEmT9gy6dIzKEe4vGt9AL5ERg/WWMwXYUWEeTSZG9mWSSX7DiMApLaR7fVGP6DqsBHMo93ns0JLTsdFmDxAaGmLJ5hjbbtDs0EzpxGNE0zqAm8P2jJ/DxWJxOb9YvL2c5uIReau01I1AsnZzDSvFcziL5o7jeLD1PPAmj2j9cwN8MtzH+VlPd0RWZL9PaBS/fcBa0tgJrbZ3g5o216V1hnEXQAa/DcLgVisa1lMPLSZocYQWCVokaE4f4vTd4cV0D0dMMnqw5MS0XqHr1Q2i75Vu/9DwX7QOllSG9f6drKqT0BYumbUvOQb47Cjjxbyjsz+yn9kviyKWxQ==</source>
  </file>
  <file path="Server/Abstract.php" generated-path="Server.Abstract.html" hash="dbbff9f126db7b48b1e41a7d0d1b6e84" package="Zend_Server">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Server"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
    </docblock>
    <class final="false" abstract="true" namespace="" line="58" package="Zend_Server">
      <extends/>
      <implements>\Zend_Server_Interface</implements>
      <name>Zend_Server_Abstract</name>
      <full_name>\Zend_Server_Abstract</full_name>
      <docblock line="58">
        <description>Zend_Server_Abstract</description>
        <long-description></long-description>
        <tag name="category" line="58" description="Zend"/>
        <tag name="package" line="58" description="Zend_Server"/>
        <tag name="copyright" line="58" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="58" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="version" line="58" description="$Id$"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="64" package="Zend_Server">
        <name>$magic_methods</name>
        <full_name>\Zend_Server_Abstract::magic_methods</full_name>
        <default>array('__call', '__clone', '__construct', '__destruct', '__get', '__isset', '__set', '__set_state', '__sleep', '__tostring', '__unset', '__wakeup')</default>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
          <tag name="deprecated" line="64" description=""/>
          <tag name="var" line="64" description="&lt;p&gt;List of PHP magic methods (lowercased)&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="82" package="Zend_Server">
        <name>$_overwriteExistingMethods</name>
        <full_name>\Zend_Server_Abstract::_overwriteExistingMethods</full_name>
        <default>false</default>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="82" description="&lt;p&gt;Flag; whether or not overwriting existing methods is allowed&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="87" package="Zend_Server">
        <name>$_table</name>
        <full_name>\Zend_Server_Abstract::_table</full_name>
        <default></default>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="\Zend_Server_Definition" variable="">
            <type>\Zend_Server_Definition</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="Zend_Server">
        <name>__construct</name>
        <full_name>\Zend_Server_Abstract::__construct()</full_name>
        <docblock line="96">
          <description>Constructor</description>
          <long-description>Setup server description</long-description>
          <tag name="return" line="96" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="109" package="Zend_Server">
        <name>getFunctions</name>
        <full_name>\Zend_Server_Abstract::getFunctions()</full_name>
        <docblock line="109">
          <description>Returns a list of registered methods</description>
          <long-description>Returns an array of method definitions.</long-description>
          <tag name="return" line="109" description="" type="\Zend_Server_Definition">
            <type>\Zend_Server_Definition</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Server_Interface::getFunctions()" refers="\Zend_Server_Interface::getFunctions()" link="/classes/Zend_Server_Interface.html#method_getFunctions"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="124" package="Zend_Server">
        <name>lowerCase</name>
        <full_name>\Zend_Server_Abstract::lowerCase()</full_name>
        <docblock line="124">
          <description>Lowercase a string</description>
          <long-description>Lowercase's a string by reference</long-description>
          <tag name="deprecated" line="124" description=""/>
          <tag name="param" line="124" description="&lt;p&gt;value&lt;/p&gt;" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="param" line="124" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="124" description="Lower cased string" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="136" package="Zend_Server">
        <name>_buildCallback</name>
        <full_name>\Zend_Server_Abstract::_buildCallback()</full_name>
        <docblock line="136">
          <description>Build callback for method signature</description>
          <long-description></long-description>
          <tag name="param" line="136" description="" type="\Zend_Server_Reflection_Function_Abstract" variable="$reflection">
            <type>\Zend_Server_Reflection_Function_Abstract</type>
          </tag>
          <tag name="return" line="136" description="" type="\Zend_Server_Method_Callback">
            <type>\Zend_Server_Method_Callback</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reflection</name>
          <default></default>
          <type>\Zend_Server_Reflection_Function_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="158" package="Zend_Server">
        <name>_buildSignature</name>
        <full_name>\Zend_Server_Abstract::_buildSignature()</full_name>
        <docblock line="158">
          <description>Build a method signature</description>
          <long-description></long-description>
          <tag name="param" line="158" description="" type="\Zend_Server_Reflection_Function_Abstract" variable="$reflection">
            <type>\Zend_Server_Reflection_Function_Abstract</type>
          </tag>
          <tag name="param" line="158" description="" type="null|string|object" variable="$class">
            <type>null</type>
            <type>string</type>
            <type>object</type>
          </tag>
          <tag name="return" line="158" description="" type="\Zend_Server_Method_Definition">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
          <tag name="throws" line="158" description="on duplicate entry" type="\Zend_Server_Exception">
            <type>\Zend_Server_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reflection</name>
          <default></default>
          <type>\Zend_Server_Reflection_Function_Abstract</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default>null</default>
          <type>null|string|object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="205" package="Zend_Server">
        <name>_dispatch</name>
        <full_name>\Zend_Server_Abstract::_dispatch()</full_name>
        <docblock line="205">
          <description>Dispatch method</description>
          <long-description></long-description>
          <tag name="param" line="205" description="" type="\Zend_Server_Method_Definition" variable="$invocable">
            <type>\Zend_Server_Method_Definition</type>
          </tag>
          <tag name="param" line="205" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="205" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$invocable</name>
          <default></default>
          <type>\Zend_Server_Method_Definition</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="" line="241" package="Zend_Server">
        <name>_fixType</name>
        <full_name>\Zend_Server_Abstract::_fixType()</full_name>
        <docblock line="241">
          <description>Map PHP type to protocol type</description>
          <long-description></long-description>
          <tag name="param" line="241" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="241" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="87" code="PPC:ERR-50007">No summary for property $_table</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Session.php" generated-path="Session.html" hash="35c67ef22680a79cfc2f96a63492c914" package="Zend_Session">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Session"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
      <tag name="since" line="0" description="Preview Release 0.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="49" package="Zend_Session">
      <extends>\Zend_Session_Abstract</extends>
      <name>Zend_Session</name>
      <full_name>\Zend_Session</full_name>
      <docblock line="49">
        <description>Zend_Session</description>
        <long-description></long-description>
        <tag name="category" line="49" description="Zend"/>
        <tag name="package" line="49" description="Zend_Session"/>
        <tag name="copyright" line="49" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="49" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Session_Abstract" refers="\Zend_Session_Abstract" link="/classes/Zend_Session_Abstract.html"/>
      </docblock>
      <constant namespace="" line="62" package="Zend_Session">
        <name>_THROW_NOT_WRITABLE_MSG</name>
        <full_name>\Zend_Session_Abstract::_THROW_NOT_WRITABLE_MSG</full_name>
        <value>'Zend_Session is currently marked as read-only.'</value>
        <docblock line="62">
          <description>Error message thrown when an action requires modification,
but current Zend_Session has been marked as read-only.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="69" package="Zend_Session">
        <name>_THROW_NOT_READABLE_MSG</name>
        <full_name>\Zend_Session_Abstract::_THROW_NOT_READABLE_MSG</full_name>
        <value>'Zend_Session is not marked as readable.'</value>
        <docblock line="69">
          <description>Error message thrown when an action requires reading session data,
but current Zend_Session is not marked as readable.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="protected" namespace="" line="64" package="Zend_Session">
        <name>$_throwStartupExceptions</name>
        <full_name>\Zend_Session::_throwStartupExceptions</full_name>
        <default>true</default>
        <docblock line="64">
          <description>$_throwStartupException</description>
          <long-description></long-description>
          <tag name="var" line="64" description="&lt;p&gt;This could also be a combiniation of error codes to catch&lt;/p&gt;" type="boolean|\bitset" variable="">
            <type>boolean</type>
            <type>\bitset</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="71" package="Zend_Session">
        <name>$_sessionStarted</name>
        <full_name>\Zend_Session::_sessionStarted</full_name>
        <default>false</default>
        <docblock line="71">
          <description>Check whether or not the session was started</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="83" package="Zend_Session">
        <name>$_regenerateIdState</name>
        <full_name>\Zend_Session::_regenerateIdState</full_name>
        <default>0</default>
        <docblock line="83">
          <description>Whether or not the session id has been regenerated this request.</description>
          <long-description>Id regeneration state
&lt;0 - regenerate requested when session is started
0  - do nothing
&gt;0 - already called session_regenerate_id()</long-description>
          <tag name="var" line="83" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="93" package="Zend_Session">
        <name>$_defaultOptions</name>
        <full_name>\Zend_Session::_defaultOptions</full_name>
        <default>array('save_path' =&gt; null, 'name' =&gt; null, 'save_handler' =&gt; null, 'gc_probability' =&gt; null, 'gc_divisor' =&gt; null, 'gc_maxlifetime' =&gt; null, 'serialize_handler' =&gt; null, 'cookie_lifetime' =&gt; null, 'cookie_path' =&gt; null, 'cookie_domain' =&gt; null, 'cookie_secure' =&gt; null, 'cookie_httponly' =&gt; null, 'use_cookies' =&gt; null, 'use_only_cookies' =&gt; 'on', 'referer_check' =&gt; null, 'entropy_file' =&gt; null, 'entropy_length' =&gt; null, 'cache_limiter' =&gt; null, 'cache_expire' =&gt; null, 'use_trans_sid' =&gt; null, 'bug_compat_42' =&gt; null, 'bug_compat_warn' =&gt; null, 'hash_function' =&gt; null, 'hash_bits_per_character' =&gt; null)</default>
        <docblock line="93">
          <description>Private list of php's ini values for ext/session
null values will default to the php.ini value, otherwise
the value below will overwrite the default ini value, unless
the user has set an option explicity with setOptions()</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="128" package="Zend_Session">
        <name>$_localOptions</name>
        <full_name>\Zend_Session::_localOptions</full_name>
        <default>array('strict' =&gt; '_strict', 'remember_me_seconds' =&gt; '_rememberMeSeconds', 'throw_startup_exceptions' =&gt; '_throwStartupExceptions')</default>
        <docblock line="128">
          <description>List of options pertaining to Zend_Session that can be set by developers
using Zend_Session::setOptions(). This list intentionally duplicates
the individual declaration of static "class" variables by the same names.</description>
          <long-description></long-description>
          <tag name="var" line="128" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="139" package="Zend_Session">
        <name>$_writeClosed</name>
        <full_name>\Zend_Session::_writeClosed</full_name>
        <default>false</default>
        <docblock line="139">
          <description>Whether or not write close has been performed.</description>
          <long-description></long-description>
          <tag name="var" line="139" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="146" package="Zend_Session">
        <name>$_sessionCookieDeleted</name>
        <full_name>\Zend_Session::_sessionCookieDeleted</full_name>
        <default>false</default>
        <docblock line="146">
          <description>Whether or not session id cookie has been deleted</description>
          <long-description></long-description>
          <tag name="var" line="146" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="153" package="Zend_Session">
        <name>$_destroyed</name>
        <full_name>\Zend_Session::_destroyed</full_name>
        <default>false</default>
        <docblock line="153">
          <description>Whether or not session has been destroyed via session_destroy()</description>
          <long-description></long-description>
          <tag name="var" line="153" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="160" package="Zend_Session">
        <name>$_strict</name>
        <full_name>\Zend_Session::_strict</full_name>
        <default>false</default>
        <docblock line="160">
          <description>Whether or not session must be initiated before usage</description>
          <long-description></long-description>
          <tag name="var" line="160" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="167" package="Zend_Session">
        <name>$_rememberMeSeconds</name>
        <full_name>\Zend_Session::_rememberMeSeconds</full_name>
        <default>1209600</default>
        <docblock line="167">
          <description>Default number of seconds the session will be remembered for when asked to be remembered</description>
          <long-description></long-description>
          <tag name="var" line="167" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="174" package="Zend_Session">
        <name>$_defaultOptionsSet</name>
        <full_name>\Zend_Session::_defaultOptionsSet</full_name>
        <default>false</default>
        <docblock line="174">
          <description>Whether the default options listed in Zend_Session::$_localOptions have been set</description>
          <long-description></long-description>
          <tag name="var" line="174" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="181" package="Zend_Session">
        <name>$_saveHandler</name>
        <full_name>\Zend_Session::_saveHandler</full_name>
        <default>null</default>
        <docblock line="181">
          <description>A reference to the set session save handler</description>
          <long-description></long-description>
          <tag name="var" line="181" description="" type="\Zend_Session_SaveHandler_Interface" variable="">
            <type>\Zend_Session_SaveHandler_Interface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="40" package="Zend_Session">
        <name>$_writable</name>
        <full_name>\Zend_Session_Abstract::_writable</full_name>
        <default>false</default>
        <docblock line="40">
          <description>Whether or not session permits writing (modification of $_SESSION[])</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="47" package="Zend_Session">
        <name>$_readable</name>
        <full_name>\Zend_Session_Abstract::_readable</full_name>
        <default>false</default>
        <docblock line="47">
          <description>Whether or not session permits reading (reading data in $_SESSION[])</description>
          <long-description></long-description>
          <tag name="var" line="47" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="" line="55" package="Zend_Session">
        <name>$_expiringData</name>
        <full_name>\Zend_Session_Abstract::_expiringData</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Since expiring data is handled at startup to avoid __destruct difficulties,
the data that will be expiring at end of this request is held here</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="187" package="Zend_Session">
        <name>__construct</name>
        <full_name>\Zend_Session::__construct()</full_name>
        <docblock line="187">
          <description>Constructor overriding - make sure that a developer cannot instantiate</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="199" package="Zend_Session">
        <name>setOptions</name>
        <full_name>\Zend_Session::setOptions()</full_name>
        <docblock line="199">
          <description>setOptions - set both the class specified</description>
          <long-description></long-description>
          <tag name="param" line="199" description="&lt;ul&gt;&#10;&lt;li&gt;pass-by-keyword style array of &lt;option name, option value&gt; pairs&lt;/li&gt;&#10;&lt;/ul&gt;" type="array" variable="$userOptions">
            <type>array</type>
          </tag>
          <tag name="throws" line="199" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="199" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="238" package="Zend_Session">
        <name>getOptions</name>
        <full_name>\Zend_Session::getOptions()</full_name>
        <docblock line="238">
          <description>getOptions()</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;OPTIONAL&lt;/p&gt;" type="string" variable="$optionName">
            <type>string</type>
          </tag>
          <tag name="return" line="238" description="" type="array|string">
            <type>array</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$optionName</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="265" package="Zend_Session">
        <name>setSaveHandler</name>
        <full_name>\Zend_Session::setSaveHandler()</full_name>
        <docblock line="265">
          <description>setSaveHandler() - Session Save Handler assignment</description>
          <long-description></long-description>
          <tag name="param" line="265" description="" type="\Zend_Session_SaveHandler_Interface" variable="$interface">
            <type>\Zend_Session_SaveHandler_Interface</type>
          </tag>
          <tag name="throws" line="265" description="When the session_set_save_handler call fails" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="265" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saveHandler</name>
          <default></default>
          <type>\Zend_Session_SaveHandler_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="293" package="Zend_Session">
        <name>getSaveHandler</name>
        <full_name>\Zend_Session::getSaveHandler()</full_name>
        <docblock line="293">
          <description>getSaveHandler() - Get the session Save Handler</description>
          <long-description></long-description>
          <tag name="return" line="293" description="" type="\Zend_Session_SaveHandler_Interface">
            <type>\Zend_Session_SaveHandler_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="307" package="Zend_Session">
        <name>regenerateId</name>
        <full_name>\Zend_Session::regenerateId()</full_name>
        <docblock line="307">
          <description>regenerateId() - Regenerate the session id.  Best practice is to call this after
session is started.  If called prior to session starting, session id will be regenerated
at start time.</description>
          <long-description></long-description>
          <tag name="throws" line="307" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="307" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="335" package="Zend_Session">
        <name>rememberMe</name>
        <full_name>\Zend_Session::rememberMe()</full_name>
        <docblock line="335">
          <description>rememberMe() - Write a persistent cookie that expires after a number of seconds in the future. If no number of
seconds is specified, then this defaults to self::$_rememberMeSeconds.  Due to clock errors on end users' systems,
large values are recommended to avoid undesirable expiration of session cookies.</description>
          <long-description></long-description>
          <tag name="param" line="335" description="&lt;p&gt;OPTIONAL specifies TTL for cookie in seconds from present time&lt;/p&gt;" type="integer" variable="$seconds">
            <type>integer</type>
          </tag>
          <tag name="return" line="335" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="350" package="Zend_Session">
        <name>forgetMe</name>
        <full_name>\Zend_Session::forgetMe()</full_name>
        <docblock line="350">
          <description>forgetMe() - Write a volatile session cookie, removing any persistent cookie that may have existed. The session
would end upon, for example, termination of a web browser program.</description>
          <long-description></long-description>
          <tag name="return" line="350" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="363" package="Zend_Session">
        <name>rememberUntil</name>
        <full_name>\Zend_Session::rememberUntil()</full_name>
        <docblock line="363">
          <description>rememberUntil() - This method does the work of changing the state of the session cookie and making
sure that it gets resent to the browser via regenerateId()</description>
          <long-description></long-description>
          <tag name="param" line="363" description="" type="integer" variable="$seconds">
            <type>integer</type>
          </tag>
          <tag name="return" line="363" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="389" package="Zend_Session">
        <name>sessionExists</name>
        <full_name>\Zend_Session::sessionExists()</full_name>
        <docblock line="389">
          <description>sessionExists() - whether or not a session exists for the current request</description>
          <long-description></long-description>
          <tag name="return" line="389" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="408" package="Zend_Session">
        <name>isDestroyed</name>
        <full_name>\Zend_Session::isDestroyed()</full_name>
        <docblock line="408">
          <description>Whether or not session has been destroyed via session_destroy()</description>
          <long-description></long-description>
          <tag name="return" line="408" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="421" package="Zend_Session">
        <name>start</name>
        <full_name>\Zend_Session::start()</full_name>
        <docblock line="421">
          <description>start() - Start the session.</description>
          <long-description></long-description>
          <tag name="param" line="421" description="&lt;p&gt;OPTIONAL Either user supplied options, or flag indicating if start initiated automatically&lt;/p&gt;" type="boolean|array" variable="$options">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="throws" line="421" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="421" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>false</default>
          <type>boolean|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="521" package="Zend_Session">
        <name>_checkId</name>
        <full_name>\Zend_Session::_checkId()</full_name>
        <docblock line="521">
          <description>Perform a hash-bits check on the session ID</description>
          <long-description></long-description>
          <tag name="param" line="521" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="521" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="" line="550" package="Zend_Session">
        <name>_processStartupMetadataGlobal</name>
        <full_name>\Zend_Session::_processStartupMetadataGlobal()</full_name>
        <docblock line="550">
          <description>_processGlobalMetadata() - this method initizes the sessions GLOBAL
metadata, mostly global data expiration calculations.</description>
          <long-description></long-description>
          <tag name="return" line="550" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="626" package="Zend_Session">
        <name>isStarted</name>
        <full_name>\Zend_Session::isStarted()</full_name>
        <docblock line="626">
          <description>isStarted() - convenience method to determine if the session is already started.</description>
          <long-description></long-description>
          <tag name="return" line="626" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="638" package="Zend_Session">
        <name>isRegenerated</name>
        <full_name>\Zend_Session::isRegenerated()</full_name>
        <docblock line="638">
          <description>isRegenerated() - convenience method to determine if session_regenerate_id()
has been called during this request by Zend_Session.</description>
          <long-description></long-description>
          <tag name="return" line="638" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="649" package="Zend_Session">
        <name>getId</name>
        <full_name>\Zend_Session::getId()</full_name>
        <docblock line="649">
          <description>getId() - get the current session id</description>
          <long-description></long-description>
          <tag name="return" line="649" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="662" package="Zend_Session">
        <name>setId</name>
        <full_name>\Zend_Session::setId()</full_name>
        <docblock line="662">
          <description>setId() - set an id to a user specified id</description>
          <long-description></long-description>
          <tag name="throws" line="662" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="param" line="662" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="662" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="694" package="Zend_Session">
        <name>registerValidator</name>
        <full_name>\Zend_Session::registerValidator()</full_name>
        <docblock line="694">
          <description>registerValidator() - register a validator that will attempt to validate this session for
every future request</description>
          <long-description></long-description>
          <tag name="param" line="694" description="" type="\Zend_Session_Validator_Interface" variable="$validator">
            <type>\Zend_Session_Validator_Interface</type>
          </tag>
          <tag name="return" line="694" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$validator</name>
          <default></default>
          <type>\Zend_Session_Validator_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="705" package="Zend_Session">
        <name>stop</name>
        <full_name>\Zend_Session::stop()</full_name>
        <docblock line="705">
          <description>stop() - Disable write access.  Optionally disable read (not implemented).</description>
          <long-description></long-description>
          <tag name="return" line="705" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="718" package="Zend_Session">
        <name>writeClose</name>
        <full_name>\Zend_Session::writeClose()</full_name>
        <docblock line="718">
          <description>writeClose() - Shutdown the sesssion, close writing and detach $_SESSION from the back-end storage mechanism.</description>
          <long-description>This will complete the internal data transformation on this request.</long-description>
          <tag name="param" line="718" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL remove write access (i.e. throw error if Zend_Session's attempt writes)&lt;/li&gt;&#10;&lt;/ul&gt;" type="boolean" variable="$readonly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="718" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$readonly</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="744" package="Zend_Session">
        <name>destroy</name>
        <full_name>\Zend_Session::destroy()</full_name>
        <docblock line="744">
          <description>destroy() - This is used to destroy session data, and optionally, the session cookie itself</description>
          <long-description></long-description>
          <tag name="param" line="744" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL remove session id cookie, defaults to true (remove cookie)&lt;/li&gt;&#10;&lt;/ul&gt;" type="boolean" variable="$remove_cookie">
            <type>boolean</type>
          </tag>
          <tag name="param" line="744" description="&lt;ul&gt;&#10;&lt;li&gt;OPTIONAL remove write access (i.e. throw error if Zend_Session's attempt writes)&lt;/li&gt;&#10;&lt;/ul&gt;" type="boolean" variable="$readonly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="744" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remove_cookie</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$readonly</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="772" package="Zend_Session">
        <name>expireSessionCookie</name>
        <full_name>\Zend_Session::expireSessionCookie()</full_name>
        <docblock line="772">
          <description>expireSessionCookie() - Sends an expired session id cookie, causing the client to delete the session cookie</description>
          <long-description></long-description>
          <tag name="return" line="772" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="" line="805" package="Zend_Session">
        <name>_processValidators</name>
        <full_name>\Zend_Session::_processValidators()</full_name>
        <docblock line="805">
          <description>_processValidator() - internal function that is called in the existence of VALID metadata</description>
          <long-description></long-description>
          <tag name="throws" line="805" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="805" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="828" package="Zend_Session">
        <name>namespaceIsset</name>
        <full_name>\Zend_Session::namespaceIsset()</full_name>
        <docblock line="828">
          <description>namespaceIsset() - check to see if a namespace is set</description>
          <long-description></long-description>
          <tag name="param" line="828" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="828" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="841" package="Zend_Session">
        <name>namespaceUnset</name>
        <full_name>\Zend_Session::namespaceUnset()</full_name>
        <docblock line="841">
          <description>namespaceUnset() - unset a namespace or a variable within a namespace</description>
          <long-description></long-description>
          <tag name="param" line="841" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="throws" line="841" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="841" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="855" package="Zend_Session">
        <name>namespaceGet</name>
        <full_name>\Zend_Session::namespaceGet()</full_name>
        <docblock line="855">
          <description>namespaceGet() - get all variables in a namespace
Deprecated: Use getIterator() in Zend_Session_Namespace.</description>
          <long-description></long-description>
          <tag name="param" line="855" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="return" line="855" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="868" package="Zend_Session">
        <name>getIterator</name>
        <full_name>\Zend_Session::getIterator()</full_name>
        <docblock line="868">
          <description>getIterator() - return an iteratable object for use in foreach and the like,
this completes the IteratorAggregate interface</description>
          <long-description></long-description>
          <tag name="throws" line="868" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="868" description="" type="\ArrayObject">
            <type>\ArrayObject</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="895" package="Zend_Session">
        <name>isWritable</name>
        <full_name>\Zend_Session::isWritable()</full_name>
        <docblock line="895">
          <description>isWritable() - returns a boolean indicating if namespaces can write (use setters)</description>
          <long-description></long-description>
          <tag name="return" line="895" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="906" package="Zend_Session">
        <name>isReadable</name>
        <full_name>\Zend_Session::isReadable()</full_name>
        <docblock line="906">
          <description>isReadable() - returns a boolean indicating if namespaces can write (use setters)</description>
          <long-description></long-description>
          <tag name="return" line="906" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="79" package="Zend_Session">
        <name>_namespaceIsset</name>
        <full_name>\Zend_Session_Abstract::_namespaceIsset()</full_name>
        <docblock line="79">
          <description>namespaceIsset() - check to see if a namespace or a variable within a namespace is set</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="105" package="Zend_Session">
        <name>_namespaceUnset</name>
        <full_name>\Zend_Session_Abstract::_namespaceUnset()</full_name>
        <docblock line="105">
          <description>namespaceUnset() - unset a namespace or a variable within a namespace</description>
          <long-description></long-description>
          <tag name="param" line="105" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="throws" line="105" description="" type="\Zend_Session_Exception">
            <type>\Zend_Session_Exception</type>
          </tag>
          <tag name="return" line="105" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="140" package="Zend_Session">
        <name>_namespaceGet</name>
        <full_name>\Zend_Session_Abstract::_namespaceGet()</full_name>
        <docblock line="140">
          <description>namespaceGet() - Get $name variable from $namespace, returning by reference.</description>
          <long-description></long-description>
          <tag name="param" line="140" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="140" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="140" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="177" package="Zend_Session">
        <name>_namespaceGetAll</name>
        <full_name>\Zend_Session_Abstract::_namespaceGetAll()</full_name>
        <docblock line="177">
          <description>namespaceGetAll() - Get an array containing $namespace, including expiring data.</description>
          <long-description></long-description>
          <tag name="param" line="177" description="" type="string" variable="$namespace">
            <type>string</type>
          </tag>
          <tag name="param" line="177" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="177" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Zend_Session_Abstract</inherited_from>
      </method>
    </class>
    <source></source>
  </file>
  <file path="Auth/Adapter/Http/Resolver/Exception.php" generated-path="Auth.Adapter.Http.Resolver.Exception.html" hash="d990320c36d6efda5cde1a5b93939230" package="Zend_Auth\Zend_Auth_Adapter_Http">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Zend_Auth_Adapter_Http"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="39" package="Zend_Auth\Zend_Auth_Adapter_Http">
      <extends>\Zend_Auth_Exception</extends>
      <name>Zend_Auth_Adapter_Http_Resolver_Exception</name>
      <full_name>\Zend_Auth_Adapter_Http_Resolver_Exception</full_name>
      <docblock line="39">
        <description>HTTP Auth Resolver Exception</description>
        <long-description></long-description>
        <tag name="category" line="39" description="Zend"/>
        <tag name="package" line="39" description="Zend_Auth"/>
        <tag name="subpackage" line="39" description="Zend_Auth_Adapter_Http"/>
        <tag name="copyright" line="39" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="39" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Auth_Exception" refers="\Zend_Auth_Exception" link="/classes/Zend_Auth_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <source>eJzlU8Fu2zAMvfsreCjQNljsrEAvXYEl6zLUQFAMTXbpxZAlxtYqS54kx8mG/fsoxU572Ibdl5NFPj4+PjK379u6TbLJJIEJPKEW8MmyBntjnykSgqv8bvmwXg6vTS0dONNZjrCVCiE8u/Ircg/egK8RNPbwYf0RlOSoHVKM+QArOy0UisDSS19TnIIt48+sIhodayPl0DH1e58GdB7LmXIG2I5JxUoVWK3pqjpWkVolpr0UOO2xBGoXub88rm5Cfe19e5Nl23Gw9DvNmXLTZIPEjCRPSxel5Vs4mA6EFKCNB4sc5Q6BATftAcw2NhxHY+QXswidPmoygcGUntE40v9F4xtoFTJicMFypgEbGixUk4kD+3yUSX5Dj8AJFuFB36BHNg0KyTyqQzpsaM7pWRl7AIgLjbHR5iFWLDpfxwTtbsydEsVCsNajLe7JuCMl9bKyqj3A3enzgl/C1Wx2Pb2avb0+3s4Gea2NMpVEsn+9gFzzFC6GBfR9f7L+MvKOPtLvn5cUwPAw3NjqmItkO7ROGh3SZ7k4o1iWJONpzx2+nnC559h6QkeUxW+dtFgYTVd9HlBZQGUnVEp/kvN3L2z3m81nCBB4RGcUdYbXjP/xGrKEK+bcH6YoRrteFgC494R1v13Oj5/JLxiLg2c=</source>
  </file>
  <file path="Auth/Adapter/Http/Resolver/File.php" generated-path="Auth.Adapter.Http.Resolver.File.html" hash="20b4afa15d7c95ca63aa3b003bd8cb6a" package="Zend_Auth\Zend_Auth_Adapter_Http">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Zend_Auth_Adapter_Http"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="39" package="Zend_Auth\Zend_Auth_Adapter_Http">
      <extends/>
      <implements>\Zend_Auth_Adapter_Http_Resolver_Interface</implements>
      <name>Zend_Auth_Adapter_Http_Resolver_File</name>
      <full_name>\Zend_Auth_Adapter_Http_Resolver_File</full_name>
      <docblock line="39">
        <description>HTTP Authentication File Resolver</description>
        <long-description></long-description>
        <tag name="category" line="39" description="Zend"/>
        <tag name="package" line="39" description="Zend_Auth"/>
        <tag name="subpackage" line="39" description="Zend_Auth_Adapter_Http"/>
        <tag name="copyright" line="39" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="39" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="46" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_file</name>
        <full_name>\Zend_Auth_Adapter_Http_Resolver_File::_file</full_name>
        <default></default>
        <docblock line="46">
          <description>Path to credentials file</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>__construct</name>
        <full_name>\Zend_Auth_Adapter_Http_Resolver_File::__construct()</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Complete filename where the credentials are stored&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>setFile</name>
        <full_name>\Zend_Auth_Adapter_Http_Resolver_File::setFile()</full_name>
        <docblock line="67">
          <description>Set the path to the credentials file</description>
          <long-description></long-description>
          <tag name="param" line="67" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="throws" line="67" description="" type="\Zend_Auth_Adapter_Http_Resolver_Exception">
            <type>\Zend_Auth_Adapter_Http_Resolver_Exception</type>
          </tag>
          <tag name="return" line="67" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http_Resolver_File">
            <type>\Zend_Auth_Adapter_Http_Resolver_File</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>getFile</name>
        <full_name>\Zend_Auth_Adapter_Http_Resolver_File::getFile()</full_name>
        <docblock line="86">
          <description>Returns the path to the credentials file</description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="112" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>resolve</name>
        <full_name>\Zend_Auth_Adapter_Http_Resolver_File::resolve()</full_name>
        <docblock line="112">
          <description>Resolve credentials</description>
          <long-description>Only the first matching username/realm combination in the file is
returned. If the file contains credentials for Digest authentication,
the returned string is the password hash, or h(a1) from RFC 2617. The
returned string is the plain-text password for Basic authentication.

The expected format of the file is:
  username:realm:sharedSecret

That is, each line consists of the user's username, the applicable
authentication realm, and the password or hash, each delimited by
colons.</long-description>
          <tag name="param" line="112" description="&lt;p&gt;Username&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="112" description="&lt;p&gt;Authentication Realm&lt;/p&gt;" type="string" variable="$realm">
            <type>string</type>
          </tag>
          <tag name="throws" line="112" description="" type="\Zend_Auth_Adapter_Http_Resolver_Exception">
            <type>\Zend_Auth_Adapter_Http_Resolver_Exception</type>
          </tag>
          <tag name="return" line="112" description="User's shared secret, if the user is found in the&#10;        realm, false otherwise." type="string|false">
            <type>string</type>
            <type>false</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Adapter_Http_Resolver_Interface::resolve()" refers="\Zend_Auth_Adapter_Http_Resolver_Interface::resolve()" link="/classes/Zend_Auth_Adapter_Http_Resolver_Interface.html#method_resolve"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$realm</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Auth/Adapter/Http/Resolver/Interface.php" generated-path="Auth.Adapter.Http.Resolver.Interface.html" hash="136ff303d6f17f676641db12415a679e" package="Zend_Auth\Zend_Auth_Adapter_Http">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Zend_Auth_Adapter_Http"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <interface namespace="" line="36" package="Zend_Auth\Zend_Auth_Adapter_Http">
      <name>Zend_Auth_Adapter_Http_Resolver_Interface</name>
      <full_name>\Zend_Auth_Adapter_Http_Resolver_Interface</full_name>
      <docblock line="36">
        <description>Auth HTTP Resolver Interface</description>
        <long-description>Defines an interace to resolve a username/realm combination into a shared
secret usable by HTTP Authentication.</long-description>
        <tag name="category" line="36" description="Zend"/>
        <tag name="package" line="36" description="Zend_Auth"/>
        <tag name="subpackage" line="36" description="Zend_Auth_Adapter_Http"/>
        <tag name="copyright" line="36" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="36" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>resolve</name>
        <full_name>\Zend_Auth_Adapter_Http_Resolver_Interface::resolve()</full_name>
        <docblock line="46">
          <description>Resolve username/realm to password/hash/etc.</description>
          <long-description></long-description>
          <tag name="param" line="46" description="&lt;p&gt;Username&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="46" description="&lt;p&gt;Authentication Realm&lt;/p&gt;" type="string" variable="$realm">
            <type>string</type>
          </tag>
          <tag name="return" line="46" description="User's shared secret, if the user is found in the&#10;        realm, false otherwise." type="string|false">
            <type>string</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$realm</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <source>eJzlVE1v2zAMvftX8BBgSZDYWYFeugFr1nZogKAYmvSySyDLtK3VlgxJjpd9/PdRspRhAzrsPl0SU+Tj43uE3r7r6i7J5vME5vAJZQEfNGtxUPqZIi643dzcPezuwte+FgaM6jVHKEWD4D77/DNyC1aBrREkDvB+dwuN4CgNUoxZl5b3smiwcCiDsDXFKdgx/swqgpG+1kOGjqn9YlOXvfHlrDEK2JGJhuWNQ9Wqr2pfRWybYjmIApcD5kDtPPbT4/bK1dfWdldZVsbB0q80Z8pVmwWKGVFe5sZT25RwUj0UogCpLGjkKI4IDLjqTqBK3zCOxkgvphF6OXJSDkHlltE4wv6F4wK6BhkhGCc5k4AtDeaqScSAfh1pkt4wIHBK8+mOX+Aj2hYLwSw2pzQ4dM3ps1L6BOAN9bEoc4gd1r2t/QV5F+/OF4d1wTqL+nBPwo2Q1EuLqrYAN+e/Uz6Di9Xqcnmxen057s4eeS1VoyqBJP9uDRvJU5gGA4ZhOEs/87hRRzr/bJJLhoewY9vxzoMdURuhpLuebIoJxbIkiavt5oL7/f4jPKJRDeUSN5qxZByDcLdYCkm8SWbhrujGuaHHfFK8N6gl0cs0sqYlA9pcSGZdTyqg5QRT0zZ4xQ1yjZZK/GLkp7G3Y4HSCu6r/nPHskREB16Y5BC9Ovzy6lvi0Lyr7syjn3+6Q350zBgiVmQ1M3WGlqehJpaSyEQewFgtZAWTCAFP4c9LiWMLOr8bSlwofi6iBei1DEXfS3rARuRXJixK2JIFiPFZcf3dU1cqeirDkxjR4vGtFzCiKUrQgzAYJ8v8b9fnZAGUveSeVljh6XnARRhh9ib5kfwEFo3ygQ==</source>
  </file>
  <file path="Auth/Adapter/Ldap.php" generated-path="Auth.Adapter.Ldap.html" hash="bd5f10d2cb804dd62f44f08497d7f778" package="Zend_Auth\Zend_Auth_Adapter">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Zend_Auth_Adapter"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="35" package="Zend_Auth\Zend_Auth_Adapter">
      <extends/>
      <implements>\Zend_Auth_Adapter_Interface</implements>
      <name>Zend_Auth_Adapter_Ldap</name>
      <full_name>\Zend_Auth_Adapter_Ldap</full_name>
      <docblock line="35">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="35" description="Zend"/>
        <tag name="package" line="35" description="Zend_Auth"/>
        <tag name="subpackage" line="35" description="Zend_Auth_Adapter"/>
        <tag name="copyright" line="35" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="35" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_ldap</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_ldap</full_name>
        <default>null</default>
        <docblock line="43">
          <description>The Zend_Ldap context.</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\Zend_Ldap" variable="">
            <type>\Zend_Ldap</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="50" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_options</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_options</full_name>
        <default>null</default>
        <docblock line="50">
          <description>The array of arrays of Zend_Ldap options passed to the constructor.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="57" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_username</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_username</full_name>
        <default>null</default>
        <docblock line="57">
          <description>The username of the account being authenticated.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="64" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_password</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_password</full_name>
        <default>null</default>
        <docblock line="64">
          <description>The password of the account being authenticated.</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="71" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_authenticatedDn</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_authenticatedDn</full_name>
        <default>null</default>
        <docblock line="71">
          <description>The DN of the authenticated account. Used to retrieve the account entry on request.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="Zend_Auth\Zend_Auth_Adapter">
        <name>__construct</name>
        <full_name>\Zend_Auth_Adapter_Ldap::__construct()</full_name>
        <docblock line="80">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="80" description="&lt;p&gt;An array of arrays of Zend_Ldap options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="param" line="80" description="&lt;p&gt;The username of the account being authenticated&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="80" description="&lt;p&gt;The password of the account being authenticated&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="Zend_Auth\Zend_Auth_Adapter">
        <name>getOptions</name>
        <full_name>\Zend_Auth_Adapter_Ldap::getOptions()</full_name>
        <docblock line="96">
          <description>Returns the array of arrays of Zend_Ldap options of this adapter.</description>
          <long-description></long-description>
          <tag name="return" line="96" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="108" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setOptions</name>
        <full_name>\Zend_Auth_Adapter_Ldap::setOptions()</full_name>
        <docblock line="108">
          <description>Sets the array of arrays of Zend_Ldap options to be used by
this adapter.</description>
          <long-description></long-description>
          <tag name="param" line="108" description="&lt;p&gt;The array of arrays of Zend_Ldap options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="108" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type>\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="Zend_Auth\Zend_Auth_Adapter">
        <name>getUsername</name>
        <full_name>\Zend_Auth_Adapter_Ldap::getUsername()</full_name>
        <docblock line="120">
          <description>Returns the username of the account being authenticated, or
NULL if none is set.</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setUsername</name>
        <full_name>\Zend_Auth_Adapter_Ldap::setUsername()</full_name>
        <docblock line="131">
          <description>Sets the username for binding</description>
          <long-description></long-description>
          <tag name="param" line="131" description="&lt;p&gt;The username for binding&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type>\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="Zend_Auth\Zend_Auth_Adapter">
        <name>getPassword</name>
        <full_name>\Zend_Auth_Adapter_Ldap::getPassword()</full_name>
        <docblock line="143">
          <description>Returns the password of the account being authenticated, or
NULL if none is set.</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="154" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setPassword</name>
        <full_name>\Zend_Auth_Adapter_Ldap::setPassword()</full_name>
        <docblock line="154">
          <description>Sets the passwort for the account</description>
          <long-description></long-description>
          <tag name="param" line="154" description="&lt;p&gt;The password of the account being authenticated&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="154" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type>\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="170" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setIdentity</name>
        <full_name>\Zend_Auth_Adapter_Ldap::setIdentity()</full_name>
        <docblock line="170">
          <description>setIdentity() - set the identity (username) to be used</description>
          <long-description>Proxies to \setUsername()

Closes ZF-6813</long-description>
          <tag name="param" line="170" description="" type="string" variable="$identity">
            <type>string</type>
          </tag>
          <tag name="return" line="170" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type>\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identity</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setCredential</name>
        <full_name>\Zend_Auth_Adapter_Ldap::setCredential()</full_name>
        <docblock line="185">
          <description>setCredential() - set the credential (password) value to be used</description>
          <long-description>Proxies to \setPassword()

Closes ZF-6813</long-description>
          <tag name="param" line="185" description="" type="string" variable="$credential">
            <type>string</type>
          </tag>
          <tag name="return" line="185" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type>\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$credential</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="195" package="Zend_Auth\Zend_Auth_Adapter">
        <name>getLdap</name>
        <full_name>\Zend_Auth_Adapter_Ldap::getLdap()</full_name>
        <docblock line="195">
          <description>Returns the LDAP Object</description>
          <long-description></long-description>
          <tag name="return" line="195" description="The Zend_Ldap object used to authenticate the credentials" type="\Zend_Ldap">
            <type>\Zend_Ldap</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="214" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setLdap</name>
        <full_name>\Zend_Auth_Adapter_Ldap::setLdap()</full_name>
        <docblock line="214">
          <description>Set an Ldap connection</description>
          <long-description></long-description>
          <tag name="param" line="214" description="&lt;p&gt;An existing Ldap object&lt;/p&gt;" type="\Zend_Ldap" variable="$ldap">
            <type>\Zend_Ldap</type>
          </tag>
          <tag name="return" line="214" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type>\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ldap</name>
          <default></default>
          <type>\Zend_Ldap</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="229" package="Zend_Auth\Zend_Auth_Adapter">
        <name>_getAuthorityName</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_getAuthorityName()</full_name>
        <docblock line="229">
          <description>Returns a domain name for the current LDAP options. This is used
for skipping redundant operations (e.g. authentications).</description>
          <long-description></long-description>
          <tag name="return" line="229" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="244" package="Zend_Auth\Zend_Auth_Adapter">
        <name>authenticate</name>
        <full_name>\Zend_Auth_Adapter_Ldap::authenticate()</full_name>
        <docblock line="244">
          <description>Authenticate the user</description>
          <long-description></long-description>
          <tag name="throws" line="244" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="244" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Adapter_Interface::authenticate()" refers="\Zend_Auth_Adapter_Interface::authenticate()" link="/classes/Zend_Auth_Adapter_Interface.html#method_authenticate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="397" package="Zend_Auth\Zend_Auth_Adapter">
        <name>_prepareOptions</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_prepareOptions()</full_name>
        <docblock line="397">
          <description>Sets the LDAP specific options on the Zend_Ldap instance</description>
          <long-description></long-description>
          <tag name="param" line="397" description="" type="\Zend_Ldap" variable="$ldap">
            <type>\Zend_Ldap</type>
          </tag>
          <tag name="param" line="397" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="397" description="of auth-adapter specific options" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ldap</name>
          <default></default>
          <type>\Zend_Ldap</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="443" package="Zend_Auth\Zend_Auth_Adapter">
        <name>_checkGroupMembership</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_checkGroupMembership()</full_name>
        <docblock line="443">
          <description>Checks the group membership of the bound user</description>
          <long-description></long-description>
          <tag name="param" line="443" description="" type="\Zend_Ldap" variable="$ldap">
            <type>\Zend_Ldap</type>
          </tag>
          <tag name="param" line="443" description="" type="string" variable="$canonicalName">
            <type>string</type>
          </tag>
          <tag name="param" line="443" description="" type="string" variable="$dn">
            <type>string</type>
          </tag>
          <tag name="param" line="443" description="" type="array" variable="$adapterOptions">
            <type>array</type>
          </tag>
          <tag name="return" line="443" description="" type="string|true">
            <type>string</type>
            <type>true</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ldap</name>
          <default></default>
          <type>\Zend_Ldap</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$canonicalName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dn</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adapterOptions</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="486" package="Zend_Auth\Zend_Auth_Adapter">
        <name>getAccountObject</name>
        <full_name>\Zend_Auth_Adapter_Ldap::getAccountObject()</full_name>
        <docblock line="486">
          <description>getAccountObject() - Returns the result entry as a stdClass object</description>
          <long-description>This resembles the feature [\Zend_Auth_Adapter_DbTable::getResultRowObject()](/classes/Zend_Auth_Adapter_DbTable.html#method_getResultRowObject).
Closes ZF-6813</long-description>
          <tag name="param" line="486" description="" type="array" variable="$returnAttribs">
            <type>array</type>
          </tag>
          <tag name="param" line="486" description="" type="array" variable="$omitAttribs">
            <type>array</type>
          </tag>
          <tag name="return" line="486" description="" type="\stdClass|boolean">
            <type>\stdClass</type>
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAttribs</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$omitAttribs</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="519" package="Zend_Auth\Zend_Auth_Adapter">
        <name>_optionsToString</name>
        <full_name>\Zend_Auth_Adapter_Ldap::_optionsToString()</full_name>
        <docblock line="519">
          <description>Converts options to string</description>
          <long-description></long-description>
          <tag name="param" line="519" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="519" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="35" code="PPC:ERR-50005">No summary for class \Zend_Auth_Adapter_Ldap</error>
    </parse_markers>
    <source>eJzlW21z28YR/lz9iotGMwA9FGmnTaelaye0JLfsyFJGkjttUg8HBI4UYhJg8CJadfTfu7v3gsPhDpSa+FM5mZgE9vZ2957btzv95dvt7fZg/OzZAXvGfuBZwt4W0Ybv8uIjPMGH57OTs4vrM/nr5jYtWZnXRczZMl1zhj/rxU88rliVs+qWs4zv2JvrU7ZOY56VHJ5FFZIt6ixZ8wS57NLqFp7Dw20Uf4xWwCajscRSzjiqPlUjpJ7R8Ghd5iy6i9J1tFgj1yKvV7c0CqRdJ8e7NOHHO75gMB3xfn91PsHxt1W1nYzHS6XY6D+g5yjON2Mp4hhEPl6UJNpsye7zmiVpwrK8YgWPeXrHWcTifHvP8iVNqFSLwF5RwVmdCZly5JAvqgjUSaseGYdsu+YRcCjR5FHG+AYUw9FgRMn9OyUm2JvtOIuBjMhRPilPutnwJI0qvr4fyRX6Loafq7y4Z4wWlJ4pM8tn82ld3dILWDv1Tr+YT5NoW/FCcINpinR1WzF2or+G8YB9/fz5N8dfP3/xjYDNDY9vs3ydr1IOlr+eslkWj1gobb/b7bTVB8RXmRA+j14fJGYXEl7n4h0xu+NFmeYZvj6aJUfwbHygQP1dyR26zWcZ/H8ZxZyIC/5znRZ8nmeA6wCpx0g9ltRjTT2C7RK8bJj/3xl7fBCvo7J0WPQc/gVAArA3PKtcFI3NPx8cIHuyIn7QsUijEJs4B1La/vRWEX13FxUNlXw6pn+3RV6BE+IJO5qvkcUrltXr9UvnRFFRRLSZ6UuJ35q5820FWELXVJbATno1kKisijqu8sIpFXHySqR49glVl7zIYFWUk4niOK+zii14mq1YBIYEs6YIuMQpAYgHhF4RNPs+GVBnQEXyhWTQ7PtkOL3Qs5vzKVlG7L1cloLDbPyOtyQFetiN4AtwS/PSDaE9YrbmPc280p40mLBn2UawwZgEGjtS68+m2aPAZ/MRArMjvYhPBIyPn16QJy5+23T1AnwHW9ZZjMKz+VxvllAoe9Tgnx6Eg6GhizDv0JBGPBkQ989iLnTtGNWPX5e8uhTsQsV38FITpUsWNqy/eiVZGWzarN5L0maQweyhzVbLt5/t95K0GdRh+9DB0xWv6gKsVD3WRdFCYW4kHGwH6wUxFCx+QYF7123VGNY2vWQk9VPu7KVHj2tePUEJ2MkLAnPCFsqD9qvV2lwaW4917LZ1PJHs+yK/g2wNpGDLdQ3IhxxVpww9VnTB0w1kIyqk5VxsDD2EfdtoNlG75qVzQXzLYMLpCb5iyLQ7Yxfvz88R+1meiVSfdx2qFEW4lEehTO+5PTBTQu/FmdZumRdskWZJ492f5km7478gTByuxwMUw1WGQoFBo8H/DoonOPwvDwrtMfeAQgm9FxSSsKJFNdTbA4xfGRK/IF4cMcWDFyOQNnhpG+6xeIF5ZwkqWYH/Ycf4myyRyocs1OA1PLllY1D6E5YqQPCZ6jET/YMHi/pknZdA/MPb4z/+6cXv9yyXkuPLm1+bQc/Zj9TWDtdDeux8UnCiitYtS8f6MQv1wrO7CMR/msWbHfarLN7I8+VtbpjEmHev3ZudYgx6jEc8P51+zy6pneXxaE060a5Yc9EDq2VtYroGaxXLXqXBEyK/jhekBFRub1HfenJQrZn6mC2QpmzWb8et345GCI6RbQ+Tsi0Mdf30FGEr2fV5chzZ48WxLaaaARkn67iR2SzCEQkDNRb/lJYVotVYmy+PVlLdksbnoqXZjoQRemocmRci3fFrM0UfDF66TbsP6BFL8g22KHXKQwCtiwK1pS0gM8+R6PfCf4aLoRHlx3S7RQMDrOssiWBgvuVFJBLWkI9WI3MPUErbnyS0jaur8aaqBN1xtfIC3OiFK3s0qkxpRr2Z2pZrwHkksyo19MdARvhTshBOE3xoF5dfHTWZ2hPYXIPglclLrRgN/Vb+O2FB4Fu+qe1SMPDaJsWW887Vezv7FPOtsYcc2+CKl/W66gW56dY69m95Htvr2AIYkwhrOP3OWI9SjVdt8g0vy2jFjZ7Cy+7LH59/gPdgUzYewxxgsDuF4xbZCxdZQ2fk3+7ahKiMrKubrFoYapImq4MQ5wlOY6/KZPJ2Ojt/f3U2n52eXdzMbv41v7i8mb+9fH9xavllS/dpU93APpZ2TixnLrGgnbgxc0giDcE6w4a3t0fyVZObduISmzb5tCEKZDBxVONZSL7BPKXAbj7bpapkaBBVFTyqxGnJFjJPzSwq8WEE9cj9Jq9LquBGvWFuv5lPrs7I0NPz+eziH9Pz2V4zu3T7Lc3cAE3FDsvJmbtjn37evXKofSydfy3BiyWTZgccGgOXUbrmiaJP21vR8ApsVmFkaM7seBTfyoWmIzTs2LpyprLebtepsWEBA0YexaIVONcSAnQ1cjoVCFQ0VWg3XAAw0mW/Zk3H5fNBa7EIzt3GjI1roeOzzjP/0ZPDEzqEbzDTfzRle0h7PEUEC3IdScJAPtJdOdFJQwhEsoEYDNrMH9r7QTbrLu0YPN8WHPI0rptiiN4hc7RuiU0i/WxgOnvSA0DStTylxYYbH3RtykyMI8RN+q69ukGhh+SDoadU6Ca/pnzGbE53OSRWOOkmN91pUde0hNQw7G69HwXHD0544mdMR9sb8AHpdk3lIHVH5S5Uq66SwRKlE1mikxuAG8+91QYd4vn0DpNA2MaYGhppoZUF+tjtbnnB250FkMXc7YKCHJKoe32s0gyK4zQRtwwgKgDTQinqUBCTXC8vh5MTO6MqovhjKfrUUKAkKeVHId0IWJe5jx+JQWU52e6ehAHOqzSD+p4XBcgn0TUY+ZhQUr5MP3FMzcuaY+H+h+d//r1vQNep4McCuh9TXSS2h1PYuFYFAWz3uxSiMOgmOBICCNgTiftDN0c89E2zmnffPjh2UIzxHlC1vpA7SVdIJ+rNVCThF77jHc1LDMW0IWzzNQ6lHOPGTq//lhYGKpjFmm8QtZl1kImSYJJAznW9znft40wXzxUEzu3xhm8WkBvdwv5KM0DyhrYU7pN8l+nzUdd4QoyMJKW4kaMqCFZueZwuYReLDXOoQz3FZuEZQMx7F99DZZ1DdYOne76DBznidkz7xFblSC6+hnoufbqAPpLcrjiuIsBhCbvQgSTDh+paTSkc+L2niRAHEJwSVIUbyp2BSfYI+Fqw1GaeTKYnJzcX03dnUAxcvZufXjjjDQFI5IBG1Ilvefzxr/jqnYaWDtD2RkiyoR3lPUGqPdsrYQqvaaUs3UN3mHGf63nuC9FtMm8kb5ORI7McSzt8gdeOYyBf1muPEyP9LSjssQB+qO6UJ08ycHV8hndwy3/RMvU4Lfx0QYifvuqkW0hcvz85Obu+dgDFUb3oiRmHbelDgl1SycMW5SqZ8H/qLKbxWwS3x4HAhKZngDcO7h3eNusDg6XD6sPRA2FH/1nzTsWBH8jTqAO3iEoZOg30CUuAWCK+Julymca4ycC3Jmm0yvKSUzpTcKx9XJ4VErUFXiHLMRtaQA6zi4qEEpIYdnZdiEuNBY+xkgVXDVn3Ni/LFD34Iq3A+Hv8tYh4WMvDxgYwr3KIOLsiz1ZuT971VZAFoanBQsIfQikbupwabTUifuXqM00maMj5P+enl++ms4v5u9n1u+nNyd96MmQKkyIJw62IW8+IlrJrqpJeGfF8SZruuqirpBtCQ8OoVCGznYN7821Me9XK4jKWt3m9TthPNVTAlHPr+7efKjo8ci2V4NWe8WlpY0+WJjb345bl4nIOHuRv88s3fz87ufEGh1/dDtOc7DaHdC57mhwtFr2eQcH1nZjHlSY8yUCy62Q0oq7/dyvt62Z5rBTMZCll1GE+P/sbGceXf6UZNxmdw29vJtYuz9WQtyBfOGAjdhgSu8GEHcKvx8jW5QpVzmpe8O06inl48Dv6BON/L4IRvfm5ziselvWirIrmuH7Ing/Zi28GQxaMg8Eo+PdiHAzV4Gf40T+1VDdQZ/JpKXsKA/F6r4gygGasBm+wlScpsEDo3/OYjnrs3iStwb5uyD5jNQzMfuWmXNEdJ0q7zWYNnnuYE0xaKrh6lCJF077Vio8CgxOa8bB7OtbXd9U8uwlMzx0TCtUyEYmba3l2KYRdyijTB4iKjTpZt44M7dfte276rXm5j668gVLHMj/vyCRH+U/XrC6dJdLQEqJz9Nbp/omuaQscgcjT5K9Xr8W1TwfJaRYokqYsegMJ0WkWDlwDruN8ywMaYBRG12fTK4gw1yeX359BsHnjGjmtqiIQUwVxFrhIwG+AZgGRiJPkE7wB/4peXi7fZ+nPNcfUt7SHi3xVToHDa6IVtZabeFaS8kCMFYOmMLZZ09S2bI5N7Y/8nqxGt0PscIFxh5ZlDmRzOiIvQxxidGNdIUZwM483cZCjLVRnrcKaqByuqoT6hhSA976QFuMfx5iLO/FXP0q8MM2qgfjl9o/KCGmmmvpELMEd+qDzZnp9NvQyVB/f6MuLs2EfKiEaUHHYVx2yzg4TxsU12aOvu9TDzwJw9NHTiSPrG4jssb5HrlAtiyx+2S+/7DWhMSR4EcAIvBqAssSbrV6rALkFA0yennvi4B7tEr6MMDt6sk4QgzdSjqfPbBWHB91v0tf1329X1wbaIvoC1Qk2eESoor3EjBaiLKMX1FB33SV4XHSS18KY3ZLtoUsy+6X8O4mu7e1oJy+UNs6xJ6Q5u1udwObsc8loZ3W7rKBHebwFFRnjPnivZ0k92s3Bh4N+psZOFJypu9m5O0Dt3FeWRsYsrgxbDzKbbQ/m8W3fpQ4RGw2C/Tc6xBDrsFL0VWQn32Y/mQArUNhjbIqvHzq9Sb0U7XshGv5PmccI5B9kqjiwhXcyhKJdfA0bDYemGB02ghwXxKmOTEbsO0l0ISI0OXTiiZZSfDl+HSXJFBuG5iD3fYNC942Fh6LKWQ702R2h6nsnIvqHgXUrRs8DAH/xuH3jQrSkDN6K06cqZ3e8SJf3XQ9IfdYAa0Bpkkqd3T7ij3XwxFb0EMR9Ubqza94lldqIP0jDKyrgvBJKHdsXEhVDeUZTgnxrLlgseUQtuc+emwSnixs8WplMQBhRzlzlOyXOg7pv97jrvdLlCesh1NNF58/QVBGwSSubQvtnoeIvizxf80g5eu9d17YJXTKYfzPWnb956/LOX3kOFzzgss6M2lsAKYSY8rarUrV98cYp+3wTbcMAYleV43FfgXd8WoSmGzC1Y30cDEJzvFsC7BWH7XcdFg0PAVrPPcozfBl6TGtrJrNbV/2id8ZRBLT9dUuTsiOtJbnzSs5YNEUjoqmxkbuJio9c3h1gOL5yHD6625sPXYHKVg3hLpxM1By/lmqyUPpPqexrdHbfquR3Ir+0+h8kgq8/5pnFVRi4sk6VUJpcvOlknoEvxZsjzd/utW7vPq114bz4m97h9a8mi7Ov1expRJSkvHnW1wAud1fKLryJ91iIqOZd0L1ahINxMtG6e9llAsI4RqGIIxg2tG/Uyxc094gFryg0wRyuy5Zq2WCMWq2Hg/8CNmRHGg==</source>
  </file>
  <file path="Auth/Adapter/Http.php" generated-path="Auth.Adapter.Http.html" hash="486bab4855231a321fb17df742b8bd9a" package="Zend_Auth\Zend_Auth_Adapter_Http">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Zend_Auth_Adapter_Http"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="44" package="Zend_Auth\Zend_Auth_Adapter_Http">
      <extends/>
      <implements>\Zend_Auth_Adapter_Interface</implements>
      <name>Zend_Auth_Adapter_Http</name>
      <full_name>\Zend_Auth_Adapter_Http</full_name>
      <docblock line="44">
        <description>HTTP Authentication Adapter</description>
        <long-description>Implements a pretty good chunk of RFC 2617.</long-description>
        <tag name="category" line="44" description="Zend"/>
        <tag name="package" line="44" description="Zend_Auth"/>
        <tag name="subpackage" line="44" description="Zend_Auth_Adapter_Http"/>
        <tag name="copyright" line="44" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="44" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="todo" line="44" description="Support auth-int"/>
        <tag name="todo" line="44" description="Track nonces, nonce-count, opaque for replay protection and stale support"/>
        <tag name="todo" line="44" description="Support Authentication-Info header"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_request</name>
        <full_name>\Zend_Auth_Adapter_Http::_request</full_name>
        <default></default>
        <docblock line="51">
          <description>Reference to the HTTP Request object</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="\Zend_Controller_Request_Http" variable="">
            <type>\Zend_Controller_Request_Http</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="58" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_response</name>
        <full_name>\Zend_Auth_Adapter_Http::_response</full_name>
        <default></default>
        <docblock line="58">
          <description>Reference to the HTTP Response object</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\Zend_Controller_Response_Http" variable="">
            <type>\Zend_Controller_Response_Http</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="65" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_basicResolver</name>
        <full_name>\Zend_Auth_Adapter_Http::_basicResolver</full_name>
        <default></default>
        <docblock line="65">
          <description>Object that looks up user credentials for the Basic scheme</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface" variable="">
            <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="72" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_digestResolver</name>
        <full_name>\Zend_Auth_Adapter_Http::_digestResolver</full_name>
        <default></default>
        <docblock line="72">
          <description>Object that looks up user credentials for the Digest scheme</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface" variable="">
            <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="79" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_supportedSchemes</name>
        <full_name>\Zend_Auth_Adapter_Http::_supportedSchemes</full_name>
        <default>array('basic', 'digest')</default>
        <docblock line="79">
          <description>List of authentication schemes supported by this class</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="86" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_acceptSchemes</name>
        <full_name>\Zend_Auth_Adapter_Http::_acceptSchemes</full_name>
        <default></default>
        <docblock line="86">
          <description>List of schemes this class will accept from the client</description>
          <long-description></long-description>
          <tag name="var" line="86" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="93" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_domains</name>
        <full_name>\Zend_Auth_Adapter_Http::_domains</full_name>
        <default></default>
        <docblock line="93">
          <description>Space-delimited list of protected domains for Digest Auth</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="100" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_realm</name>
        <full_name>\Zend_Auth_Adapter_Http::_realm</full_name>
        <default></default>
        <docblock line="100">
          <description>The protection realm to use</description>
          <long-description></long-description>
          <tag name="var" line="100" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="107" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_nonceTimeout</name>
        <full_name>\Zend_Auth_Adapter_Http::_nonceTimeout</full_name>
        <default></default>
        <docblock line="107">
          <description>Nonce timeout period</description>
          <long-description></long-description>
          <tag name="var" line="107" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="114" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_useOpaque</name>
        <full_name>\Zend_Auth_Adapter_Http::_useOpaque</full_name>
        <default></default>
        <docblock line="114">
          <description>Whether to send the opaque value in the header. True by default</description>
          <long-description></long-description>
          <tag name="var" line="114" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="122" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_supportedAlgos</name>
        <full_name>\Zend_Auth_Adapter_Http::_supportedAlgos</full_name>
        <default>array('MD5')</default>
        <docblock line="122">
          <description>List of the supported digest algorithms. I want to support both MD5 and
MD5-sess, but MD5-sess won't make it into the first version.</description>
          <long-description></long-description>
          <tag name="var" line="122" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="129" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_algo</name>
        <full_name>\Zend_Auth_Adapter_Http::_algo</full_name>
        <default></default>
        <docblock line="129">
          <description>The actual algorithm to use. Defaults to MD5</description>
          <long-description></long-description>
          <tag name="var" line="129" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="137" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_supportedQops</name>
        <full_name>\Zend_Auth_Adapter_Http::_supportedQops</full_name>
        <default>array('auth')</default>
        <docblock line="137">
          <description>List of supported qop options. My intetion is to support both 'auth' and
'auth-int', but 'auth-int' won't make it into the first version.</description>
          <long-description></long-description>
          <tag name="var" line="137" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="145" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_imaProxy</name>
        <full_name>\Zend_Auth_Adapter_Http::_imaProxy</full_name>
        <default></default>
        <docblock line="145">
          <description>Whether or not to do Proxy Authentication instead of origin server
authentication (send 407's instead of 401's). Off by default.</description>
          <long-description></long-description>
          <tag name="var" line="145" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="152" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>$_ieNoOpaque</name>
        <full_name>\Zend_Auth_Adapter_Http::_ieNoOpaque</full_name>
        <default></default>
        <docblock line="152">
          <description>Flag indicating the client is IE and didn't bother to return the opaque string</description>
          <long-description></long-description>
          <tag name="var" line="152" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="167" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>__construct</name>
        <full_name>\Zend_Auth_Adapter_Http::__construct()</full_name>
        <docblock line="167">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="167" description="&lt;p&gt;Configuration settings:&#10;'accept_schemes' =&gt; 'basic'|'digest'|'basic digest'&#10;'realm' =&gt; &lt;string&gt;&#10;'digest_domains' =&gt; &lt;string&gt; Space-delimited list of URIs&#10;'nonce_timeout' =&gt; &lt;int&gt;&#10;'use_opaque' =&gt; &lt;bool&gt; Whether to send the opaque value in the header&#10;'alogrithm' =&gt; &lt;string&gt; See $_supportedAlgos. Default: MD5&#10;'proxy_auth' =&gt; &lt;bool&gt; Whether to do authentication as a Proxy&lt;/p&gt;" type="array" variable="$config">
            <type>array</type>
          </tag>
          <tag name="throws" line="167" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="271" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>setBasicResolver</name>
        <full_name>\Zend_Auth_Adapter_Http::setBasicResolver()</full_name>
        <docblock line="271">
          <description>Setter for the _basicResolver property</description>
          <long-description></long-description>
          <tag name="param" line="271" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface" variable="$resolver">
            <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
          <tag name="return" line="271" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type>\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resolver</name>
          <default></default>
          <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="283" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>getBasicResolver</name>
        <full_name>\Zend_Auth_Adapter_Http::getBasicResolver()</full_name>
        <docblock line="283">
          <description>Getter for the _basicResolver property</description>
          <long-description></long-description>
          <tag name="return" line="283" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface">
            <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="294" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>setDigestResolver</name>
        <full_name>\Zend_Auth_Adapter_Http::setDigestResolver()</full_name>
        <docblock line="294">
          <description>Setter for the _digestResolver property</description>
          <long-description></long-description>
          <tag name="param" line="294" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface" variable="$resolver">
            <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
          <tag name="return" line="294" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type>\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resolver</name>
          <default></default>
          <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="306" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>getDigestResolver</name>
        <full_name>\Zend_Auth_Adapter_Http::getDigestResolver()</full_name>
        <docblock line="306">
          <description>Getter for the _digestResolver property</description>
          <long-description></long-description>
          <tag name="return" line="306" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface">
            <type>\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="317" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>setRequest</name>
        <full_name>\Zend_Auth_Adapter_Http::setRequest()</full_name>
        <docblock line="317">
          <description>Setter for the Request object</description>
          <long-description></long-description>
          <tag name="param" line="317" description="" type="\Zend_Controller_Request_Http" variable="$request">
            <type>\Zend_Controller_Request_Http</type>
          </tag>
          <tag name="return" line="317" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type>\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\Zend_Controller_Request_Http</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="329" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>getRequest</name>
        <full_name>\Zend_Auth_Adapter_Http::getRequest()</full_name>
        <docblock line="329">
          <description>Getter for the Request object</description>
          <long-description></long-description>
          <tag name="return" line="329" description="" type="\Zend_Controller_Request_Http">
            <type>\Zend_Controller_Request_Http</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="340" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>setResponse</name>
        <full_name>\Zend_Auth_Adapter_Http::setResponse()</full_name>
        <docblock line="340">
          <description>Setter for the Response object</description>
          <long-description></long-description>
          <tag name="param" line="340" description="" type="\Zend_Controller_Response_Http" variable="$response">
            <type>\Zend_Controller_Response_Http</type>
          </tag>
          <tag name="return" line="340" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type>\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>\Zend_Controller_Response_Http</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="352" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>getResponse</name>
        <full_name>\Zend_Auth_Adapter_Http::getResponse()</full_name>
        <docblock line="352">
          <description>Getter for the Response object</description>
          <long-description></long-description>
          <tag name="return" line="352" description="" type="\Zend_Controller_Response_Http">
            <type>\Zend_Controller_Response_Http</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="363" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>authenticate</name>
        <full_name>\Zend_Auth_Adapter_Http::authenticate()</full_name>
        <docblock line="363">
          <description>Authenticate</description>
          <long-description></long-description>
          <tag name="throws" line="363" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="363" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Adapter_Interface::authenticate()" refers="\Zend_Auth_Adapter_Interface::authenticate()" link="/classes/Zend_Auth_Adapter_Interface.html#method_authenticate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="432" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_challengeClient</name>
        <full_name>\Zend_Auth_Adapter_Http::_challengeClient()</full_name>
        <docblock line="432">
          <description>Challenge Client</description>
          <long-description>Sets a 401 or 407 Unauthorized response code, and creates the
appropriate Authenticate header(s) to prompt for credentials.</long-description>
          <tag name="return" line="432" description="Always returns a non-identity Auth result" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="466" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_basicHeader</name>
        <full_name>\Zend_Auth_Adapter_Http::_basicHeader()</full_name>
        <docblock line="466">
          <description>Basic Header</description>
          <long-description>Generates a Proxy- or WWW-Authenticate header value in the Basic
authentication scheme.</long-description>
          <tag name="return" line="466" description="Authenticate header value" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="479" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_digestHeader</name>
        <full_name>\Zend_Auth_Adapter_Http::_digestHeader()</full_name>
        <docblock line="479">
          <description>Digest Header</description>
          <long-description>Generates a Proxy- or WWW-Authenticate header value in the Digest
authentication scheme.</long-description>
          <tag name="return" line="479" description="Authenticate header value" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="498" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_basicAuth</name>
        <full_name>\Zend_Auth_Adapter_Http::_basicAuth()</full_name>
        <docblock line="498">
          <description>Basic Authentication</description>
          <long-description></long-description>
          <tag name="param" line="498" description="&lt;p&gt;Client's Authorization header&lt;/p&gt;" type="string" variable="$header">
            <type>string</type>
          </tag>
          <tag name="throws" line="498" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="498" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$header</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="555" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_digestAuth</name>
        <full_name>\Zend_Auth_Adapter_Http::_digestAuth()</full_name>
        <docblock line="555">
          <description>Digest Authentication</description>
          <long-description></long-description>
          <tag name="param" line="555" description="&lt;p&gt;Client's Authorization header&lt;/p&gt;" type="string" variable="$header">
            <type>string</type>
          </tag>
          <tag name="throws" line="555" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="555" description="Valid auth result only on successful auth" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$header</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="655" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_calcNonce</name>
        <full_name>\Zend_Auth_Adapter_Http::_calcNonce()</full_name>
        <docblock line="655">
          <description>Calculate Nonce</description>
          <long-description></long-description>
          <tag name="return" line="655" description="The nonce value" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="684" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_calcOpaque</name>
        <full_name>\Zend_Auth_Adapter_Http::_calcOpaque()</full_name>
        <docblock line="684">
          <description>Calculate Opaque</description>
          <long-description>The opaque string can be anything; the client must return it exactly as
it was sent. It may be useful to store data in this string in some
applications. Ideally, a new value for this would be generated each time
a WWW-Authenticate header is sent (in order to reduce predictability),
but we would have to be able to create the same exact value across at
least two separate requests from the same client.</long-description>
          <tag name="return" line="684" description="The opaque value" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="696" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_parseDigestAuth</name>
        <full_name>\Zend_Auth_Adapter_Http::_parseDigestAuth()</full_name>
        <docblock line="696">
          <description>Parse Digest Authorization header</description>
          <long-description></long-description>
          <tag name="param" line="696" description="&lt;p&gt;Client's Authorization: HTTP header&lt;/p&gt;" type="string" variable="$header">
            <type>string</type>
          </tag>
          <tag name="return" line="696" description="Data elements from header, or false if any part of&#10;        the header is invalid" type="array|false">
            <type>array</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$header</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="857" package="Zend_Auth\Zend_Auth_Adapter_Http">
        <name>_secureStringCompare</name>
        <full_name>\Zend_Auth_Adapter_Http::_secureStringCompare()</full_name>
        <docblock line="857">
          <description>Securely compare two strings for equality while avoided C level memcmp()
optimisations capable of leaking timing information useful to an attacker
attempting to iteratively guess the unknown string (e.g. password) being
compared against.</description>
          <long-description></long-description>
          <tag name="param" line="857" description="" type="string" variable="$a">
            <type>string</type>
          </tag>
          <tag name="param" line="857" description="" type="string" variable="$b">
            <type>string</type>
          </tag>
          <tag name="return" line="857" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$a</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$b</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="44">Support auth-int</todo>
      <todo line="44">Track nonces, nonce-count, opaque for replay protection and stale support</todo>
      <todo line="44">Support Authentication-Info header</todo>
    </markers>
    <source></source>
  </file>
  <file path="Auth/Adapter/OpenId.php" generated-path="Auth.Adapter.OpenId.html" hash="d6209aaf7d8073eaaa9b29fb480603c3" package="Zend_Auth\Zend_Auth_Adapter">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Zend_Auth_Adapter"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="46" package="Zend_Auth\Zend_Auth_Adapter">
      <extends/>
      <implements>\Zend_Auth_Adapter_Interface</implements>
      <name>Zend_Auth_Adapter_OpenId</name>
      <full_name>\Zend_Auth_Adapter_OpenId</full_name>
      <docblock line="46">
        <description>A Zend_Auth Authentication Adapter allowing the use of OpenID protocol as an
authentication mechanism</description>
        <long-description></long-description>
        <tag name="category" line="46" description="Zend"/>
        <tag name="package" line="46" description="Zend_Auth"/>
        <tag name="subpackage" line="46" description="Zend_Auth_Adapter"/>
        <tag name="copyright" line="46" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="46" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="53" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_id</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_id</full_name>
        <default>null</default>
        <docblock line="53">
          <description>The identity value being authenticated</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="60" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_storage</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_storage</full_name>
        <default>null</default>
        <docblock line="60">
          <description>Reference to an implementation of a storage object</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="\Zend_OpenId_Consumer_Storage" variable="">
            <type>\Zend_OpenId_Consumer_Storage</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="67" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_returnTo</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_returnTo</full_name>
        <default>null</default>
        <docblock line="67">
          <description>The URL to redirect response from server to</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_root</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_root</full_name>
        <default>null</default>
        <docblock line="74">
          <description>The HTTP URL to identify consumer on server</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="81" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_extensions</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_extensions</full_name>
        <default>null</default>
        <docblock line="81">
          <description>Extension object or array of extensions objects</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="88" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_response</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_response</full_name>
        <default>null</default>
        <docblock line="88">
          <description>The response object to perform HTTP or HTML form redirection</description>
          <long-description></long-description>
          <tag name="var" line="88" description="" type="\Zend_Controller_Response_Abstract" variable="">
            <type>\Zend_Controller_Response_Abstract</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="96" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_check_immediate</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_check_immediate</full_name>
        <default>false</default>
        <docblock line="96">
          <description>Enables or disables interaction with user during authentication on
OpenID provider.</description>
          <long-description></long-description>
          <tag name="var" line="96" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="103" package="Zend_Auth\Zend_Auth_Adapter">
        <name>$_httpClient</name>
        <full_name>\Zend_Auth_Adapter_OpenId::_httpClient</full_name>
        <default>null</default>
        <docblock line="103">
          <description>HTTP client to make HTTP requests</description>
          <long-description></long-description>
          <tag name="var" line="103" description="" type="\Zend_Http_Client" variable="$_httpClient">
            <type>\Zend_Http_Client</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="117" package="Zend_Auth\Zend_Auth_Adapter">
        <name>__construct</name>
        <full_name>\Zend_Auth_Adapter_OpenId::__construct()</full_name>
        <docblock line="117">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="117" description="&lt;p&gt;the identity value&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="117" description="&lt;p&gt;an optional implementation&#10;       of a storage object&lt;/p&gt;" type="\Zend_OpenId_Consumer_Storage" variable="$storage">
            <type>\Zend_OpenId_Consumer_Storage</type>
          </tag>
          <tag name="param" line="117" description="&lt;p&gt;HTTP URL to redirect response from server to&lt;/p&gt;" type="string" variable="$returnTo">
            <type>string</type>
          </tag>
          <tag name="param" line="117" description="&lt;p&gt;HTTP URL to identify consumer on server&lt;/p&gt;" type="string" variable="$root">
            <type>string</type>
          </tag>
          <tag name="param" line="117" description="&lt;p&gt;extension object or array of extensions objects&lt;/p&gt;" type="mixed" variable="$extensions">
            <type>mixed</type>
          </tag>
          <tag name="param" line="117" description="&lt;p&gt;an optional response&#10;       object to perform HTTP or HTML form redirection&lt;/p&gt;" type="\Zend_Controller_Response_Abstract" variable="$response">
            <type>\Zend_Controller_Response_Abstract</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$storage</name>
          <default>null</default>
          <type>\Zend_OpenId_Consumer_Storage</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnTo</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$root</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$extensions</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\Zend_Controller_Response_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setIdentity</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setIdentity()</full_name>
        <docblock line="137">
          <description>Sets the value to be used as the identity</description>
          <long-description></long-description>
          <tag name="param" line="137" description="&lt;p&gt;the identity value&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type>\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setStorage</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setStorage()</full_name>
        <docblock line="149">
          <description>Sets the storage implementation which will be use by OpenId</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="\Zend_OpenId_Consumer_Storage" variable="$storage">
            <type>\Zend_OpenId_Consumer_Storage</type>
          </tag>
          <tag name="return" line="149" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type>\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$storage</name>
          <default></default>
          <type>\Zend_OpenId_Consumer_Storage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setReturnTo</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setReturnTo()</full_name>
        <docblock line="161">
          <description>Sets the HTTP URL to redirect response from server to</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$returnTo">
            <type>string</type>
          </tag>
          <tag name="return" line="161" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type>\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnTo</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="173" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setRoot</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setRoot()</full_name>
        <docblock line="173">
          <description>Sets HTTP URL to identify consumer on server</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$root">
            <type>string</type>
          </tag>
          <tag name="return" line="173" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type>\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$root</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setExtensions</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setExtensions()</full_name>
        <docblock line="185">
          <description>Sets OpenID extension(s)</description>
          <long-description></long-description>
          <tag name="param" line="185" description="" type="mixed" variable="$extensions">
            <type>mixed</type>
          </tag>
          <tag name="return" line="185" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type>\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$extensions</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="197" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setResponse</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setResponse()</full_name>
        <docblock line="197">
          <description>Sets an optional response object to perform HTTP or HTML form redirection</description>
          <long-description></long-description>
          <tag name="param" line="197" description="" type="string" variable="$response">
            <type>string</type>
          </tag>
          <tag name="return" line="197" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type>\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setCheckImmediate</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setCheckImmediate()</full_name>
        <docblock line="210">
          <description>Enables or disables interaction with user during authentication on
OpenID provider.</description>
          <long-description></long-description>
          <tag name="param" line="210" description="" type="boolean" variable="$check_immediate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="210" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type>\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$check_immediate</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="221" package="Zend_Auth\Zend_Auth_Adapter">
        <name>setHttpClient</name>
        <full_name>\Zend_Auth_Adapter_OpenId::setHttpClient()</full_name>
        <docblock line="221">
          <description>Sets HTTP client object to make HTTP requests</description>
          <long-description></long-description>
          <tag name="param" line="221" description="&lt;p&gt;HTTP client object to be used&lt;/p&gt;" type="\Zend_Http_Client" variable="$client">
            <type>\Zend_Http_Client</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$client</name>
          <default></default>
          <type>\Zend_Http_Client</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="232" package="Zend_Auth\Zend_Auth_Adapter">
        <name>authenticate</name>
        <full_name>\Zend_Auth_Adapter_OpenId::authenticate()</full_name>
        <docblock line="232">
          <description>Authenticates the given OpenId identity.</description>
          <long-description>Defined by Zend_Auth_Adapter_Interface.</long-description>
          <tag name="throws" line="232" description="If answering the authentication query is impossible" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="232" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Adapter_Interface::authenticate()" refers="\Zend_Auth_Adapter_Interface::authenticate()" link="/classes/Zend_Auth_Adapter_Interface.html#method_authenticate"/>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Auth/Adapter/Exception.php" generated-path="Auth.Adapter.Exception.html" hash="e2045cd61f17f884e92320c0548c977d" package="Zend_Auth\Adapter">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Adapter"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Auth\Adapter">
      <extends>\Zend_Auth_Exception</extends>
      <name>Zend_Auth_Adapter_Exception</name>
      <full_name>\Zend_Auth_Adapter_Exception</full_name>
      <docblock line="37">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Auth"/>
        <tag name="subpackage" line="37" description="Adapter"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Auth_Exception" refers="\Zend_Auth_Exception" link="/classes/Zend_Auth_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="PPC:ERR-50005">No summary for class \Zend_Auth_Adapter_Exception</error>
    </parse_markers>
    <source>eJzlU7Fu2zAQ3fUVNwRIYsSSGyBLEqBxEhcQYGSo06WLQZFniQ1FqiRl2S367znSlJOhCLrXk/ju3eO7d/Tt567psmIyyWAC31EL+GJZi4OxL4QEcFk+LJ5Wi3R6bqQDZ3rLETZSIYRjX/1A7sEb8A2CxgHuV4+gJEftkDDmA63qtVAogsogfUM4gR3jL6wmGR17o2S6Mfc7nwd2GduZcgbYlknFKhVUrenrJnaRWyWmgxQ4HbACui5qf/u6vA79jffddVFsxsHyXzRnzk1bJIsFWZ5WLlorN7A3PQgpQBsPFjnKLQIDbro9mE28cByNUV7MIvT64MkEBVN5RuNI/4HHC+gUMlJwIXKmAVsaLHRTiEn9brRJecOAwIkW6cFf8iPbFoVkHtU+Txu643Ssjd0DxIVGbIw5Yet575tYoN2NtblgnUd70CBxK+vGAzwcP8/4OVzOZlfTy9mnq8NjeUbeaKNMLZHyXs2h1DyHs5T4MAzHrM+j7hgc/f55K4EMT+lRLQ+1KLZF66TRoXxSihPCiix7/5bjmOvFjmPniRgJFn/20uLaaHrBp4FVBFZxZOX0hzi9eRP6X/IsMq6Yc++CSwO8BQi481R1fw3395/sFVu6ZV8=</source>
  </file>
  <file path="Auth/Adapter/DbTable.php" generated-path="Auth.Adapter.DbTable.html" hash="b8101be51869088f0ed0ef939fa9f7cd" package="Zend_Auth\Adapter">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Adapter"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="47" package="Zend_Auth\Adapter">
      <extends/>
      <implements>\Zend_Auth_Adapter_Interface</implements>
      <name>Zend_Auth_Adapter_DbTable</name>
      <full_name>\Zend_Auth_Adapter_DbTable</full_name>
      <docblock line="47">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="47" description="Zend"/>
        <tag name="package" line="47" description="Zend_Auth"/>
        <tag name="subpackage" line="47" description="Adapter"/>
        <tag name="copyright" line="47" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="47" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="55" package="Zend_Auth\Adapter">
        <name>$_zendDb</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_zendDb</full_name>
        <default>null</default>
        <docblock line="55">
          <description>Database Connection</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="\Zend_Db_Adapter_Abstract" variable="">
            <type>\Zend_Db_Adapter_Abstract</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="60" package="Zend_Auth\Adapter">
        <name>$_dbSelect</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_dbSelect</full_name>
        <default>null</default>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="\Zend_Db_Select" variable="">
            <type>\Zend_Db_Select</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="67" package="Zend_Auth\Adapter">
        <name>$_tableName</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_tableName</full_name>
        <default>null</default>
        <docblock line="67">
          <description>$_tableName - the table name to check</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="74" package="Zend_Auth\Adapter">
        <name>$_identityColumn</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_identityColumn</full_name>
        <default>null</default>
        <docblock line="74">
          <description>$_identityColumn - the column to use as the identity</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="81" package="Zend_Auth\Adapter">
        <name>$_credentialColumn</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_credentialColumn</full_name>
        <default>null</default>
        <docblock line="81">
          <description>$_credentialColumns - columns to be used as the credentials</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="88" package="Zend_Auth\Adapter">
        <name>$_identity</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_identity</full_name>
        <default>null</default>
        <docblock line="88">
          <description>$_identity - Identity value</description>
          <long-description></long-description>
          <tag name="var" line="88" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="95" package="Zend_Auth\Adapter">
        <name>$_credential</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_credential</full_name>
        <default>null</default>
        <docblock line="95">
          <description>$_credential - Credential values</description>
          <long-description></long-description>
          <tag name="var" line="95" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="102" package="Zend_Auth\Adapter">
        <name>$_credentialTreatment</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_credentialTreatment</full_name>
        <default>null</default>
        <docblock line="102">
          <description>$_credentialTreatment - Treatment applied to the credential, such as MD5() or PASSWORD()</description>
          <long-description></long-description>
          <tag name="var" line="102" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="109" package="Zend_Auth\Adapter">
        <name>$_authenticateResultInfo</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_authenticateResultInfo</full_name>
        <default>null</default>
        <docblock line="109">
          <description>$_authenticateResultInfo</description>
          <long-description></long-description>
          <tag name="var" line="109" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="116" package="Zend_Auth\Adapter">
        <name>$_resultRow</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_resultRow</full_name>
        <default>null</default>
        <docblock line="116">
          <description>$_resultRow - Results of database authentication query</description>
          <long-description></long-description>
          <tag name="var" line="116" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="125" package="Zend_Auth\Adapter">
        <name>$_ambiguityIdentity</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_ambiguityIdentity</full_name>
        <default>false</default>
        <docblock line="125">
          <description>$_ambiguityIdentity - Flag to indicate same Identity can be used with
different credentials. Default is FALSE and need to be set to true to
allow ambiguity usage.</description>
          <long-description></long-description>
          <tag name="var" line="125" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="136" package="Zend_Auth\Adapter">
        <name>__construct</name>
        <full_name>\Zend_Auth_Adapter_DbTable::__construct()</full_name>
        <docblock line="136">
          <description>__construct() - Sets configuration options</description>
          <long-description></long-description>
          <tag name="param" line="136" description="&lt;p&gt;If null, default database adapter assumed&lt;/p&gt;" type="\Zend_Db_Adapter_Abstract" variable="$zendDb">
            <type>\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag name="param" line="136" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="param" line="136" description="" type="string" variable="$identityColumn">
            <type>string</type>
          </tag>
          <tag name="param" line="136" description="" type="string" variable="$credentialColumn">
            <type>string</type>
          </tag>
          <tag name="param" line="136" description="" type="string" variable="$credentialTreatment">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$zendDb</name>
          <default>null</default>
          <type>\Zend_Db_Adapter_Abstract</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$identityColumn</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$credentialColumn</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$credentialTreatment</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="165" package="Zend_Auth\Adapter">
        <name>_setDbAdapter</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_setDbAdapter()</full_name>
        <docblock line="165">
          <description>_setDbAdapter() - set the database adapter to be used for quering</description>
          <long-description></long-description>
          <tag name="param" line="165" description="" type="\Zend_Db_Adapter_Abstract" variable="">
            <type>\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag name="throws" line="165" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="165" description="" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$zendDb</name>
          <default>null</default>
          <type>\Zend_Db_Adapter_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="190" package="Zend_Auth\Adapter">
        <name>setTableName</name>
        <full_name>\Zend_Auth_Adapter_DbTable::setTableName()</full_name>
        <docblock line="190">
          <description>setTableName() - set the table name to be used in the select query</description>
          <long-description></long-description>
          <tag name="param" line="190" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="190" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="202" package="Zend_Auth\Adapter">
        <name>setIdentityColumn</name>
        <full_name>\Zend_Auth_Adapter_DbTable::setIdentityColumn()</full_name>
        <docblock line="202">
          <description>setIdentityColumn() - set the column name to be used as the identity column</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="string" variable="$identityColumn">
            <type>string</type>
          </tag>
          <tag name="return" line="202" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identityColumn</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="214" package="Zend_Auth\Adapter">
        <name>setCredentialColumn</name>
        <full_name>\Zend_Auth_Adapter_DbTable::setCredentialColumn()</full_name>
        <docblock line="214">
          <description>setCredentialColumn() - set the column name to be used as the credential column</description>
          <long-description></long-description>
          <tag name="param" line="214" description="" type="string" variable="$credentialColumn">
            <type>string</type>
          </tag>
          <tag name="return" line="214" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$credentialColumn</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="237" package="Zend_Auth\Adapter">
        <name>setCredentialTreatment</name>
        <full_name>\Zend_Auth_Adapter_DbTable::setCredentialTreatment()</full_name>
        <docblock line="237">
          <description>setCredentialTreatment() - allows the developer to pass a parameterized string that is
used to transform or treat the input credential data.</description>
          <long-description>In many cases, passwords and other sensitive data are encrypted, hashed, encoded,
obscured, or otherwise treated through some function or algorithm. By specifying a
parameterized treatment string with this method, a developer may apply arbitrary SQL
upon input credential data.

Examples:

 'PASSWORD(?)'
 'MD5(?)'</long-description>
          <tag name="param" line="237" description="" type="string" variable="$treatment">
            <type>string</type>
          </tag>
          <tag name="return" line="237" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$treatment</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="249" package="Zend_Auth\Adapter">
        <name>setIdentity</name>
        <full_name>\Zend_Auth_Adapter_DbTable::setIdentity()</full_name>
        <docblock line="249">
          <description>setIdentity() - set the value to be used as the identity</description>
          <long-description></long-description>
          <tag name="param" line="249" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="249" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="262" package="Zend_Auth\Adapter">
        <name>setCredential</name>
        <full_name>\Zend_Auth_Adapter_DbTable::setCredential()</full_name>
        <docblock line="262">
          <description>setCredential() - set the credential value to be used, optionally can specify a treatment
to be used, should be supplied in parameterized form, such as 'MD5(?)' or 'PASSWORD(?)'</description>
          <long-description></long-description>
          <tag name="param" line="262" description="" type="string" variable="$credential">
            <type>string</type>
          </tag>
          <tag name="return" line="262" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$credential</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="276" package="Zend_Auth\Adapter">
        <name>setAmbiguityIdentity</name>
        <full_name>\Zend_Auth_Adapter_DbTable::setAmbiguityIdentity()</full_name>
        <docblock line="276">
          <description>setAmbiguityIdentity() - sets a flag for usage of identical identities
with unique credentials. It accepts integers (0, 1) or boolean (true,
false) parameters. Default is false.</description>
          <long-description></long-description>
          <tag name="param" line="276" description="" type="integer|boolean" variable="$flag">
            <type>integer</type>
            <type>boolean</type>
          </tag>
          <tag name="return" line="276" description="" type="\Zend_Auth_Adapter_DbTable">
            <type>\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flag</name>
          <default></default>
          <type>integer|boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="291" package="Zend_Auth\Adapter">
        <name>getAmbiguityIdentity</name>
        <full_name>\Zend_Auth_Adapter_DbTable::getAmbiguityIdentity()</full_name>
        <docblock line="291">
          <description>getAmbiguityIdentity() - returns TRUE for usage of multiple identical
identies with different credentials, FALSE if not used.</description>
          <long-description></long-description>
          <tag name="return" line="291" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="301" package="Zend_Auth\Adapter">
        <name>getDbSelect</name>
        <full_name>\Zend_Auth_Adapter_DbTable::getDbSelect()</full_name>
        <docblock line="301">
          <description>getDbSelect() - Return the preauthentication Db Select object for userland select query modification</description>
          <long-description></long-description>
          <tag name="return" line="301" description="" type="\Zend_Db_Select">
            <type>\Zend_Db_Select</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="317" package="Zend_Auth\Adapter">
        <name>getResultRowObject</name>
        <full_name>\Zend_Auth_Adapter_DbTable::getResultRowObject()</full_name>
        <docblock line="317">
          <description>getResultRowObject() - Returns the result row as a stdClass object</description>
          <long-description></long-description>
          <tag name="param" line="317" description="" type="string|array" variable="$returnColumns">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="317" description="" type="string|array" variable="$omitColumns">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="317" description="" type="\stdClass|boolean">
            <type>\stdClass</type>
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnColumns</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$omitColumns</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="364" package="Zend_Auth\Adapter">
        <name>authenticate</name>
        <full_name>\Zend_Auth_Adapter_DbTable::authenticate()</full_name>
        <docblock line="364">
          <description>authenticate() - defined by Zend_Auth_Adapter_Interface.  This method is called to
attempt an authentication.  Previous to this call, this adapter would have already
been configured with all necessary information to successfully connect to a database
table and attempt to find a record matching the provided identity.</description>
          <long-description></long-description>
          <tag name="throws" line="364" description="if answering the authentication query is impossible" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="364" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Adapter_Interface::authenticate()" refers="\Zend_Auth_Adapter_Interface::authenticate()" link="/classes/Zend_Auth_Adapter_Interface.html#method_authenticate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="397" package="Zend_Auth\Adapter">
        <name>_authenticateSetup</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_authenticateSetup()</full_name>
        <docblock line="397">
          <description>_authenticateSetup() - This method abstracts the steps involved with
making sure that this adapter was indeed setup properly with all
required pieces of information.</description>
          <long-description></long-description>
          <tag name="throws" line="397" description="- in the event that setup was not done properly" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="397" description="" type="true">
            <type>true</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="436" package="Zend_Auth\Adapter">
        <name>_authenticateCreateSelect</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_authenticateCreateSelect()</full_name>
        <docblock line="436">
          <description>_authenticateCreateSelect() - This method creates a Zend_Db_Select object that
is completely configured to be queried against the database.</description>
          <long-description></long-description>
          <tag name="return" line="436" description="" type="\Zend_Db_Select">
            <type>\Zend_Db_Select</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="472" package="Zend_Auth\Adapter">
        <name>_authenticateQuerySelect</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_authenticateQuerySelect()</full_name>
        <docblock line="472">
          <description>_authenticateQuerySelect() - This method accepts a Zend_Db_Select object and
performs a query against the database with that object.</description>
          <long-description></long-description>
          <tag name="param" line="472" description="" type="\Zend_Db_Select" variable="$dbSelect">
            <type>\Zend_Db_Select</type>
          </tag>
          <tag name="throws" line="472" description="- when an invalid select&#10;                                      object is encountered" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="472" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dbSelect</name>
          <default></default>
          <type>\Zend_Db_Select</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="503" package="Zend_Auth\Adapter">
        <name>_authenticateValidateResultSet</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_authenticateValidateResultSet()</full_name>
        <docblock line="503">
          <description>_authenticateValidateResultSet() - This method attempts to make
certain that only one record was returned in the resultset</description>
          <long-description></long-description>
          <tag name="param" line="503" description="" type="array" variable="$resultIdentities">
            <type>array</type>
          </tag>
          <tag name="return" line="503" description="" type="true|\Zend_Auth_Result">
            <type>true</type>
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resultIdentities</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="527" package="Zend_Auth\Adapter">
        <name>_authenticateValidateResult</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_authenticateValidateResult()</full_name>
        <docblock line="527">
          <description>_authenticateValidateResult() - This method attempts to validate that
the record in the resultset is indeed a record that matched the
identity provided to this adapter.</description>
          <long-description></long-description>
          <tag name="param" line="527" description="" type="array" variable="$resultIdentity">
            <type>array</type>
          </tag>
          <tag name="return" line="527" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resultIdentity</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="551" package="Zend_Auth\Adapter">
        <name>_authenticateCreateAuthResult</name>
        <full_name>\Zend_Auth_Adapter_DbTable::_authenticateCreateAuthResult()</full_name>
        <docblock line="551">
          <description>_authenticateCreateAuthResult() - Creates a Zend_Auth_Result object from
the information that has been collected during the authenticate() attempt.</description>
          <long-description></long-description>
          <tag name="return" line="551" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="47" code="PPC:ERR-50005">No summary for class \Zend_Auth_Adapter_DbTable</error>
      <error line="60" code="PPC:ERR-50007">No summary for property $_dbSelect</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Auth/Adapter/Interface.php" generated-path="Auth.Adapter.Interface.html" hash="8093380cfbc9d9157446d898b5fb1c51" package="Zend_Auth\Zend_Auth_Adapter">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Zend_Auth_Adapter"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <interface namespace="" line="37" package="Zend_Auth\Zend_Auth_Adapter">
      <name>Zend_Auth_Adapter_Interface</name>
      <full_name>\Zend_Auth_Adapter_Interface</full_name>
      <docblock line="37">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Auth"/>
        <tag name="subpackage" line="37" description="Zend_Auth_Adapter"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="Zend_Auth\Zend_Auth_Adapter">
        <name>authenticate</name>
        <full_name>\Zend_Auth_Adapter_Interface::authenticate()</full_name>
        <docblock line="45">
          <description>Performs an authentication attempt</description>
          <long-description></long-description>
          <tag name="throws" line="45" description="If authentication cannot be performed" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="45" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="37" code="PPC:ERR-50009">No summary for interface ""</error>
    </parse_markers>
    <source>eJzlVE1r20AQvetXzCEQ29SSG8glKdRu6oLAhBKnl17MajWytpF2t/thxS35751dSW4opvReXaSdjzdv3uzo3Xtd6ySbzRKYwVeUJXwyrMVOmSeyBOMmv1vfb9fD6bEWFqzyhiNUokEIR198Q+7AKXA1gsQOPmw/QiM4SotkYy6EFV6WDZYBpROuJjsZNeNPbE8wMuZGyKFi6p5dGqLzmM4aq4AdmGhY0QRUo/y+jlnEtinnnShx3mEBVC5if3nY3IT82jl9k2XV2Fj6g/pMuWqzgWJGlOeFjdTyCo7KQylKkMqBQY7igMCAK30EVcWCY2uM9GIGwcuekwoIqnCM2hHuLxzfgG6QEYINkjMJ2FJjIZtEHNCXI03SGzoETmExPPAb+Ii2xVIwh80xHSa05HTcK3MEiAONtlHmwbZbeVdHB81u9J0cu1XJtEPTo1EZI/a1A7g7fU74FK4Wi+v51eLtdX9tHpHXUjVqL5CU364glzyFyaB913Un1acRd5SQnn+eTwiG++F6bXpfBDugsULJ4L7IywuyZUky3uqlxdfNPaD1jYshBr97YXCnJN3myxCShZCsD0lpMy5vX+H8d8JmiZBEt2L8TBO7fPQlP5OQH2UKzww+k0OZ1oabzSgHpROkXhgRcw5b7YbIMWEZVqWzZ6qsnznqmEmb+QcWbUTY0QJB9wXD32UANOi8kWfmHv1ZfGtfkBBQecl7br/hcTK9TV6SXzmYp8Q=</source>
  </file>
  <file path="Auth/Adapter/Digest.php" generated-path="Auth.Adapter.Digest.html" hash="5720eb09acb6eedea236e4657182bc95" package="Zend_Auth\Adapter">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Adapter"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Auth\Adapter">
      <extends/>
      <implements>\Zend_Auth_Adapter_Interface</implements>
      <name>Zend_Auth_Adapter_Digest</name>
      <full_name>\Zend_Auth_Adapter_Digest</full_name>
      <docblock line="37">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Auth"/>
        <tag name="subpackage" line="37" description="Adapter"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="44" package="Zend_Auth\Adapter">
        <name>$_filename</name>
        <full_name>\Zend_Auth_Adapter_Digest::_filename</full_name>
        <default></default>
        <docblock line="44">
          <description>Filename against which authentication queries are performed</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="51" package="Zend_Auth\Adapter">
        <name>$_realm</name>
        <full_name>\Zend_Auth_Adapter_Digest::_realm</full_name>
        <default></default>
        <docblock line="51">
          <description>Digest authentication realm</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="58" package="Zend_Auth\Adapter">
        <name>$_username</name>
        <full_name>\Zend_Auth_Adapter_Digest::_username</full_name>
        <default></default>
        <docblock line="58">
          <description>Digest authentication user</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="65" package="Zend_Auth\Adapter">
        <name>$_password</name>
        <full_name>\Zend_Auth_Adapter_Digest::_password</full_name>
        <default></default>
        <docblock line="65">
          <description>Password for the user of the realm</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend_Auth\Adapter">
        <name>__construct</name>
        <full_name>\Zend_Auth_Adapter_Digest::__construct()</full_name>
        <docblock line="75">
          <description>Sets adapter options</description>
          <long-description></long-description>
          <tag name="param" line="75" description="" type="mixed" variable="$filename">
            <type>mixed</type>
          </tag>
          <tag name="param" line="75" description="" type="mixed" variable="$realm">
            <type>mixed</type>
          </tag>
          <tag name="param" line="75" description="" type="mixed" variable="$username">
            <type>mixed</type>
          </tag>
          <tag name="param" line="75" description="" type="mixed" variable="$password">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$realm</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="Zend_Auth\Adapter">
        <name>getFilename</name>
        <full_name>\Zend_Auth_Adapter_Digest::getFilename()</full_name>
        <docblock line="91">
          <description>Returns the filename option value or null if it has not yet been set</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="Zend_Auth\Adapter">
        <name>setFilename</name>
        <full_name>\Zend_Auth_Adapter_Digest::setFilename()</full_name>
        <docblock line="102">
          <description>Sets the filename option value</description>
          <long-description></long-description>
          <tag name="param" line="102" description="" type="mixed" variable="$filename">
            <type>mixed</type>
          </tag>
          <tag name="return" line="102" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type>\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="113" package="Zend_Auth\Adapter">
        <name>getRealm</name>
        <full_name>\Zend_Auth_Adapter_Digest::getRealm()</full_name>
        <docblock line="113">
          <description>Returns the realm option value or null if it has not yet been set</description>
          <long-description></long-description>
          <tag name="return" line="113" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="Zend_Auth\Adapter">
        <name>setRealm</name>
        <full_name>\Zend_Auth_Adapter_Digest::setRealm()</full_name>
        <docblock line="124">
          <description>Sets the realm option value</description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="mixed" variable="$realm">
            <type>mixed</type>
          </tag>
          <tag name="return" line="124" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type>\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$realm</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="135" package="Zend_Auth\Adapter">
        <name>getUsername</name>
        <full_name>\Zend_Auth_Adapter_Digest::getUsername()</full_name>
        <docblock line="135">
          <description>Returns the username option value or null if it has not yet been set</description>
          <long-description></long-description>
          <tag name="return" line="135" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="Zend_Auth\Adapter">
        <name>setUsername</name>
        <full_name>\Zend_Auth_Adapter_Digest::setUsername()</full_name>
        <docblock line="146">
          <description>Sets the username option value</description>
          <long-description></long-description>
          <tag name="param" line="146" description="" type="mixed" variable="$username">
            <type>mixed</type>
          </tag>
          <tag name="return" line="146" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type>\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="157" package="Zend_Auth\Adapter">
        <name>getPassword</name>
        <full_name>\Zend_Auth_Adapter_Digest::getPassword()</full_name>
        <docblock line="157">
          <description>Returns the password option value or null if it has not yet been set</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="168" package="Zend_Auth\Adapter">
        <name>setPassword</name>
        <full_name>\Zend_Auth_Adapter_Digest::setPassword()</full_name>
        <docblock line="168">
          <description>Sets the password option value</description>
          <long-description></long-description>
          <tag name="param" line="168" description="" type="mixed" variable="$password">
            <type>mixed</type>
          </tag>
          <tag name="return" line="168" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type>\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="180" package="Zend_Auth\Adapter">
        <name>authenticate</name>
        <full_name>\Zend_Auth_Adapter_Digest::authenticate()</full_name>
        <docblock line="180">
          <description>Defined by Zend_Auth_Adapter_Interface</description>
          <long-description></long-description>
          <tag name="throws" line="180" description="" type="\Zend_Auth_Adapter_Exception">
            <type>\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag name="return" line="180" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Adapter_Interface::authenticate()" refers="\Zend_Auth_Adapter_Interface::authenticate()" link="/classes/Zend_Auth_Adapter_Interface.html#method_authenticate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="240" package="Zend_Auth\Adapter">
        <name>_secureStringCompare</name>
        <full_name>\Zend_Auth_Adapter_Digest::_secureStringCompare()</full_name>
        <docblock line="240">
          <description>Securely compare two strings for equality while avoided C level memcmp()
optimisations capable of leaking timing information useful to an attacker
attempting to iteratively guess the unknown string (e.g. password) being
compared against.</description>
          <long-description></long-description>
          <tag name="param" line="240" description="" type="string" variable="$a">
            <type>string</type>
          </tag>
          <tag name="param" line="240" description="" type="string" variable="$b">
            <type>string</type>
          </tag>
          <tag name="return" line="240" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$a</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$b</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="PPC:ERR-50005">No summary for class \Zend_Auth_Adapter_Digest</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Auth/Exception.php" generated-path="Auth.Exception.html" hash="0284af18989a34a2fb9966b63a8a54a4" package="Zend_Auth">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="35" package="Zend_Auth">
      <extends>\Zend_Exception</extends>
      <name>Zend_Auth_Exception</name>
      <full_name>\Zend_Auth_Exception</full_name>
      <docblock line="35">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="35" description="Zend"/>
        <tag name="package" line="35" description="Zend_Auth"/>
        <tag name="copyright" line="35" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="35" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Exception" refers="\Zend_Exception" link="/classes/Zend_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="35" code="PPC:ERR-50005">No summary for class \Zend_Auth_Exception</error>
    </parse_markers>
    <source>eJzdUj1v2zAQ3fUrbgiQxIglN0CWpECdDxcQYGSo0yVLQFFniQ1FqiRl2i3633ukKCfoUHSuJvHx3bt3j/fxU9/2WTGbZTCDZ1Q1fDasQ6/NKyEBXJf3q8fNKp2eWmHB6sFwhK2QCOE4VN+QO3AaXIug0MPd5gGk4KgsEsZcoFWDqiXWQcUL1xJOYM/4K2tIRsXaKJk65m7v8sAuYzmTVgPbMSFZJYOq0UPTxipyK+u5FzXOPVZA7aL21y/r61DfOtdfF8V2Giz/QXPmXHdFsliQ5Xllo7VyCwc9QC1qUNqBQY5ih8CA6/4AehsbTqMxyosZhEGNnnRQ0JVjNI5wf/F4Ab1ERgo2RM4UYEeDhWoKMakvJ5uUN3gETrRID/6SH9F1WAvmUB7y9EJLTsdGmwNAfNCITTEn7OV2cO1IJhUjmtYB3B9/z/g5XC4WV/PLxYercSuekLdKS90IpGA3t1AqnsNZitZ7fwz1POpOCdH3z/EHMjym7VmPd1Fsh8YKrcL1SVmfEFZk2bS0S4s4DrXac+wdESPB4PdBGHzRilb1NBCKIyGnpT+9eafxv2VWZFwya9+Mv4UDuHeE2j8z+/kr+w1pw07j</source>
  </file>
  <file path="Auth/Result.php" generated-path="Auth.Result.html" hash="011bad9ebfb3e12cde52dc199c1b9b0c" package="Zend_Auth">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="29" package="Zend_Auth">
      <extends/>
      <name>Zend_Auth_Result</name>
      <full_name>\Zend_Auth_Result</full_name>
      <docblock line="29">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="29" description="Zend"/>
        <tag name="package" line="29" description="Zend_Auth"/>
        <tag name="copyright" line="29" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="29" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <constant namespace="" line="34" package="Zend_Auth">
        <name>FAILURE</name>
        <full_name>\Zend_Auth_Result::FAILURE</full_name>
        <value>0</value>
        <docblock line="34">
          <description>General Failure</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="39" package="Zend_Auth">
        <name>FAILURE_IDENTITY_NOT_FOUND</name>
        <full_name>\Zend_Auth_Result::FAILURE_IDENTITY_NOT_FOUND</full_name>
        <value>-1</value>
        <docblock line="39">
          <description>Failure due to identity not being found.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="44" package="Zend_Auth">
        <name>FAILURE_IDENTITY_AMBIGUOUS</name>
        <full_name>\Zend_Auth_Result::FAILURE_IDENTITY_AMBIGUOUS</full_name>
        <value>-2</value>
        <docblock line="44">
          <description>Failure due to identity being ambiguous.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="49" package="Zend_Auth">
        <name>FAILURE_CREDENTIAL_INVALID</name>
        <full_name>\Zend_Auth_Result::FAILURE_CREDENTIAL_INVALID</full_name>
        <value>-3</value>
        <docblock line="49">
          <description>Failure due to invalid credential being supplied.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="54" package="Zend_Auth">
        <name>FAILURE_UNCATEGORIZED</name>
        <full_name>\Zend_Auth_Result::FAILURE_UNCATEGORIZED</full_name>
        <value>-4</value>
        <docblock line="54">
          <description>Failure due to uncategorized reasons.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="59" package="Zend_Auth">
        <name>SUCCESS</name>
        <full_name>\Zend_Auth_Result::SUCCESS</full_name>
        <value>1</value>
        <docblock line="59">
          <description>Authentication success.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="" line="66" package="Zend_Auth">
        <name>$_code</name>
        <full_name>\Zend_Auth_Result::_code</full_name>
        <default></default>
        <docblock line="66">
          <description>Authentication result code</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="73" package="Zend_Auth">
        <name>$_identity</name>
        <full_name>\Zend_Auth_Result::_identity</full_name>
        <default></default>
        <docblock line="73">
          <description>The identity used in the authentication attempt</description>
          <long-description></long-description>
          <tag name="var" line="73" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="82" package="Zend_Auth">
        <name>$_messages</name>
        <full_name>\Zend_Auth_Result::_messages</full_name>
        <default></default>
        <docblock line="82">
          <description>An array of string reasons why the authentication attempt was unsuccessful</description>
          <long-description>If authentication was successful, this should be an empty array.</long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="Zend_Auth">
        <name>__construct</name>
        <full_name>\Zend_Auth_Result::__construct()</full_name>
        <docblock line="91">
          <description>Sets the result code, identity, and failure messages</description>
          <long-description></long-description>
          <tag name="param" line="91" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="91" description="" type="mixed" variable="$identity">
            <type>mixed</type>
          </tag>
          <tag name="param" line="91" description="" type="array" variable="$messages">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$identity</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$messages</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="111" package="Zend_Auth">
        <name>isValid</name>
        <full_name>\Zend_Auth_Result::isValid()</full_name>
        <docblock line="111">
          <description>Returns whether the result represents a successful authentication attempt</description>
          <long-description></long-description>
          <tag name="return" line="111" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="121" package="Zend_Auth">
        <name>getCode</name>
        <full_name>\Zend_Auth_Result::getCode()</full_name>
        <docblock line="121">
          <description>getCode() - Get the result code for this authentication attempt</description>
          <long-description></long-description>
          <tag name="return" line="121" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Zend_Auth">
        <name>getIdentity</name>
        <full_name>\Zend_Auth_Result::getIdentity()</full_name>
        <docblock line="131">
          <description>Returns the identity used in the authentication attempt</description>
          <long-description></long-description>
          <tag name="return" line="131" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="Zend_Auth">
        <name>getMessages</name>
        <full_name>\Zend_Auth_Result::getMessages()</full_name>
        <docblock line="143">
          <description>Returns an array of string reasons why the authentication attempt was unsuccessful</description>
          <long-description>If authentication was successful, this method returns an empty array.</long-description>
          <tag name="return" line="143" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="PPC:ERR-50005">No summary for class \Zend_Auth_Result</error>
    </parse_markers>
    <source>eJzdVktv2zgQvvtXzMEHO4jtJLu9pE0a13ECAa4D+FGgvRi0NLa4lUWBpKK6i/73HVKULcuvFHtYYHWxRQ6/bx7fDPXhYxImtc7FRQ0u4BvGATxJtsJMyO+0YhYHXq8/HPfd2yTkCpRIpY+w4BGCeU3nf6GvQQvQIUKMGXwaP0LEfYwV0hrTxmyexkGEgUHJuA5pnRYT5n9nS4KJ7VkL6Rjb+oduG2vPHmeREsBeGY/YPDKoUqTL0J4ib6OglfEAWxnOgegs9nQ0uDXnQ62T205nUQTW/klxtn2x6jgXO+Rya66sa94C1iKFgAcQCw0SfeSvCAx8kaxBLCxhERqjfDGJkMa5T8IgiLlmFA7XJ3y8hCRCRgjKpJzFgCsKzJymJDr0h8JNyjdkCD6ZWXPjn/OHr1YYcKYxWrddhR58el0KuQawBbVrRZrd2qyb6jA3JhTJl6EG6G3+Nvwm3FxdvWvdXF2/y1UxQT+MRSSWHCmx4y54sd+GhkttlmWbpDYtbpEhet6cfmMMQ6eeQb5nwV5RKi5is133gjqtdWq1QrT/u3g7NT9iSm0dn41QpZGu/V0zB2zY5rmAZ4xRsgieSDupRLfcsb++iJWGp643mI76cOS5A7h6X6vCOjgIUiNpIMnGmuu17Yc58ngJC0G93D7ON/Me+8OJN/k6G75MZk8v0+Gj42tdv50v52KrOV+mIlVv4ut+/uQ9T1+m44Lv5jxf/MoiandfomWmhObMKk2SiOPJQHujvqXuDmbe8Et34G0C/eMscRo76fKfGNCkYYqgT5FNh73upP/8MvK+9R/LVWz9uU9mlGPCIQ7TOyr1fVQH4cfTXq8/Hp8QyYGiVeCllSgBBoUMC8OHVyYpx3qHOJFC05VBYddn5sw+/oRm5kYJqSJLd0WwXWKmNa4SfYh0xX+Y6+YIbQF+IDRClZLZaa+0NFJwxYEsXJ9wAjKmqKou1Ys0qnhFd0vloDmwNb/M7y0VijQKSIT5xZBQAqw/7UNB2p2jQa4ImOag2g9yjFrZUEqVu9xk/NJebQun1wKlyp8wmnGmtvRaL5W+2LEFgHoBWtnNc1yvgLsY0jkNS1hQi9g8zWZWqjL1daOeu1ov+bqLRIq1K41m04LlcxMKJ2m7QT438zeXGfPwBeTg8IEu2mhxe3uw8ZolwDLozpH3G5NfgJHCLfa9Myy67hjcdQli62PdKKR1b5vGLtwVYVQtNs1zt03VvlUpZ/WtWEqkJcmMUKfSNgGScGRZPRIT+kck9J1WEvQbm1VaYJgLQR9F8UkhcPXFDOtGtbIOorGTn3u4asJHINkg3JKaqQ7HYlui7tGRRhNadK3qamfQjSfz5vytiPbGXiWaDevhaMrBnCuK/nfz0jEeGJn7LnuO5pzbu6o77jr7j+ftiuQsAue9Ojd0XZAH5u5+pj67jjqXqWrn/ar9A17L9TA=</source>
  </file>
  <file path="Auth/Storage/Exception.php" generated-path="Auth.Storage.Exception.html" hash="495bf4375b6dfd5657383a25c9050121" package="Zend_Auth\Storage">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Storage"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="37" package="Zend_Auth\Storage">
      <extends>\Zend_Auth_Exception</extends>
      <name>Zend_Auth_Storage_Exception</name>
      <full_name>\Zend_Auth_Storage_Exception</full_name>
      <docblock line="37">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="37" description="Zend"/>
        <tag name="package" line="37" description="Zend_Auth"/>
        <tag name="subpackage" line="37" description="Storage"/>
        <tag name="copyright" line="37" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="37" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
        <tag name="inherited_from" description="\Zend_Auth_Exception" refers="\Zend_Auth_Exception" link="/classes/Zend_Auth_Exception.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="Zend">
        <name>$_previous</name>
        <full_name>\Zend_Exception::_previous</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="null|\Exception" variable="">
            <type>null</type>
            <type>\Exception</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Zend">
        <name>__construct</name>
        <full_name>\Zend_Exception::__construct()</full_name>
        <docblock line="43">
          <description>Construct the exception</description>
          <long-description></long-description>
          <tag name="param" line="43" description="" type="string" variable="$msg">
            <type>string</type>
          </tag>
          <tag name="param" line="43" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="43" description="" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$msg</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Zend">
        <name>__call</name>
        <full_name>\Zend_Exception::__call()</full_name>
        <docblock line="62">
          <description>Overloading</description>
          <long-description>For PHP &lt; 5.3.0, provides access to the getPrevious() method.</long-description>
          <tag name="param" line="62" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="Zend">
        <name>__toString</name>
        <full_name>\Zend_Exception::__toString()</full_name>
        <docblock line="75">
          <description>String representation of the exception</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Zend">
        <name>_getPrevious</name>
        <full_name>\Zend_Exception::_getPrevious()</full_name>
        <docblock line="92">
          <description>Returns previous Exception</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="\Exception|null">
            <type>\Exception</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Zend_Exception</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="PPC:ERR-50005">No summary for class \Zend_Auth_Storage_Exception</error>
    </parse_markers>
    <source>eJzlU7Fu2zAQ3fUVNwRIYsSSEyBLUqBOUwcQYGSo06WLQVFnkQ1FqiRl2Q3y7znSlJOhKLpXi8S7d4/v3p0+fe5ElxWTSQYT+IG6hgfLWhyMfaZICC7L+8XjapFOT0I6cKa3HGEjFUI49tVP5B68AS8QNA7wZfUVlOSoHVKM+QCrel0rrAPLIL2gOAU7xp9ZQzQ61kbKdGPudz4P6DKWM+UMsC2TilUqsFrTNyJWkVpVTwdZ43TACui6yP392/Im1Avvu5ui2IyN5b+pz5ybtkgSC5I8rVyUVm5gb3qoZQ3aeLDIUW4RGHDT7cFs4oVja4z8Yhah1wdNJjCYyjNqR/q/aLyATiEjBhcsZxqwpcZCNZmY2OejTPIbBgROsAgP+pIe2bZYS+ZR7fM0oTmnY2PsHiAONMZGm1Nsfdd7ERM0uzG38sbS+8BB5FY2wgPcHz/P+DlczWbX06vZ5fVhWZ6QC22UaSSS36s7KDXP4Sw5PgzD0evzyDsaR88/TyWA4TEt1fKQi2RbtE4aHdInZX1CsSLLxl2eO8T3XteLHcfOEzqiLP7qpcW10bTGpwFVBFRxROX0V5zefmD7T0wtMq6Ycx+MSw28Gwi485R1fzT35TV7A5ToZzg=</source>
  </file>
  <file path="Auth/Storage/NonPersistent.php" generated-path="Auth.Storage.NonPersistent.html" hash="65d73f35bce4972e32921f69f239b2b5" package="Zend_Auth\Storage">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Storage"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="43" package="Zend_Auth\Storage">
      <extends/>
      <implements>\Zend_Auth_Storage_Interface</implements>
      <name>Zend_Auth_Storage_NonPersistent</name>
      <full_name>\Zend_Auth_Storage_NonPersistent</full_name>
      <docblock line="43">
        <description>Non-Persistent Auth Storage</description>
        <long-description>Since HTTP Authentication happens again on each request, this will always be
re-populated. So there's no need to use sessions, this simple value class
will hold the data for rest of the current request.</long-description>
        <tag name="category" line="43" description="Zend"/>
        <tag name="package" line="43" description="Zend_Auth"/>
        <tag name="subpackage" line="43" description="Storage"/>
        <tag name="copyright" line="43" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="43" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="48" package="Zend_Auth\Storage">
        <name>$_data</name>
        <full_name>\Zend_Auth_Storage_NonPersistent::_data</full_name>
        <default></default>
        <docblock line="48">
          <description>Holds the actual auth data</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="56" package="Zend_Auth\Storage">
        <name>isEmpty</name>
        <full_name>\Zend_Auth_Storage_NonPersistent::isEmpty()</full_name>
        <docblock line="56">
          <description>Returns true if and only if storage is empty</description>
          <long-description></long-description>
          <tag name="throws" line="56" description="If it is impossible to determine whether storage is empty" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="56" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::isEmpty()" refers="\Zend_Auth_Storage_Interface::isEmpty()" link="/classes/Zend_Auth_Storage_Interface.html#method_isEmpty"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Zend_Auth\Storage">
        <name>read</name>
        <full_name>\Zend_Auth_Storage_NonPersistent::read()</full_name>
        <docblock line="68">
          <description>Returns the contents of storage
Behavior is undefined when storage is empty.</description>
          <long-description>Behavior is undefined when storage is empty.</long-description>
          <tag name="throws" line="68" description="If reading contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="68" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::read()" refers="\Zend_Auth_Storage_Interface::read()" link="/classes/Zend_Auth_Storage_Interface.html#method_read"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="Zend_Auth\Storage">
        <name>write</name>
        <full_name>\Zend_Auth_Storage_NonPersistent::write()</full_name>
        <docblock line="80">
          <description>Writes $contents to storage</description>
          <long-description></long-description>
          <tag name="param" line="80" description="" type="mixed" variable="$contents">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="80" description="If writing $contents to storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="80" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::write()" refers="\Zend_Auth_Storage_Interface::write()" link="/classes/Zend_Auth_Storage_Interface.html#method_write"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contents</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="Zend_Auth\Storage">
        <name>clear</name>
        <full_name>\Zend_Auth_Storage_NonPersistent::clear()</full_name>
        <docblock line="91">
          <description>Clears contents from storage</description>
          <long-description></long-description>
          <tag name="throws" line="91" description="If clearing contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::clear()" refers="\Zend_Auth_Storage_Interface::clear()" link="/classes/Zend_Auth_Storage_Interface.html#method_clear"/>
        </docblock>
      </method>
    </class>
    <source>eJzlVU1v20YQvetXzEGAZSMS3QC5JP1Q4rqIAMMIIhcFehFWy6G4zXKX3V2KVor8984MSclxJLf1tbyI3J198+bN29H3P9VlPcouLkZwAb+jy+GXoCpsffhEK7x4s7i6vl1e9193pYkQfRM0QmEsAn826z9QJ0geUongsIV3y5/BGo0uIq2pxGHrxuUWc0ZpTSppnRZrpT+pDcE4OSuQfcZZuk8zjl7IcWWjB7VVxqq1ZdTgm00pp4itzaetyXHa4hoonWD/+vHmNZ8vU6pfZ1kxFDb7THXOtK+ynmJGlKfrKNQWBex8A7nJwfkEATWaLYIC7esd+EISDqUp0ksFhMZ1nDwj+HVSVI5JT3B8AbVFRQiRJVcOsKLC+DSJ2KPPB5qkN7QImsIknPn1fExVYW5UQrub9R2aa/rc+LADkIbK2iBzv7Z626RSNqh3w94y+UC/HQaBB7MpE8DV/nWiz+Hl5eWr6cvL7151ZrlDXTpv/cYg6b18CwunZzDpFW/bdq/1ueAOwtHzr7vCwXDbm+qm2xOwLYZovOPt8SIf01o2Gg1enkfEQ62rvrjVwiUMhdIo0QH/bEzAlXdk5zOOzjg666OzffSMbsnZmwP6rXfTD5w+JnQJ+NAD/ThiaRjz/d3dB9mlKEONYbqlqmuqAdSGbUILqHQJTAVjetFZtzXWkuNbtaN7I9UGnNa+biw1N5/BUq5awLNILqUbhzkbpxFDRRYl9kDRVOQ02CrbkIOsirG7fwRfepuLNXOVFBQ+UI6YBovrJgQuref1f3NXNhKxjjiIWv+g8yJvRW/HQg9m+2vEacQ8/FzAexI/itBKp0ZRs9lC3Ik+IpPfOvhEo5XaO17xJlnwEdBHTE0gN6VADTaFjCTv7I7fY8eDpydWddr1Z4ajc55P7THi1/caazErjUMj45cK9eSsbsxBjlRZZRzNtRLZiadywTwIQVh7TxPPfV1ds6ZuQNE4LclMvOajk3PZ7TTjp4cQ3MmYfT39UeQ4fyMxX06rwk72LkmD/F6RIewdlmpryPnEmv6dsKCKci7JfVPP7HniBVS5cZsDiSLwQD+AH3R9rFhl7vnf8gm9GPyUWA9lOqXSb8EkulnjPTnq7NcK7TnVim4SdJwOB/6jGC3lYzGOJXxai603T0vB0DjZAz8W5aEa8MOBwCllrsirIR7v2vOMoBnxmU74x+oF/BsnPCraNdYO9X4Z/Q1ZrynS</source>
  </file>
  <file path="Auth/Storage/Session.php" generated-path="Auth.Storage.Session.html" hash="179555456e11713edeb7ed382155c67f" package="Zend_Auth\Storage">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Storage"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="43" package="Zend_Auth\Storage">
      <extends/>
      <implements>\Zend_Auth_Storage_Interface</implements>
      <name>Zend_Auth_Storage_Session</name>
      <full_name>\Zend_Auth_Storage_Session</full_name>
      <docblock line="43">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="43" description="Zend"/>
        <tag name="package" line="43" description="Zend_Auth"/>
        <tag name="subpackage" line="43" description="Storage"/>
        <tag name="copyright" line="43" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="43" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <constant namespace="" line="48" package="Zend_Auth\Storage">
        <name>NAMESPACE_DEFAULT</name>
        <full_name>\Zend_Auth_Storage_Session::NAMESPACE_DEFAULT</full_name>
        <value>'Zend_Auth'</value>
        <docblock line="48">
          <description>Default session namespace</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="53" package="Zend_Auth\Storage">
        <name>MEMBER_DEFAULT</name>
        <full_name>\Zend_Auth_Storage_Session::MEMBER_DEFAULT</full_name>
        <value>'storage'</value>
        <docblock line="53">
          <description>Default session object member name</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="" line="60" package="Zend_Auth\Storage">
        <name>$_session</name>
        <full_name>\Zend_Auth_Storage_Session::_session</full_name>
        <default></default>
        <docblock line="60">
          <description>Object to proxy $_SESSION storage</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="\Zend_Session_Namespace" variable="">
            <type>\Zend_Session_Namespace</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="67" package="Zend_Auth\Storage">
        <name>$_namespace</name>
        <full_name>\Zend_Auth_Storage_Session::_namespace</full_name>
        <default></default>
        <docblock line="67">
          <description>Session namespace</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="74" package="Zend_Auth\Storage">
        <name>$_member</name>
        <full_name>\Zend_Auth_Storage_Session::_member</full_name>
        <default></default>
        <docblock line="74">
          <description>Session object member</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Zend_Auth\Storage">
        <name>__construct</name>
        <full_name>\Zend_Auth_Storage_Session::__construct()</full_name>
        <docblock line="82">
          <description>Sets session storage options and initializes session namespace object</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="mixed" variable="$namespace">
            <type>mixed</type>
          </tag>
          <tag name="param" line="82" description="" type="mixed" variable="$member">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default>self::NAMESPACE_DEFAULT</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$member</name>
          <default>self::MEMBER_DEFAULT</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="Zend_Auth\Storage">
        <name>getNamespace</name>
        <full_name>\Zend_Auth_Storage_Session::getNamespace()</full_name>
        <docblock line="94">
          <description>Returns the session namespace</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="Zend_Auth\Storage">
        <name>getMember</name>
        <full_name>\Zend_Auth_Storage_Session::getMember()</full_name>
        <docblock line="104">
          <description>Returns the name of the session object member</description>
          <long-description></long-description>
          <tag name="return" line="104" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="114" package="Zend_Auth\Storage">
        <name>isEmpty</name>
        <full_name>\Zend_Auth_Storage_Session::isEmpty()</full_name>
        <docblock line="114">
          <description>Defined by Zend_Auth_Storage_Interface</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::isEmpty()" refers="\Zend_Auth_Storage_Interface::isEmpty()" link="/classes/Zend_Auth_Storage_Interface.html#method_isEmpty"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="Zend_Auth\Storage">
        <name>read</name>
        <full_name>\Zend_Auth_Storage_Session::read()</full_name>
        <docblock line="124">
          <description>Defined by Zend_Auth_Storage_Interface</description>
          <long-description>Behavior is undefined when storage is empty.</long-description>
          <tag name="return" line="124" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::read()" refers="\Zend_Auth_Storage_Interface::read()" link="/classes/Zend_Auth_Storage_Interface.html#method_read"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="135" package="Zend_Auth\Storage">
        <name>write</name>
        <full_name>\Zend_Auth_Storage_Session::write()</full_name>
        <docblock line="135">
          <description>Defined by Zend_Auth_Storage_Interface</description>
          <long-description></long-description>
          <tag name="param" line="135" description="" type="mixed" variable="$contents">
            <type>mixed</type>
          </tag>
          <tag name="return" line="135" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::write()" refers="\Zend_Auth_Storage_Interface::write()" link="/classes/Zend_Auth_Storage_Interface.html#method_write"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contents</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="145" package="Zend_Auth\Storage">
        <name>clear</name>
        <full_name>\Zend_Auth_Storage_Session::clear()</full_name>
        <docblock line="145">
          <description>Defined by Zend_Auth_Storage_Interface</description>
          <long-description></long-description>
          <tag name="return" line="145" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Zend_Auth_Storage_Interface::clear()" refers="\Zend_Auth_Storage_Interface::clear()" link="/classes/Zend_Auth_Storage_Interface.html#method_clear"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="43" code="PPC:ERR-50005">No summary for class \Zend_Auth_Storage_Session</error>
    </parse_markers>
    <source>eJzlVk1v2zgQvftXzAIG6gS1lS3QS7btxk1cwEDiLqL00otASWObW4nUkpQVt8h/75CinNiSnBbdPa0ussg3b958cOg3fxbrYhCcng7gFD6jSOGDYjlWUn2hFbt4Pb+cLcKZ/7pbcw1alipBWPIMwX6W8d+YGDASzBpBYAXvwyvIeIJCI60xY2FxKdIMU8tScbOmdVosWPKFrYhGOFtH6T1OzL2ZWPTcmbNMS2AbxjMWZ5ZVyXK1dlakNkvHFU9xXGEM5M5xf7q9Prf2a2OK8yBYNoFNvlKck0TmgZcYkORxrJ20+RK2soSUpyCkAYUJ8g0Cg0QWW5BL57AJjVG+mEIoRa1JWgYZG0bhcHNE40soMmTEoG3KmQDMKTBrTUn07BeNTMo3VAgJwRzc6vN6eJ5jypnBbDvxFbpI6HMl1RbAFdStNWn2a9G0NGu3QbVr9kIjFb1rDiJXfLU2AJe7n6PkBF6dnb0evzr7/XXdLHeYrIXM5Ioj5TucwlwkExj5jFdVtcv1ieNtEkfPD1fFgmHhm+q63nNkG1SaS2G3h/N0SGvBYND08oVGfIw18sFFc2FQLVmCDq3wn5IrjKSgdn5h0YFFBx4d7NATOiUv/uhiD1FbEX10frtl/z8pUjBIMqZ1RyF8YqiD6STkKEwX6LFa3wbWgcuefU7hCpeszAydiJpHkEJduMI6QODeiRTawGJ6Mwv/ml7OoqvZh+mn6zt4W5fHebN1eYZc1gMuxzxG5Vx1eLmZ3byf3T51oeswOhx83E3MQsn7LQyjcBaG848L0E2BHbDBX2yY2uu3aNEZL7EZIsaUGL34tvOwJ2V7znJ+b2d1D/fOtJ99L2c/76G266KnTmnq4pMFsjD0qd085oIbzjL+FXW7ObyqQzkFowavBcHwMC0H23sBed1lTMcBlqVIrA6IItcRqkzM6JGOOkJjtjw/b7Xjy4Z1B9nvpRPnpT4CbtrZ6238LnpKPXxSkkOcJ6fnbeOpDWpyZUH2Cu/utlHL90lN9dCq1C2aUlFR7O3Xd0p3KVYOTAVVXKyOJneF5lHNYWY8TUvkj2i04OaC7zz4v6T5xlE8J/hpcdpqaSxxQT0Yb4/fbJ0yYynpL4c4qpPrWV6YbZ/K37jWaEYHHTN+921f/kNvS/xSAB3z4kC+QpY+l+Fe0f+u5npkNDODxoGxV9xhSBvJj0dUKW7ozDX2fYOgNyh74Bvj/6Qoz0aQUNO1274UP9dID4PvsBrLpg==</source>
  </file>
  <file path="Auth/Storage/Interface.php" generated-path="Auth.Storage.Interface.html" hash="336438156ed6a7db4183fbb365ec24e0" package="Zend_Auth\Storage">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="subpackage" line="0" description="Storage"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <interface namespace="" line="30" package="Zend_Auth\Storage">
      <name>Zend_Auth_Storage_Interface</name>
      <full_name>\Zend_Auth_Storage_Interface</full_name>
      <docblock line="30">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="30" description="Zend"/>
        <tag name="package" line="30" description="Zend_Auth"/>
        <tag name="subpackage" line="30" description="Storage"/>
        <tag name="copyright" line="30" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="30" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Zend_Auth\Storage">
        <name>isEmpty</name>
        <full_name>\Zend_Auth_Storage_Interface::isEmpty()</full_name>
        <docblock line="38">
          <description>Returns true if and only if storage is empty</description>
          <long-description></long-description>
          <tag name="throws" line="38" description="If it is impossible to determine whether storage is empty" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="38" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="Zend_Auth\Storage">
        <name>read</name>
        <full_name>\Zend_Auth_Storage_Interface::read()</full_name>
        <docblock line="48">
          <description>Returns the contents of storage</description>
          <long-description>Behavior is undefined when storage is empty.</long-description>
          <tag name="throws" line="48" description="If reading contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="48" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="Zend_Auth\Storage">
        <name>write</name>
        <full_name>\Zend_Auth_Storage_Interface::write()</full_name>
        <docblock line="57">
          <description>Writes $contents to storage</description>
          <long-description></long-description>
          <tag name="param" line="57" description="" type="mixed" variable="$contents">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="57" description="If writing $contents to storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="57" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contents</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="Zend_Auth\Storage">
        <name>clear</name>
        <full_name>\Zend_Auth_Storage_Interface::clear()</full_name>
        <docblock line="65">
          <description>Clears contents from storage</description>
          <long-description></long-description>
          <tag name="throws" line="65" description="If clearing contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type>\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="30" code="PPC:ERR-50009">No summary for interface ""</error>
    </parse_markers>
    <source>eJzlVMFu00AQvfsr5tBDEhE7VOqlIJG2BClS1UNThMQlWq/H8VJ719pdxw2If2dmbScC0gC94kvs2Z03772Zydt3dVFHyWQSwQQ+o87ggxUVtsY+UoSDt8ubxd1q0X89FMqBM42VCLkqEfizSb+g9OAN+AJBYwvXq/dQKonaIcWE52tpo7MSM0ZplS8oTsFayEexIRgdcgNkXzH2Tz7m28uQLkpnQGyFKkVaMqo1zaYIWcS2zKatynDaYgpULmB/vL+95PzC+/oySfJBWPyVdMbSVElPMSHK09QFasscdqaBTGWgjQeLEtUWQYA09Q5MHgoO0gT5JSxCoztOhhFM6gXJUf4Ex1dQlygIwbHlQgNWJIyzycQefT7QJL+hRZB0LVxnfj0fVVWYKeGx3MV9h+aSPjfG7gBCQ0NssLmPra8aX4QD6t1wtvLG0m+HQeBWbQoPcLN/HckxnM9mF9Pz2euLblgeUBbalGajkPxeXcFSyxhGveNt2+69HgfcwTh6/rorfBnu+qG67c4C2BatU0bz8dkyO6NYEg2j/L+4kERKe7S5oH3ca1r3ItbL4Sz6FnF+MIefCdyjb6x24G1D25eHUTa63PG769J567Cq/a7PGVLnPNetO1Jv8SSx9twTWiMV1lZVtXFOdesBGRKhSmnahwJpLexztWBuA0FIjaFN0X04Cb91k5I7kDdahmLKLTh1NH4TPSuTVlAaskN7x1vshjb/pOwaC7FVxjIb+rfCnJhmTFX/xjN+mSkWRab05sAlt7zgB/CDX786Uakn/vc84QODHzPhk1WeJvNsX5Q6cdwAWhGaROhqHRL+UWRL9VjksYKnNW6NOi2RoXG0Bz4i9obGxbrjBr+sZ5IRX9i0PwoK4Ny079EPVzVnjA==</source>
  </file>
  <file path="Auth.php" generated-path="Auth.html" hash="65b0d92da104b11ac25419fb91cd42f9" package="Zend_Auth">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Auth"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="29" package="Zend_Auth">
      <extends/>
      <name>Zend_Auth</name>
      <full_name>\Zend_Auth</full_name>
      <docblock line="29">
        <description></description>
        <long-description></long-description>
        <tag name="category" line="29" description="Zend"/>
        <tag name="package" line="29" description="Zend_Auth"/>
        <tag name="copyright" line="29" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="29" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="36" package="Zend_Auth">
        <name>$_instance</name>
        <full_name>\Zend_Auth::_instance</full_name>
        <default>null</default>
        <docblock line="36">
          <description>Singleton instance</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="\Zend_Auth" variable="">
            <type>\Zend_Auth</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="43" package="Zend_Auth">
        <name>$_storage</name>
        <full_name>\Zend_Auth::_storage</full_name>
        <default>null</default>
        <docblock line="43">
          <description>Persistent storage handler</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\Zend_Auth_Storage_Interface" variable="">
            <type>\Zend_Auth_Storage_Interface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="50" package="Zend_Auth">
        <name>__construct</name>
        <full_name>\Zend_Auth::__construct()</full_name>
        <docblock line="50">
          <description>Singleton pattern implementation makes "new" unavailable</description>
          <long-description></long-description>
          <tag name="return" line="50" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="58" package="Zend_Auth">
        <name>__clone</name>
        <full_name>\Zend_Auth::__clone()</full_name>
        <docblock line="58">
          <description>Singleton pattern implementation makes "clone" unavailable</description>
          <long-description></long-description>
          <tag name="return" line="58" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="68" package="Zend_Auth">
        <name>getInstance</name>
        <full_name>\Zend_Auth::getInstance()</full_name>
        <docblock line="68">
          <description>Returns an instance of Zend_Auth</description>
          <long-description>Singleton pattern implementation</long-description>
          <tag name="return" line="68" description="Provides a fluent interface" type="\Zend_Auth">
            <type>\Zend_Auth</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="Zend_Auth">
        <name>getStorage</name>
        <full_name>\Zend_Auth::getStorage()</full_name>
        <docblock line="84">
          <description>Returns the persistent storage handler</description>
          <long-description>Session storage is used by default unless a different storage adapter has been set.</long-description>
          <tag name="return" line="84" description="" type="\Zend_Auth_Storage_Interface">
            <type>\Zend_Auth_Storage_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="103" package="Zend_Auth">
        <name>setStorage</name>
        <full_name>\Zend_Auth::setStorage()</full_name>
        <docblock line="103">
          <description>Sets the persistent storage handler</description>
          <long-description></long-description>
          <tag name="param" line="103" description="" type="\Zend_Auth_Storage_Interface" variable="$storage">
            <type>\Zend_Auth_Storage_Interface</type>
          </tag>
          <tag name="return" line="103" description="Provides a fluent interface" type="\Zend_Auth">
            <type>\Zend_Auth</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$storage</name>
          <default></default>
          <type>\Zend_Auth_Storage_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="Zend_Auth">
        <name>authenticate</name>
        <full_name>\Zend_Auth::authenticate()</full_name>
        <docblock line="115">
          <description>Authenticates against the supplied adapter</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="\Zend_Auth_Adapter_Interface" variable="$adapter">
            <type>\Zend_Auth_Adapter_Interface</type>
          </tag>
          <tag name="return" line="115" description="" type="\Zend_Auth_Result">
            <type>\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$adapter</name>
          <default></default>
          <type>\Zend_Auth_Adapter_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="Zend_Auth">
        <name>hasIdentity</name>
        <full_name>\Zend_Auth::hasIdentity()</full_name>
        <docblock line="139">
          <description>Returns true if and only if an identity is available from storage</description>
          <long-description></long-description>
          <tag name="return" line="139" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="Zend_Auth">
        <name>getIdentity</name>
        <full_name>\Zend_Auth::getIdentity()</full_name>
        <docblock line="149">
          <description>Returns the identity from storage or null if no identity is available</description>
          <long-description></long-description>
          <tag name="return" line="149" description="" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="165" package="Zend_Auth">
        <name>clearIdentity</name>
        <full_name>\Zend_Auth::clearIdentity()</full_name>
        <docblock line="165">
          <description>Clears the identity from persistent storage</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="PPC:ERR-50005">No summary for class \Zend_Auth</error>
    </parse_markers>
    <source>eJzdV99v2zYQfvdfcSsM1A5mKyuWDUiWLFmWAgaCooi7PezFoKWTzYUWNZKy63b933dHUbKsWE429Gl6SUTdffzuux+kf/o5X+a96OSkByfwB2YJvDVihRttHmmFF+8nt3fvpnfh7cNSWrC6MDFCKhUCvxbzPzF24DS4JUKGG/hl+isoGWNmkdaEY7N5kSUKE0bZSLekdVrMRfwoFgSTeV8PGXYcu49uzNYT7y6U1SDWQioxV4xqdLFYei9iq5LRRiY42uAcaDuP/dvD/Tn7L53Lz6MorQIbf6I4x7FeRYFiRJRHc+upTVLY6gISmUCmHRiMUa4RBMQ634JO/YZVaIL0EgahyEpOmhH03AkKR7ojHL+FXKEgBMuSiwxwRYGxN4kY0K8rmqQ3bBBiMvPmzC/wkasVJlI4VNtxyNB1TK8LbbYAPqF+rZI5rM1uCrcsjQnFyMXSAdzW/w7iIbw5PT0bvTn97qysig8YLzOt9EIiCTu9gUkWj2EQpN1sNrWoQ49bKUTPi+VnY3gXque+/ObB1mis1Bl/7k+SPq1FvV5VtP+7eKNerIS1DeKfe2zp4+XnBKYyWyh0JInMrBNZjOFLZXC9FqYZuV+N/N/caEfdigmQp5Mx9GcVCFxCVih10Wvv954TYB1mjpy0YWWXgrvZHN13Ni2NZ5PMoUlFTbPNpD+rYLsY7CLOhSMwinxFLbQiShQELa/EI2XqFUn7ituxmhNtfgZdQc5rLZMOLmmRxR5xNos1CWOK2A2G3ujzl//MK1Y6w6/IjOG6WT14LMuDpc4tja52Qbw0iA6qNRy8N3pNk402hFQVXCbycMaLOfVAVXh1PAt0k0Cziql0o0emMOCSgMvLSxp/Kj0/3xXssGHIT/s7lxP1Fy8Phhe1aRCMnxBK27G07RaWJ3r+0qaYovXjq7Kio6mwlM/5FhJMRaEc1YUiI5IvkWmKpokpEpGTloRNRygic+Vj8XhGnuu8Mg/NBASH4/r3+VwdXVXd2pa/Fqp6iJlFPEArSNKyjvbeDf5VSIMzzYl8zRgRY0QBIwoYY7rAvL7Y8ww07S4qroJOFoPh0dpoBd1VGlN0/7Iu6JSiMwKOZQ36AeKr9V6d84Y6LyHQrouWKtRp/T2B2gJ2ycbbEmnJpzjFsBDcgl5HW+S5ktQnoQOeVe+mtGuS33c90CcPaKn/jgolGgwHL9ntiVTGb8ISBYvR1R7o8GJXdHs9RFfyt6Mfz77/AUZ0DuCas7siKEnTmfSJY7R8OY2FUhZSw1dFygFNc6oBPrxCGZb72ybuXWYLurjuCtRCTDfSzM9mbFjuepInQcg6mU8Spu+21DytKRBsGM7srA52mIcs2Y2upP1dKJl0AjaH1OhqYyQpVzvzEbJjdLSdS5dnJ7wpkPnxFV9nalv+DzJs4n+R1D9Gaul3ndouubnWrO/RStuTtVVEAeabg2JIe7fKdyofP7fqEJqsQRt/8+IwM304zI7IVvIjJn+z83NnTGdw/cYUeRrfRatggnEj7HbFBGblVfJIKdRIBkXSrd4tl/Ih8Z6O+hff6lrqtLrl8LDdT7p32ZH+0vsHhAO3ag==</source>
  </file>
  <file path="Version.php" generated-path="Version.html" hash="0a3cb5f7f931433638c397c7da6cd626" package="Zend_Version">
    <docblock line="0">
      <description>Zend Framework</description>
      <long-description>LICENSE

This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</long-description>
      <tag name="category" line="0" description="Zend"/>
      <tag name="package" line="0" description="Zend_Version"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="version" line="0" description="$Id$"/>
    </docblock>
    <class final="true" abstract="false" namespace="" line="30" package="Zend_Version">
      <extends/>
      <name>Zend_Version</name>
      <full_name>\Zend_Version</full_name>
      <docblock line="30">
        <description>Class to store and retrieve the version of Zend Framework.</description>
        <long-description></long-description>
        <tag name="category" line="30" description="Zend"/>
        <tag name="package" line="30" description="Zend_Version"/>
        <tag name="copyright" line="30" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag name="license" line="30" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      </docblock>
      <constant namespace="" line="35" package="Zend_Version">
        <name>VERSION</name>
        <full_name>\Zend_Version::VERSION</full_name>
        <value>'1.12.17dev'</value>
        <docblock line="35">
          <description>Zend Framework version identification - see compareVersion()</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="protected" namespace="" line="42" package="Zend_Version">
        <name>$_latestVersion</name>
        <full_name>\Zend_Version::_latestVersion</full_name>
        <default></default>
        <docblock line="42">
          <description>The latest stable version Zend Framework available</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="54" package="Zend_Version">
        <name>compareVersion</name>
        <full_name>\Zend_Version::compareVersion()</full_name>
        <docblock line="54">
          <description>Compare the specified Zend Framework version string $version
with the current Zend_Version::VERSION of Zend Framework.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;A version string (e.g. &quot;0.7.1&quot;).&lt;/p&gt;" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="-1 if the $version is older,&#10;                          0 if they are the same,&#10;                          and +1 if $version is newer." type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="67" package="Zend_Version">
        <name>getLatest</name>
        <full_name>\Zend_Version::getLatest()</full_name>
        <docblock line="67">
          <description>Fetches the version of the latest stable release</description>
          <long-description></long-description>
          <tag name="link" line="67" description="http://framework.zend.com/download/latest" link="http://framework.zend.com/download/latest"/>
          <tag name="return" line="67" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzdVlFv2zYQfvevuBUGLGexZAcoCiQLmi5LAQNBBjRpH4oBAU2dLC40KVCUNXfIf9+RIpVYcYI+jw+JRN999913H2n/9rEqq1F2dDSCI/iOKofPhm2w1eaBdtzm9fLy6ub2KrzdlaKGWjeGIxRCIrjXZvU3cgtWgy0RFLbw++0fIAVHVSPtMevCVo3KJeYOpRW2pH3arBh/YGuCUT7XQ4aKqf3Hpi566dOZrDWwLROSraRDNbpZlz6L2Mp81oocZy2ugMp57K9frk9dfmltdZplRWws/UF9plxvskAxI8qzVe2pLQvY6QZykYPSFgxyFFsEBlxXO9CFLxhbY6QXMwiN6jhph6BXllE7wr7B8RgqiYwQaic5U4Abasxlk4gB/SLSJL2hReAU5sMdv8BHbDaYC2ZR7tIwoQtOr2ttdgB+oH4vyhz27r+hqYVWXTwBGbEuLcBl/5jwKZzM5+9nJ/PF+84Yd8hLpaVeCyRtbz/BUvEUkqBu27a9rlOPG0Wi9dMTcMFwEwx03X3mwbYdYffxeJmPaS8bRdteSlbXTrjaatMNxaA1ArfopY+5NLx9h/+fJctGhVBMAvfi7HXw78ilePHcGp77Xi/yqrKiEKSOe52R+8iFelOR5QNWMg0Ymf/PtaotfLv6crv88wbOYbJIFyfp4kOO28nZaFj2zp0kUp5SausPUKw8INSf+pAZAS62zFCqEWq9R6My2tKFhLnDtYLD+L6rE1i/pHLZdeXtUlfIqWvKfkWXriKMt9ERHUa41EiixhhSbk/009OoyiEX7ndFTNgGYpm+DsCnIYUE03UK7+bph3Txbpr2CGT/xtAAicTTmi1AdNdXj0iXpJY5muOY+fqah+Qd9DoR/59IdMfxV1/6eVkyL5pB52F4zYocHidXNIp79w18F7E6/3WOdquvce40snT2qM5T9NmhwMrg+t5gJRnHZJIlf+XTytDfj9NscgyT8YKNT+jhAEjQOXxwHzj25Y6fc6hRFr0LpgHk8YUTP6PlJd0Wg4vLvjgrBv03yNA8UqiHNy6PXLdKapZnHdjQMYcO0+F5rNFee4hkOAKadKIaKeH8nIbgux6cv+mzaLcOBrnrw30D94c/3iD9BEvmflBQXKErVMnk9a5ZJbIfxSzo6YZqJs/GGFkX9BsD4ReiHbCHRN8iS9Ih29yTLuQDZekCqJMIc/YCpeBS1/hKwOPo6WnotYPlo5keR/8Bum/2Ig==</source>
  </file>
  <package name="Zend" full_name="Zend"/>
  <package name="Zend_Amf" full_name="Zend_Amf">
    <package name="Adobe" full_name="Zend_Amf\Adobe"/>
    <package name="Auth" full_name="Zend_Amf\Auth"/>
    <package name="Parse" full_name="Zend_Amf\Parse"/>
    <package name="Parse_Amf0" full_name="Zend_Amf\Parse_Amf0"/>
    <package name="Parse_Amf3" full_name="Zend_Amf\Parse_Amf3"/>
    <package name="Request" full_name="Zend_Amf\Request"/>
    <package name="Response" full_name="Zend_Amf\Response"/>
    <package name="Server" full_name="Zend_Amf\Server"/>
    <package name="Util" full_name="Zend_Amf\Util"/>
    <package name="Value" full_name="Zend_Amf\Value"/>
  </package>
  <package name="Zend_Auth" full_name="Zend_Auth">
    <package name="Adapter" full_name="Zend_Auth\Adapter"/>
    <package name="Storage" full_name="Zend_Auth\Storage"/>
    <package name="Zend_Auth_Adapter" full_name="Zend_Auth\Zend_Auth_Adapter"/>
    <package name="Zend_Auth_Adapter_Http" full_name="Zend_Auth\Zend_Auth_Adapter_Http"/>
  </package>
  <package name="Zend_Date" full_name="Zend_Date">
    <package name="Zend_Date_Cities" full_name="Zend_Date\Zend_Date_Cities"/>
    <package name="Zend_Date_DateObject" full_name="Zend_Date\Zend_Date_DateObject"/>
  </package>
  <package name="Zend_Loader" full_name="Zend_Loader">
    <package name="Autoloader" full_name="Zend_Loader\Autoloader"/>
    <package name="PluginLoader" full_name="Zend_Loader\PluginLoader"/>
  </package>
  <package name="Zend_Server" full_name="Zend_Server">
    <package name="Method" full_name="Zend_Server\Method"/>
    <package name="Reflection" full_name="Zend_Server\Reflection"/>
  </package>
  <package name="Zend_Session" full_name="Zend_Session">
    <package name="SaveHandler" full_name="Zend_Session\SaveHandler"/>
    <package name="Validator" full_name="Zend_Session\Validator"/>
  </package>
  <package name="Zend_Version" full_name="Zend_Version"/>
  <package name="global" full_name="global"/>
  <namespace name="global" full_name="global"/>
  <deprecated count="5"/>
</project>
